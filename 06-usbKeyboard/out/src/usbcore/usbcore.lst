                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module usbcore
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ReportDescriptor
                                     12 	.globl _SerialNumberStringDescriptor
                                     13 	.globl _ProductStringDescriptor
                                     14 	.globl _ManufacturerStringDescriptor
                                     15 	.globl _languageId
                                     16 	.globl _ConfigurationDescriptor
                                     17 	.globl _DeviceDescriptor
                                     18 	.globl _delay_ms
                                     19 	.globl _D12_set_endpoint_enable
                                     20 	.globl _D12_set_address
                                     21 	.globl _D12_write_endpoint_buffer
                                     22 	.globl _D12_read_endpoint_last_status
                                     23 	.globl _D12_Acknowlwdge_setup
                                     24 	.globl _D12_clear_buffer
                                     25 	.globl _D12_read_endpoint_buffer
                                     26 	.globl _D12_write_byte
                                     27 	.globl _D12_write_command
                                     28 	.globl _dump_hex
                                     29 	.globl _print_hex
                                     30 	.globl _Prints
                                     31 	.globl _memset
                                     32 	.globl _TF2
                                     33 	.globl _EXF2
                                     34 	.globl _RCLK
                                     35 	.globl _TCLK
                                     36 	.globl _EXEN2
                                     37 	.globl _TR2
                                     38 	.globl _C_T2
                                     39 	.globl _CP_RL2
                                     40 	.globl _T2CON_7
                                     41 	.globl _T2CON_6
                                     42 	.globl _T2CON_5
                                     43 	.globl _T2CON_4
                                     44 	.globl _T2CON_3
                                     45 	.globl _T2CON_2
                                     46 	.globl _T2CON_1
                                     47 	.globl _T2CON_0
                                     48 	.globl _PT2
                                     49 	.globl _ET2
                                     50 	.globl _CY
                                     51 	.globl _AC
                                     52 	.globl _F0
                                     53 	.globl _RS1
                                     54 	.globl _RS0
                                     55 	.globl _OV
                                     56 	.globl _F1
                                     57 	.globl _P
                                     58 	.globl _PS
                                     59 	.globl _PT1
                                     60 	.globl _PX1
                                     61 	.globl _PT0
                                     62 	.globl _PX0
                                     63 	.globl _RD
                                     64 	.globl _WR
                                     65 	.globl _T1
                                     66 	.globl _T0
                                     67 	.globl _INT1
                                     68 	.globl _INT0
                                     69 	.globl _TXD
                                     70 	.globl _RXD
                                     71 	.globl _P3_7
                                     72 	.globl _P3_6
                                     73 	.globl _P3_5
                                     74 	.globl _P3_4
                                     75 	.globl _P3_3
                                     76 	.globl _P3_2
                                     77 	.globl _P3_1
                                     78 	.globl _P3_0
                                     79 	.globl _EA
                                     80 	.globl _ES
                                     81 	.globl _ET1
                                     82 	.globl _EX1
                                     83 	.globl _ET0
                                     84 	.globl _EX0
                                     85 	.globl _P2_7
                                     86 	.globl _P2_6
                                     87 	.globl _P2_5
                                     88 	.globl _P2_4
                                     89 	.globl _P2_3
                                     90 	.globl _P2_2
                                     91 	.globl _P2_1
                                     92 	.globl _P2_0
                                     93 	.globl _SM0
                                     94 	.globl _SM1
                                     95 	.globl _SM2
                                     96 	.globl _REN
                                     97 	.globl _TB8
                                     98 	.globl _RB8
                                     99 	.globl _TI
                                    100 	.globl _RI
                                    101 	.globl _P1_7
                                    102 	.globl _P1_6
                                    103 	.globl _P1_5
                                    104 	.globl _P1_4
                                    105 	.globl _P1_3
                                    106 	.globl _P1_2
                                    107 	.globl _P1_1
                                    108 	.globl _P1_0
                                    109 	.globl _TF1
                                    110 	.globl _TR1
                                    111 	.globl _TF0
                                    112 	.globl _TR0
                                    113 	.globl _IE1
                                    114 	.globl _IT1
                                    115 	.globl _IE0
                                    116 	.globl _IT0
                                    117 	.globl _P0_7
                                    118 	.globl _P0_6
                                    119 	.globl _P0_5
                                    120 	.globl _P0_4
                                    121 	.globl _P0_3
                                    122 	.globl _P0_2
                                    123 	.globl _P0_1
                                    124 	.globl _P0_0
                                    125 	.globl _TH2
                                    126 	.globl _TL2
                                    127 	.globl _RCAP2H
                                    128 	.globl _RCAP2L
                                    129 	.globl _T2CON
                                    130 	.globl _B
                                    131 	.globl _ACC
                                    132 	.globl _PSW
                                    133 	.globl _IP
                                    134 	.globl _P3
                                    135 	.globl _IE
                                    136 	.globl _P2
                                    137 	.globl _SBUF
                                    138 	.globl _SCON
                                    139 	.globl _P1
                                    140 	.globl _TH1
                                    141 	.globl _TH0
                                    142 	.globl _TL1
                                    143 	.globl _TL0
                                    144 	.globl _TMOD
                                    145 	.globl _TCON
                                    146 	.globl _PCON
                                    147 	.globl _DPH
                                    148 	.globl _DPL
                                    149 	.globl _SP
                                    150 	.globl _P0
                                    151 	.globl _ConfigValue
                                    152 	.globl _Ep1InIsBusy
                                    153 	.globl _NeedZeroPacket
                                    154 	.globl _SendLength
                                    155 	.globl _pSendData
                                    156 	.globl _wLength
                                    157 	.globl _wIndex
                                    158 	.globl _wValue
                                    159 	.globl _bRequest
                                    160 	.globl _bmRequestType
                                    161 	.globl _usb_disconnect
                                    162 	.globl _usb_connect
                                    163 	.globl _usb_bus_isr_suspend
                                    164 	.globl _usb_bus_isr_reset
                                    165 	.globl _usb_bus_isr_ep0_out
                                    166 	.globl _usb_bus_isr_ep0_in
                                    167 	.globl _usb_bus_isr_ep1_out
                                    168 	.globl _usb_bus_isr_ep1_in
                                    169 	.globl _usb_bus_isr_ep2_out
                                    170 	.globl _usb_bus_isr_ep2_in
                                    171 	.globl _usb_bus_ep0_send_data
                                    172 ;--------------------------------------------------------
                                    173 ; special function registers
                                    174 ;--------------------------------------------------------
                                    175 	.area RSEG    (ABS,DATA)
      000000                        176 	.org 0x0000
                           000080   177 _P0	=	0x0080
                           000081   178 _SP	=	0x0081
                           000082   179 _DPL	=	0x0082
                           000083   180 _DPH	=	0x0083
                           000087   181 _PCON	=	0x0087
                           000088   182 _TCON	=	0x0088
                           000089   183 _TMOD	=	0x0089
                           00008A   184 _TL0	=	0x008a
                           00008B   185 _TL1	=	0x008b
                           00008C   186 _TH0	=	0x008c
                           00008D   187 _TH1	=	0x008d
                           000090   188 _P1	=	0x0090
                           000098   189 _SCON	=	0x0098
                           000099   190 _SBUF	=	0x0099
                           0000A0   191 _P2	=	0x00a0
                           0000A8   192 _IE	=	0x00a8
                           0000B0   193 _P3	=	0x00b0
                           0000B8   194 _IP	=	0x00b8
                           0000D0   195 _PSW	=	0x00d0
                           0000E0   196 _ACC	=	0x00e0
                           0000F0   197 _B	=	0x00f0
                           0000C8   198 _T2CON	=	0x00c8
                           0000CA   199 _RCAP2L	=	0x00ca
                           0000CB   200 _RCAP2H	=	0x00cb
                           0000CC   201 _TL2	=	0x00cc
                           0000CD   202 _TH2	=	0x00cd
                                    203 ;--------------------------------------------------------
                                    204 ; special function bits
                                    205 ;--------------------------------------------------------
                                    206 	.area RSEG    (ABS,DATA)
      000000                        207 	.org 0x0000
                           000080   208 _P0_0	=	0x0080
                           000081   209 _P0_1	=	0x0081
                           000082   210 _P0_2	=	0x0082
                           000083   211 _P0_3	=	0x0083
                           000084   212 _P0_4	=	0x0084
                           000085   213 _P0_5	=	0x0085
                           000086   214 _P0_6	=	0x0086
                           000087   215 _P0_7	=	0x0087
                           000088   216 _IT0	=	0x0088
                           000089   217 _IE0	=	0x0089
                           00008A   218 _IT1	=	0x008a
                           00008B   219 _IE1	=	0x008b
                           00008C   220 _TR0	=	0x008c
                           00008D   221 _TF0	=	0x008d
                           00008E   222 _TR1	=	0x008e
                           00008F   223 _TF1	=	0x008f
                           000090   224 _P1_0	=	0x0090
                           000091   225 _P1_1	=	0x0091
                           000092   226 _P1_2	=	0x0092
                           000093   227 _P1_3	=	0x0093
                           000094   228 _P1_4	=	0x0094
                           000095   229 _P1_5	=	0x0095
                           000096   230 _P1_6	=	0x0096
                           000097   231 _P1_7	=	0x0097
                           000098   232 _RI	=	0x0098
                           000099   233 _TI	=	0x0099
                           00009A   234 _RB8	=	0x009a
                           00009B   235 _TB8	=	0x009b
                           00009C   236 _REN	=	0x009c
                           00009D   237 _SM2	=	0x009d
                           00009E   238 _SM1	=	0x009e
                           00009F   239 _SM0	=	0x009f
                           0000A0   240 _P2_0	=	0x00a0
                           0000A1   241 _P2_1	=	0x00a1
                           0000A2   242 _P2_2	=	0x00a2
                           0000A3   243 _P2_3	=	0x00a3
                           0000A4   244 _P2_4	=	0x00a4
                           0000A5   245 _P2_5	=	0x00a5
                           0000A6   246 _P2_6	=	0x00a6
                           0000A7   247 _P2_7	=	0x00a7
                           0000A8   248 _EX0	=	0x00a8
                           0000A9   249 _ET0	=	0x00a9
                           0000AA   250 _EX1	=	0x00aa
                           0000AB   251 _ET1	=	0x00ab
                           0000AC   252 _ES	=	0x00ac
                           0000AF   253 _EA	=	0x00af
                           0000B0   254 _P3_0	=	0x00b0
                           0000B1   255 _P3_1	=	0x00b1
                           0000B2   256 _P3_2	=	0x00b2
                           0000B3   257 _P3_3	=	0x00b3
                           0000B4   258 _P3_4	=	0x00b4
                           0000B5   259 _P3_5	=	0x00b5
                           0000B6   260 _P3_6	=	0x00b6
                           0000B7   261 _P3_7	=	0x00b7
                           0000B0   262 _RXD	=	0x00b0
                           0000B1   263 _TXD	=	0x00b1
                           0000B2   264 _INT0	=	0x00b2
                           0000B3   265 _INT1	=	0x00b3
                           0000B4   266 _T0	=	0x00b4
                           0000B5   267 _T1	=	0x00b5
                           0000B6   268 _WR	=	0x00b6
                           0000B7   269 _RD	=	0x00b7
                           0000B8   270 _PX0	=	0x00b8
                           0000B9   271 _PT0	=	0x00b9
                           0000BA   272 _PX1	=	0x00ba
                           0000BB   273 _PT1	=	0x00bb
                           0000BC   274 _PS	=	0x00bc
                           0000D0   275 _P	=	0x00d0
                           0000D1   276 _F1	=	0x00d1
                           0000D2   277 _OV	=	0x00d2
                           0000D3   278 _RS0	=	0x00d3
                           0000D4   279 _RS1	=	0x00d4
                           0000D5   280 _F0	=	0x00d5
                           0000D6   281 _AC	=	0x00d6
                           0000D7   282 _CY	=	0x00d7
                           0000AD   283 _ET2	=	0x00ad
                           0000BD   284 _PT2	=	0x00bd
                           0000C8   285 _T2CON_0	=	0x00c8
                           0000C9   286 _T2CON_1	=	0x00c9
                           0000CA   287 _T2CON_2	=	0x00ca
                           0000CB   288 _T2CON_3	=	0x00cb
                           0000CC   289 _T2CON_4	=	0x00cc
                           0000CD   290 _T2CON_5	=	0x00cd
                           0000CE   291 _T2CON_6	=	0x00ce
                           0000CF   292 _T2CON_7	=	0x00cf
                           0000C8   293 _CP_RL2	=	0x00c8
                           0000C9   294 _C_T2	=	0x00c9
                           0000CA   295 _TR2	=	0x00ca
                           0000CB   296 _EXEN2	=	0x00cb
                           0000CC   297 _TCLK	=	0x00cc
                           0000CD   298 _RCLK	=	0x00cd
                           0000CE   299 _EXF2	=	0x00ce
                           0000CF   300 _TF2	=	0x00cf
                                    301 ;--------------------------------------------------------
                                    302 ; overlayable register banks
                                    303 ;--------------------------------------------------------
                                    304 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        305 	.ds 8
                                    306 ;--------------------------------------------------------
                                    307 ; internal ram data
                                    308 ;--------------------------------------------------------
                                    309 	.area DSEG    (DATA)
      000000                        310 _bmRequestType::
      000000                        311 	.ds 1
      000001                        312 _bRequest::
      000001                        313 	.ds 1
      000002                        314 _wValue::
      000002                        315 	.ds 2
      000004                        316 _wIndex::
      000004                        317 	.ds 2
      000006                        318 _wLength::
      000006                        319 	.ds 2
      000008                        320 _pSendData::
      000008                        321 	.ds 3
      00000B                        322 _SendLength::
      00000B                        323 	.ds 2
      00000D                        324 _NeedZeroPacket::
      00000D                        325 	.ds 1
      00000E                        326 _Ep1InIsBusy::
      00000E                        327 	.ds 1
      00000F                        328 _ConfigValue::
      00000F                        329 	.ds 1
      000010                        330 _usb_bus_isr_ep0_out_buffer_65536_57:
      000010                        331 	.ds 16
      000020                        332 _usb_bus_isr_ep1_out_buf_65536_74:
      000020                        333 	.ds 1
                                    334 ;--------------------------------------------------------
                                    335 ; overlayable items in internal ram 
                                    336 ;--------------------------------------------------------
                                    337 ;--------------------------------------------------------
                                    338 ; indirectly addressable internal ram data
                                    339 ;--------------------------------------------------------
                                    340 	.area ISEG    (DATA)
                                    341 ;--------------------------------------------------------
                                    342 ; absolute internal ram data
                                    343 ;--------------------------------------------------------
                                    344 	.area IABS    (ABS,DATA)
                                    345 	.area IABS    (ABS,DATA)
                                    346 ;--------------------------------------------------------
                                    347 ; bit data
                                    348 ;--------------------------------------------------------
                                    349 	.area BSEG    (BIT)
                                    350 ;--------------------------------------------------------
                                    351 ; paged external ram data
                                    352 ;--------------------------------------------------------
                                    353 	.area PSEG    (PAG,XDATA)
                                    354 ;--------------------------------------------------------
                                    355 ; external ram data
                                    356 ;--------------------------------------------------------
                                    357 	.area XSEG    (XDATA)
                                    358 ;--------------------------------------------------------
                                    359 ; absolute external ram data
                                    360 ;--------------------------------------------------------
                                    361 	.area XABS    (ABS,XDATA)
                                    362 ;--------------------------------------------------------
                                    363 ; external initialized ram data
                                    364 ;--------------------------------------------------------
                                    365 	.area XISEG   (XDATA)
                                    366 	.area HOME    (CODE)
                                    367 	.area GSINIT0 (CODE)
                                    368 	.area GSINIT1 (CODE)
                                    369 	.area GSINIT2 (CODE)
                                    370 	.area GSINIT3 (CODE)
                                    371 	.area GSINIT4 (CODE)
                                    372 	.area GSINIT5 (CODE)
                                    373 	.area GSINIT  (CODE)
                                    374 	.area GSFINAL (CODE)
                                    375 	.area CSEG    (CODE)
                                    376 ;--------------------------------------------------------
                                    377 ; global & static initialisations
                                    378 ;--------------------------------------------------------
                                    379 	.area HOME    (CODE)
                                    380 	.area GSINIT  (CODE)
                                    381 	.area GSFINAL (CODE)
                                    382 	.area GSINIT  (CODE)
                                    383 ;--------------------------------------------------------
                                    384 ; Home
                                    385 ;--------------------------------------------------------
                                    386 	.area HOME    (CODE)
                                    387 	.area HOME    (CODE)
                                    388 ;--------------------------------------------------------
                                    389 ; code
                                    390 ;--------------------------------------------------------
                                    391 	.area CSEG    (CODE)
                                    392 ;------------------------------------------------------------
                                    393 ;Allocation info for local variables in function 'usb_disconnect'
                                    394 ;------------------------------------------------------------
                                    395 ;	src/usbcore.c:285: void usb_disconnect(void)
                                    396 ;	-----------------------------------------
                                    397 ;	 function usb_disconnect
                                    398 ;	-----------------------------------------
      000000                        399 _usb_disconnect:
                           000007   400 	ar7 = 0x07
                           000006   401 	ar6 = 0x06
                           000005   402 	ar5 = 0x05
                           000004   403 	ar4 = 0x04
                           000003   404 	ar3 = 0x03
                           000002   405 	ar2 = 0x02
                           000001   406 	ar1 = 0x01
                           000000   407 	ar0 = 0x00
                                    408 ;	src/usbcore.c:288: Prints("usb disconnect\n");
      000000 90r01r14         [24]  409 	mov	dptr,#___str_0
      000003 75 F0 80         [24]  410 	mov	b,#0x80
      000006 12r00r00         [24]  411 	lcall	_Prints
                                    412 ;	src/usbcore.c:290: D12_write_command(D12_SET_MODE);    /* set mode */
      000009 75 82 F3         [24]  413 	mov	dpl,#0xf3
      00000C 12r00r00         [24]  414 	lcall	_D12_write_command
                                    415 ;	src/usbcore.c:291: D12_write_byte(0x06);               /* byte1, pull-up R disconnect, indicate usb disconnet */
      00000F 75 82 06         [24]  416 	mov	dpl,#0x06
      000012 12r00r00         [24]  417 	lcall	_D12_write_byte
                                    418 ;	src/usbcore.c:292: D12_write_byte(0x47);               /* byte2 */
      000015 75 82 47         [24]  419 	mov	dpl,#0x47
      000018 12r00r00         [24]  420 	lcall	_D12_write_byte
                                    421 ;	src/usbcore.c:293: delay_ms(1000);
      00001B 90 03 E8         [24]  422 	mov	dptr,#0x03e8
                                    423 ;	src/usbcore.c:294: }
      00001E 02r00r00         [24]  424 	ljmp	_delay_ms
                                    425 ;------------------------------------------------------------
                                    426 ;Allocation info for local variables in function 'usb_connect'
                                    427 ;------------------------------------------------------------
                                    428 ;	src/usbcore.c:296: void usb_connect(void)
                                    429 ;	-----------------------------------------
                                    430 ;	 function usb_connect
                                    431 ;	-----------------------------------------
      000021                        432 _usb_connect:
                                    433 ;	src/usbcore.c:299: Prints("usb connect\n");
      000021 90r01r24         [24]  434 	mov	dptr,#___str_1
      000024 75 F0 80         [24]  435 	mov	b,#0x80
      000027 12r00r00         [24]  436 	lcall	_Prints
                                    437 ;	src/usbcore.c:301: D12_write_command(D12_SET_MODE);    /* set mode */
      00002A 75 82 F3         [24]  438 	mov	dpl,#0xf3
      00002D 12r00r00         [24]  439 	lcall	_D12_write_command
                                    440 ;	src/usbcore.c:302: D12_write_byte(0x16);               /* byte1, pull-up R connect, indicate usb connet */
      000030 75 82 16         [24]  441 	mov	dpl,#0x16
      000033 12r00r00         [24]  442 	lcall	_D12_write_byte
                                    443 ;	src/usbcore.c:303: D12_write_byte(0x47);               /* byte2 */
      000036 75 82 47         [24]  444 	mov	dpl,#0x47
                                    445 ;	src/usbcore.c:304: }
      000039 02r00r00         [24]  446 	ljmp	_D12_write_byte
                                    447 ;------------------------------------------------------------
                                    448 ;Allocation info for local variables in function 'usb_bus_isr_suspend'
                                    449 ;------------------------------------------------------------
                                    450 ;	src/usbcore.c:306: void usb_bus_isr_suspend()
                                    451 ;	-----------------------------------------
                                    452 ;	 function usb_bus_isr_suspend
                                    453 ;	-----------------------------------------
      00003C                        454 _usb_bus_isr_suspend:
                                    455 ;	src/usbcore.c:309: Prints("usb core isr suspend\n");
      00003C 90r01r31         [24]  456 	mov	dptr,#___str_2
      00003F 75 F0 80         [24]  457 	mov	b,#0x80
                                    458 ;	src/usbcore.c:311: }
      000042 02r00r00         [24]  459 	ljmp	_Prints
                                    460 ;------------------------------------------------------------
                                    461 ;Allocation info for local variables in function 'usb_bus_isr_reset'
                                    462 ;------------------------------------------------------------
                                    463 ;	src/usbcore.c:313: void usb_bus_isr_reset()
                                    464 ;	-----------------------------------------
                                    465 ;	 function usb_bus_isr_reset
                                    466 ;	-----------------------------------------
      000045                        467 _usb_bus_isr_reset:
                                    468 ;	src/usbcore.c:316: Prints("usb core isr reset\n");
      000045 90r01r47         [24]  469 	mov	dptr,#___str_3
      000048 75 F0 80         [24]  470 	mov	b,#0x80
      00004B 12r00r00         [24]  471 	lcall	_Prints
                                    472 ;	src/usbcore.c:318: Ep1InIsBusy = 0;
      00004E 75*0E 00         [24]  473 	mov	_Ep1InIsBusy,#0x00
                                    474 ;	src/usbcore.c:319: }
      000051 22               [24]  475 	ret
                                    476 ;------------------------------------------------------------
                                    477 ;Allocation info for local variables in function 'usb_bus_isr_ep0_out'
                                    478 ;------------------------------------------------------------
                                    479 ;buffer                    Allocated with name '_usb_bus_isr_ep0_out_buffer_65536_57'
                                    480 ;------------------------------------------------------------
                                    481 ;	src/usbcore.c:332: void usb_bus_isr_ep0_out()
                                    482 ;	-----------------------------------------
                                    483 ;	 function usb_bus_isr_ep0_out
                                    484 ;	-----------------------------------------
      000052                        485 _usb_bus_isr_ep0_out:
                                    486 ;	src/usbcore.c:336: Prints("usb isr ep0 out\n");
      000052 90r01r5B         [24]  487 	mov	dptr,#___str_4
      000055 75 F0 80         [24]  488 	mov	b,#0x80
      000058 12r00r00         [24]  489 	lcall	_Prints
                                    490 ;	src/usbcore.c:338: memset(buffer, 0, sizeof(buffer));
      00005B 75*00 00         [24]  491 	mov	_memset_PARM_2,#0x00
      00005E 75*00 10         [24]  492 	mov	_memset_PARM_3,#0x10
      000061 75*01 00         [24]  493 	mov	(_memset_PARM_3 + 1),#0x00
      000064 90r00r10         [24]  494 	mov	dptr,#_usb_bus_isr_ep0_out_buffer_65536_57
      000067 75 F0 40         [24]  495 	mov	b,#0x40
      00006A 12r00r00         [24]  496 	lcall	_memset
                                    497 ;	src/usbcore.c:341: if (D12_read_endpoint_last_status(0) & 0x20) {
      00006D 75 82 00         [24]  498 	mov	dpl,#0x00
      000070 12r00r00         [24]  499 	lcall	_D12_read_endpoint_last_status
      000073 E5 82            [12]  500 	mov	a,dpl
      000075 20 E5 03         [24]  501 	jb	acc.5,00299$
      000078 02r04rA9         [24]  502 	ljmp	00163$
      00007B                        503 00299$:
                                    504 ;	src/usbcore.c:342: D12_read_endpoint_buffer(0, 16, buffer);
      00007B 75*00r10         [24]  505 	mov	_D12_read_endpoint_buffer_PARM_3,#_usb_bus_isr_ep0_out_buffer_65536_57
      00007E 75*01 00         [24]  506 	mov	(_D12_read_endpoint_buffer_PARM_3 + 1),#0x00
      000081 75*02 40         [24]  507 	mov	(_D12_read_endpoint_buffer_PARM_3 + 2),#0x40
      000084 75*00 10         [24]  508 	mov	_D12_read_endpoint_buffer_PARM_2,#0x10
      000087 75 82 00         [24]  509 	mov	dpl,#0x00
      00008A 12r00r00         [24]  510 	lcall	_D12_read_endpoint_buffer
                                    511 ;	src/usbcore.c:343: D12_Acknowlwdge_setup();
      00008D 12r00r00         [24]  512 	lcall	_D12_Acknowlwdge_setup
                                    513 ;	src/usbcore.c:344: D12_clear_buffer();
      000090 12r00r00         [24]  514 	lcall	_D12_clear_buffer
                                    515 ;	src/usbcore.c:346: bmRequestType = buffer[0];
      000093 85*10*00         [24]  516 	mov	_bmRequestType,_usb_bus_isr_ep0_out_buffer_65536_57
                                    517 ;	src/usbcore.c:347: bRequest = buffer[1];
      000096 85*11*01         [24]  518 	mov	_bRequest,(_usb_bus_isr_ep0_out_buffer_65536_57 + 0x0001)
                                    519 ;	src/usbcore.c:348: wValue = buffer[2] | (((uint16)buffer[3]) << 8);
      000099 AF*13            [24]  520 	mov	r7,(_usb_bus_isr_ep0_out_buffer_65536_57 + 0x0003)
      00009B 7E 00            [12]  521 	mov	r6,#0x00
      00009D AC*12            [24]  522 	mov	r4,(_usb_bus_isr_ep0_out_buffer_65536_57 + 0x0002)
      00009F 7D 00            [12]  523 	mov	r5,#0x00
      0000A1 EE               [12]  524 	mov	a,r6
      0000A2 4C               [12]  525 	orl	a,r4
      0000A3 F5*02            [12]  526 	mov	_wValue,a
      0000A5 EF               [12]  527 	mov	a,r7
      0000A6 4D               [12]  528 	orl	a,r5
      0000A7 F5*03            [12]  529 	mov	(_wValue + 1),a
                                    530 ;	src/usbcore.c:349: wIndex = buffer[4] | (((uint16)buffer[5]) << 8);
      0000A9 AF*15            [24]  531 	mov	r7,(_usb_bus_isr_ep0_out_buffer_65536_57 + 0x0005)
      0000AB 7E 00            [12]  532 	mov	r6,#0x00
      0000AD AC*14            [24]  533 	mov	r4,(_usb_bus_isr_ep0_out_buffer_65536_57 + 0x0004)
      0000AF 7D 00            [12]  534 	mov	r5,#0x00
      0000B1 EE               [12]  535 	mov	a,r6
      0000B2 4C               [12]  536 	orl	a,r4
      0000B3 F5*04            [12]  537 	mov	_wIndex,a
      0000B5 EF               [12]  538 	mov	a,r7
      0000B6 4D               [12]  539 	orl	a,r5
      0000B7 F5*05            [12]  540 	mov	(_wIndex + 1),a
                                    541 ;	src/usbcore.c:350: wLength = buffer[6] | (((uint16)buffer[7]) << 8);
      0000B9 AF*17            [24]  542 	mov	r7,(_usb_bus_isr_ep0_out_buffer_65536_57 + 0x0007)
      0000BB 7E 00            [12]  543 	mov	r6,#0x00
      0000BD AC*16            [24]  544 	mov	r4,(_usb_bus_isr_ep0_out_buffer_65536_57 + 0x0006)
      0000BF 7D 00            [12]  545 	mov	r5,#0x00
      0000C1 EE               [12]  546 	mov	a,r6
      0000C2 4C               [12]  547 	orl	a,r4
      0000C3 F5*06            [12]  548 	mov	_wLength,a
      0000C5 EF               [12]  549 	mov	a,r7
      0000C6 4D               [12]  550 	orl	a,r5
      0000C7 F5*07            [12]  551 	mov	(_wLength + 1),a
                                    552 ;	src/usbcore.c:352: if ((bmRequestType & 0x80) == 0x80) {   /* input request */
      0000C9 AE*00            [24]  553 	mov	r6,_bmRequestType
      0000CB 53 06 80         [24]  554 	anl	ar6,#0x80
      0000CE 7F 00            [12]  555 	mov	r7,#0x00
      0000D0 BE 80 05         [24]  556 	cjne	r6,#0x80,00300$
      0000D3 BF 00 02         [24]  557 	cjne	r7,#0x00,00300$
      0000D6 80 03            [24]  558 	sjmp	00301$
      0000D8                        559 00300$:
      0000D8 02r03r9C         [24]  560 	ljmp	00160$
      0000DB                        561 00301$:
                                    562 ;	src/usbcore.c:355: switch ((bmRequestType >> 5) & 0x3) {
      0000DB E5*00            [12]  563 	mov	a,_bmRequestType
      0000DD C4               [12]  564 	swap	a
      0000DE 03               [12]  565 	rr	a
      0000DF 54 07            [12]  566 	anl	a,#0x07
      0000E1 FF               [12]  567 	mov	r7,a
      0000E2 53 07 03         [24]  568 	anl	ar7,#0x03
      0000E5 7E 00            [12]  569 	mov	r6,#0x00
      0000E7 BF 00 05         [24]  570 	cjne	r7,#0x00,00302$
      0000EA BE 00 02         [24]  571 	cjne	r6,#0x00,00302$
      0000ED 80 15            [24]  572 	sjmp	00101$
      0000EF                        573 00302$:
      0000EF BF 01 06         [24]  574 	cjne	r7,#0x01,00303$
      0000F2 BE 00 03         [24]  575 	cjne	r6,#0x00,00303$
      0000F5 02r03r81         [24]  576 	ljmp	00139$
      0000F8                        577 00303$:
      0000F8 BF 02 06         [24]  578 	cjne	r7,#0x02,00304$
      0000FB BE 00 03         [24]  579 	cjne	r6,#0x00,00304$
      0000FE 02r03r8A         [24]  580 	ljmp	00140$
      000101                        581 00304$:
      000101 02r03r93         [24]  582 	ljmp	00141$
                                    583 ;	src/usbcore.c:356: case 0:                             /* stander request */
      000104                        584 00101$:
                                    585 ;	src/usbcore.c:358: Prints("USB stand input request: ");
      000104 90r01r6C         [24]  586 	mov	dptr,#___str_5
      000107 75 F0 80         [24]  587 	mov	b,#0x80
      00010A 12r00r00         [24]  588 	lcall	_Prints
                                    589 ;	src/usbcore.c:360: switch (bRequest) {
      00010D E4               [12]  590 	clr	a
      00010E B5*01 03         [24]  591 	cjne	a,_bRequest,00305$
      000111 02r03r66         [24]  592 	ljmp	00135$
      000114                        593 00305$:
      000114 74 06            [12]  594 	mov	a,#0x06
      000116 B5*01 02         [24]  595 	cjne	a,_bRequest,00306$
      000119 80 23            [24]  596 	sjmp	00103$
      00011B                        597 00306$:
      00011B 74 08            [12]  598 	mov	a,#0x08
      00011D B5*01 02         [24]  599 	cjne	a,_bRequest,00307$
      000120 80 13            [24]  600 	sjmp	00102$
      000122                        601 00307$:
      000122 74 0A            [12]  602 	mov	a,#0x0a
      000124 B5*01 03         [24]  603 	cjne	a,_bRequest,00308$
      000127 02r03r5D         [24]  604 	ljmp	00134$
      00012A                        605 00308$:
      00012A 74 0C            [12]  606 	mov	a,#0x0c
      00012C B5*01 03         [24]  607 	cjne	a,_bRequest,00309$
      00012F 02r03r6F         [24]  608 	ljmp	00136$
      000132                        609 00309$:
      000132 02r03r78         [24]  610 	ljmp	00137$
                                    611 ;	src/usbcore.c:361: case GET_CONFIGURATION:         /* get configuration */
      000135                        612 00102$:
                                    613 ;	src/usbcore.c:363: Prints("Get configuration\n");
      000135 90r01r86         [24]  614 	mov	dptr,#___str_6
      000138 75 F0 80         [24]  615 	mov	b,#0x80
                                    616 ;	src/usbcore.c:365: break;
      00013B 02r00r00         [24]  617 	ljmp	_Prints
                                    618 ;	src/usbcore.c:366: case GET_DESCRIPTOR:
      00013E                        619 00103$:
                                    620 ;	src/usbcore.c:368: Prints("Get descriptor -- ");
      00013E 90r01r99         [24]  621 	mov	dptr,#___str_7
      000141 75 F0 80         [24]  622 	mov	b,#0x80
      000144 12r00r00         [24]  623 	lcall	_Prints
                                    624 ;	src/usbcore.c:372: switch ((wValue >> 8) & 0xFF) {
      000147 AF*03            [24]  625 	mov	r7,(_wValue + 1)
      000149 BF 01 02         [24]  626 	cjne	r7,#0x01,00310$
      00014C 80 14            [24]  627 	sjmp	00104$
      00014E                        628 00310$:
      00014E BF 02 02         [24]  629 	cjne	r7,#0x02,00311$
      000151 80 61            [24]  630 	sjmp	00110$
      000153                        631 00311$:
      000153 BF 03 03         [24]  632 	cjne	r7,#0x03,00312$
      000156 02r02r15         [24]  633 	ljmp	00116$
      000159                        634 00312$:
      000159 BF 22 03         [24]  635 	cjne	r7,#0x22,00313$
      00015C 02r02rFE         [24]  636 	ljmp	00127$
      00015F                        637 00313$:
      00015F 02r03r45         [24]  638 	ljmp	00132$
                                    639 ;	src/usbcore.c:373: case DEVICE_DESCRIPTOR:
      000162                        640 00104$:
                                    641 ;	src/usbcore.c:375: Prints("device descriptor\n");
      000162 90r01rAC         [24]  642 	mov	dptr,#___str_8
      000165 75 F0 80         [24]  643 	mov	b,#0x80
      000168 12r00r00         [24]  644 	lcall	_Prints
                                    645 ;	src/usbcore.c:377: pSendData = (uint8 *)DeviceDescriptor;
      00016B 75*08r00         [24]  646 	mov	_pSendData,#_DeviceDescriptor
      00016E 75*09s00         [24]  647 	mov	(_pSendData + 1),#(_DeviceDescriptor >> 8)
      000171 75*0A 80         [24]  648 	mov	(_pSendData + 2),#0x80
                                    649 ;	src/usbcore.c:378: if (wLength > DeviceDescriptor[0]) {
      000174 90r00r00         [24]  650 	mov	dptr,#_DeviceDescriptor
      000177 E4               [12]  651 	clr	a
      000178 93               [24]  652 	movc	a,@a+dptr
      000179 FE               [12]  653 	mov	r6,a
      00017A 7F 00            [12]  654 	mov	r7,#0x00
      00017C C3               [12]  655 	clr	c
      00017D EE               [12]  656 	mov	a,r6
      00017E 95*06            [12]  657 	subb	a,_wLength
      000180 EF               [12]  658 	mov	a,r7
      000181 95*07            [12]  659 	subb	a,(_wLength + 1)
      000183 50 26            [24]  660 	jnc	00108$
                                    661 ;	src/usbcore.c:379: SendLength = DeviceDescriptor[0];
      000185 8E*0B            [24]  662 	mov	_SendLength,r6
      000187 8F*0C            [24]  663 	mov	(_SendLength + 1),r7
                                    664 ;	src/usbcore.c:380: if (SendLength % DeviceDescriptor[7] == 0)
      000189 90r00r07         [24]  665 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      00018C E4               [12]  666 	clr	a
      00018D 93               [24]  667 	movc	a,@a+dptr
      00018E FF               [12]  668 	mov	r7,a
      00018F 8F*00            [24]  669 	mov	__moduint_PARM_2,r7
      000191 75*01 00         [24]  670 	mov	(__moduint_PARM_2 + 1),#0x00
      000194 85*0B 82         [24]  671 	mov	dpl,_SendLength
      000197 85*0C 83         [24]  672 	mov	dph,(_SendLength + 1)
      00019A 12r00r00         [24]  673 	lcall	__moduint
      00019D E5 82            [12]  674 	mov	a,dpl
      00019F 85 83 F0         [24]  675 	mov	b,dph
      0001A2 45 F0            [12]  676 	orl	a,b
      0001A4 70 0B            [24]  677 	jnz	00109$
                                    678 ;	src/usbcore.c:381: NeedZeroPacket = 1;
      0001A6 75*0D 01         [24]  679 	mov	_NeedZeroPacket,#0x01
      0001A9 80 06            [24]  680 	sjmp	00109$
      0001AB                        681 00108$:
                                    682 ;	src/usbcore.c:383: SendLength = wLength;
      0001AB 85*06*0B         [24]  683 	mov	_SendLength,_wLength
      0001AE 85*07*0C         [24]  684 	mov	(_SendLength + 1),(_wLength + 1)
      0001B1                        685 00109$:
                                    686 ;	src/usbcore.c:385: usb_bus_ep0_send_data();
                                    687 ;	src/usbcore.c:386: break;
      0001B1 02r05r2E         [24]  688 	ljmp	_usb_bus_ep0_send_data
                                    689 ;	src/usbcore.c:387: case CONFIGURATION_DESCRIPTOR:
      0001B4                        690 00110$:
                                    691 ;	src/usbcore.c:389: Prints("configuration descriptor\n");
      0001B4 90r01rBF         [24]  692 	mov	dptr,#___str_9
      0001B7 75 F0 80         [24]  693 	mov	b,#0x80
      0001BA 12r00r00         [24]  694 	lcall	_Prints
                                    695 ;	src/usbcore.c:391: pSendData = (uint8 *)ConfigurationDescriptor;
      0001BD 75*08r12         [24]  696 	mov	_pSendData,#_ConfigurationDescriptor
      0001C0 75*09s00         [24]  697 	mov	(_pSendData + 1),#(_ConfigurationDescriptor >> 8)
      0001C3 75*0A 80         [24]  698 	mov	(_pSendData + 2),#0x80
                                    699 ;	src/usbcore.c:392: SendLength = ConfigurationDescriptor[3] * 256 + ConfigurationDescriptor[2];
      0001C6 90r00r15         [24]  700 	mov	dptr,#(_ConfigurationDescriptor + 0x0003)
      0001C9 E4               [12]  701 	clr	a
      0001CA 93               [24]  702 	movc	a,@a+dptr
      0001CB FE               [12]  703 	mov	r6,a
      0001CC 7F 00            [12]  704 	mov	r7,#0x00
      0001CE 90r00r14         [24]  705 	mov	dptr,#(_ConfigurationDescriptor + 0x0002)
      0001D1 E4               [12]  706 	clr	a
      0001D2 93               [24]  707 	movc	a,@a+dptr
      0001D3 FD               [12]  708 	mov	r5,a
      0001D4 7C 00            [12]  709 	mov	r4,#0x00
      0001D6 2F               [12]  710 	add	a,r7
      0001D7 FF               [12]  711 	mov	r7,a
      0001D8 EC               [12]  712 	mov	a,r4
      0001D9 3E               [12]  713 	addc	a,r6
      0001DA FE               [12]  714 	mov	r6,a
      0001DB 8F*0B            [24]  715 	mov	_SendLength,r7
      0001DD 8E*0C            [24]  716 	mov	(_SendLength + 1),r6
                                    717 ;	src/usbcore.c:393: if (wLength > SendLength) {
      0001DF C3               [12]  718 	clr	c
      0001E0 E5*0B            [12]  719 	mov	a,_SendLength
      0001E2 95*06            [12]  720 	subb	a,_wLength
      0001E4 E5*0C            [12]  721 	mov	a,(_SendLength + 1)
      0001E6 95*07            [12]  722 	subb	a,(_wLength + 1)
      0001E8 50 22            [24]  723 	jnc	00114$
                                    724 ;	src/usbcore.c:394: if (SendLength % DeviceDescriptor[7] == 0)
      0001EA 90r00r07         [24]  725 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      0001ED E4               [12]  726 	clr	a
      0001EE 93               [24]  727 	movc	a,@a+dptr
      0001EF FF               [12]  728 	mov	r7,a
      0001F0 8F*00            [24]  729 	mov	__moduint_PARM_2,r7
      0001F2 75*01 00         [24]  730 	mov	(__moduint_PARM_2 + 1),#0x00
      0001F5 85*0B 82         [24]  731 	mov	dpl,_SendLength
      0001F8 85*0C 83         [24]  732 	mov	dph,(_SendLength + 1)
      0001FB 12r00r00         [24]  733 	lcall	__moduint
      0001FE E5 82            [12]  734 	mov	a,dpl
      000200 85 83 F0         [24]  735 	mov	b,dph
      000203 45 F0            [12]  736 	orl	a,b
      000205 70 0B            [24]  737 	jnz	00115$
                                    738 ;	src/usbcore.c:395: NeedZeroPacket = 1;
      000207 75*0D 01         [24]  739 	mov	_NeedZeroPacket,#0x01
      00020A 80 06            [24]  740 	sjmp	00115$
      00020C                        741 00114$:
                                    742 ;	src/usbcore.c:397: SendLength = wLength;
      00020C 85*06*0B         [24]  743 	mov	_SendLength,_wLength
      00020F 85*07*0C         [24]  744 	mov	(_SendLength + 1),(_wLength + 1)
      000212                        745 00115$:
                                    746 ;	src/usbcore.c:399: usb_bus_ep0_send_data();
                                    747 ;	src/usbcore.c:400: break;
      000212 02r05r2E         [24]  748 	ljmp	_usb_bus_ep0_send_data
                                    749 ;	src/usbcore.c:401: case STRING_DESCRIPTOR:
      000215                        750 00116$:
                                    751 ;	src/usbcore.c:403: Prints("string descriptor -- ");
      000215 90r01rD9         [24]  752 	mov	dptr,#___str_10
      000218 75 F0 80         [24]  753 	mov	b,#0x80
      00021B 12r00r00         [24]  754 	lcall	_Prints
                                    755 ;	src/usbcore.c:405: switch (wValue & 0xFF) {
      00021E AE*02            [24]  756 	mov	r6,_wValue
      000220 7F 00            [12]  757 	mov	r7,#0x00
      000222 C3               [12]  758 	clr	c
      000223 74 03            [12]  759 	mov	a,#0x03
      000225 9E               [12]  760 	subb	a,r6
      000226 E4               [12]  761 	clr	a
      000227 9F               [12]  762 	subb	a,r7
      000228 50 03            [24]  763 	jnc	00318$
      00022A 02r02rB7         [24]  764 	ljmp	00121$
      00022D                        765 00318$:
      00022D EE               [12]  766 	mov	a,r6
      00022E 2E               [12]  767 	add	a,r6
                                    768 ;	src/usbcore.c:406: case 0:         /* get language ID */
      00022F 90r02r33         [24]  769 	mov	dptr,#00319$
      000232 73               [24]  770 	jmp	@a+dptr
      000233                        771 00319$:
      000233 80 06            [24]  772 	sjmp	00117$
      000235 80 23            [24]  773 	sjmp	00118$
      000237 80 40            [24]  774 	sjmp	00119$
      000239 80 5D            [24]  775 	sjmp	00120$
      00023B                        776 00117$:
                                    777 ;	src/usbcore.c:408: Prints("language ID\n");
      00023B 90r01rEF         [24]  778 	mov	dptr,#___str_11
      00023E 75 F0 80         [24]  779 	mov	b,#0x80
      000241 12r00r00         [24]  780 	lcall	_Prints
                                    781 ;	src/usbcore.c:410: pSendData = (uint8 *)languageId;
      000244 75*08r3B         [24]  782 	mov	_pSendData,#_languageId
      000247 75*09s00         [24]  783 	mov	(_pSendData + 1),#(_languageId >> 8)
      00024A 75*0A 80         [24]  784 	mov	(_pSendData + 2),#0x80
                                    785 ;	src/usbcore.c:411: SendLength = languageId[0];
      00024D 90r00r3B         [24]  786 	mov	dptr,#_languageId
      000250 E4               [12]  787 	clr	a
      000251 93               [24]  788 	movc	a,@a+dptr
      000252 FF               [12]  789 	mov	r7,a
      000253 8F*0B            [24]  790 	mov	_SendLength,r7
      000255 75*0C 00         [24]  791 	mov	(_SendLength + 1),#0x00
                                    792 ;	src/usbcore.c:412: break;
                                    793 ;	src/usbcore.c:413: case 1:         /* Vendor string id is 1  */
      000258 80 6E            [24]  794 	sjmp	00122$
      00025A                        795 00118$:
                                    796 ;	src/usbcore.c:415: Prints("manufacture string\n");
      00025A 90r01rFC         [24]  797 	mov	dptr,#___str_12
      00025D 75 F0 80         [24]  798 	mov	b,#0x80
      000260 12r00r00         [24]  799 	lcall	_Prints
                                    800 ;	src/usbcore.c:417: pSendData = (uint8 *)ManufacturerStringDescriptor;
      000263 75*08r3F         [24]  801 	mov	_pSendData,#_ManufacturerStringDescriptor
      000266 75*09s00         [24]  802 	mov	(_pSendData + 1),#(_ManufacturerStringDescriptor >> 8)
      000269 75*0A 80         [24]  803 	mov	(_pSendData + 2),#0x80
                                    804 ;	src/usbcore.c:418: SendLength = ManufacturerStringDescriptor[0];
      00026C 90r00r3F         [24]  805 	mov	dptr,#_ManufacturerStringDescriptor
      00026F E4               [12]  806 	clr	a
      000270 93               [24]  807 	movc	a,@a+dptr
      000271 FF               [12]  808 	mov	r7,a
      000272 8F*0B            [24]  809 	mov	_SendLength,r7
      000274 75*0C 00         [24]  810 	mov	(_SendLength + 1),#0x00
                                    811 ;	src/usbcore.c:419: break;
                                    812 ;	src/usbcore.c:420: case 2:         /* Vendor string id is 1  */
      000277 80 4F            [24]  813 	sjmp	00122$
      000279                        814 00119$:
                                    815 ;	src/usbcore.c:422: Prints("product string\n");
      000279 90r02r10         [24]  816 	mov	dptr,#___str_13
      00027C 75 F0 80         [24]  817 	mov	b,#0x80
      00027F 12r00r00         [24]  818 	lcall	_Prints
                                    819 ;	src/usbcore.c:424: pSendData = (uint8 *)ProductStringDescriptor;
      000282 75*08r9D         [24]  820 	mov	_pSendData,#_ProductStringDescriptor
      000285 75*09s00         [24]  821 	mov	(_pSendData + 1),#(_ProductStringDescriptor >> 8)
      000288 75*0A 80         [24]  822 	mov	(_pSendData + 2),#0x80
                                    823 ;	src/usbcore.c:425: SendLength = ProductStringDescriptor[0];
      00028B 90r00r9D         [24]  824 	mov	dptr,#_ProductStringDescriptor
      00028E E4               [12]  825 	clr	a
      00028F 93               [24]  826 	movc	a,@a+dptr
      000290 FF               [12]  827 	mov	r7,a
      000291 8F*0B            [24]  828 	mov	_SendLength,r7
      000293 75*0C 00         [24]  829 	mov	(_SendLength + 1),#0x00
                                    830 ;	src/usbcore.c:426: break;
                                    831 ;	src/usbcore.c:427: case 3:         /* Vendor string id is 1  */
      000296 80 30            [24]  832 	sjmp	00122$
      000298                        833 00120$:
                                    834 ;	src/usbcore.c:429: Prints("serial string\n");
      000298 90r02r20         [24]  835 	mov	dptr,#___str_14
      00029B 75 F0 80         [24]  836 	mov	b,#0x80
      00029E 12r00r00         [24]  837 	lcall	_Prints
                                    838 ;	src/usbcore.c:431: pSendData = (uint8 *)SerialNumberStringDescriptor;
      0002A1 75*08rBD         [24]  839 	mov	_pSendData,#_SerialNumberStringDescriptor
      0002A4 75*09s00         [24]  840 	mov	(_pSendData + 1),#(_SerialNumberStringDescriptor >> 8)
      0002A7 75*0A 80         [24]  841 	mov	(_pSendData + 2),#0x80
                                    842 ;	src/usbcore.c:432: SendLength = SerialNumberStringDescriptor[0];
      0002AA 90r00rBD         [24]  843 	mov	dptr,#_SerialNumberStringDescriptor
      0002AD E4               [12]  844 	clr	a
      0002AE 93               [24]  845 	movc	a,@a+dptr
      0002AF FF               [12]  846 	mov	r7,a
      0002B0 8F*0B            [24]  847 	mov	_SendLength,r7
      0002B2 75*0C 00         [24]  848 	mov	(_SendLength + 1),#0x00
                                    849 ;	src/usbcore.c:433: break;
                                    850 ;	src/usbcore.c:434: default:         /* Vendor string id is 1  */
      0002B5 80 11            [24]  851 	sjmp	00122$
      0002B7                        852 00121$:
                                    853 ;	src/usbcore.c:436: Prints("unknown string\n");
      0002B7 90r02r2F         [24]  854 	mov	dptr,#___str_15
      0002BA 75 F0 80         [24]  855 	mov	b,#0x80
      0002BD 12r00r00         [24]  856 	lcall	_Prints
                                    857 ;	src/usbcore.c:438: SendLength = 0;
      0002C0 E4               [12]  858 	clr	a
      0002C1 F5*0B            [12]  859 	mov	_SendLength,a
      0002C3 F5*0C            [12]  860 	mov	(_SendLength + 1),a
                                    861 ;	src/usbcore.c:439: NeedZeroPacket = 1;
      0002C5 75*0D 01         [24]  862 	mov	_NeedZeroPacket,#0x01
                                    863 ;	src/usbcore.c:441: }
      0002C8                        864 00122$:
                                    865 ;	src/usbcore.c:442: if ((wLength > SendLength) &&
      0002C8 C3               [12]  866 	clr	c
      0002C9 E5*0B            [12]  867 	mov	a,_SendLength
      0002CB 95*06            [12]  868 	subb	a,_wLength
      0002CD E5*0C            [12]  869 	mov	a,(_SendLength + 1)
      0002CF 95*07            [12]  870 	subb	a,(_wLength + 1)
      0002D1 50 22            [24]  871 	jnc	00124$
                                    872 ;	src/usbcore.c:443: (SendLength % DeviceDescriptor[7] == 0))
      0002D3 90r00r07         [24]  873 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      0002D6 E4               [12]  874 	clr	a
      0002D7 93               [24]  875 	movc	a,@a+dptr
      0002D8 FF               [12]  876 	mov	r7,a
      0002D9 8F*00            [24]  877 	mov	__moduint_PARM_2,r7
      0002DB 75*01 00         [24]  878 	mov	(__moduint_PARM_2 + 1),#0x00
      0002DE 85*0B 82         [24]  879 	mov	dpl,_SendLength
      0002E1 85*0C 83         [24]  880 	mov	dph,(_SendLength + 1)
      0002E4 12r00r00         [24]  881 	lcall	__moduint
      0002E7 E5 82            [12]  882 	mov	a,dpl
      0002E9 85 83 F0         [24]  883 	mov	b,dph
      0002EC 45 F0            [12]  884 	orl	a,b
      0002EE 70 05            [24]  885 	jnz	00124$
                                    886 ;	src/usbcore.c:444: NeedZeroPacket = 1;
      0002F0 75*0D 01         [24]  887 	mov	_NeedZeroPacket,#0x01
      0002F3 80 06            [24]  888 	sjmp	00125$
      0002F5                        889 00124$:
                                    890 ;	src/usbcore.c:446: SendLength = wLength;
      0002F5 85*06*0B         [24]  891 	mov	_SendLength,_wLength
      0002F8 85*07*0C         [24]  892 	mov	(_SendLength + 1),(_wLength + 1)
      0002FB                        893 00125$:
                                    894 ;	src/usbcore.c:447: usb_bus_ep0_send_data(); 
                                    895 ;	src/usbcore.c:448: break;
      0002FB 02r05r2E         [24]  896 	ljmp	_usb_bus_ep0_send_data
                                    897 ;	src/usbcore.c:449: case REPORT_DESCRIPTOR:
      0002FE                        898 00127$:
                                    899 ;	src/usbcore.c:451: Prints("Report descriptor: ");
      0002FE 90r02r3F         [24]  900 	mov	dptr,#___str_16
      000301 75 F0 80         [24]  901 	mov	b,#0x80
      000304 12r00r00         [24]  902 	lcall	_Prints
                                    903 ;	src/usbcore.c:453: pSendData = (uint8 *)ReportDescriptor;
      000307 75*08rD3         [24]  904 	mov	_pSendData,#_ReportDescriptor
      00030A 75*09s00         [24]  905 	mov	(_pSendData + 1),#(_ReportDescriptor >> 8)
      00030D 75*0A 80         [24]  906 	mov	(_pSendData + 2),#0x80
                                    907 ;	src/usbcore.c:454: SendLength = sizeof(ReportDescriptor);
      000310 75*0B 41         [24]  908 	mov	_SendLength,#0x41
      000313 75*0C 00         [24]  909 	mov	(_SendLength + 1),#0x00
                                    910 ;	src/usbcore.c:455: if ((wLength > SendLength) && (SendLength % DeviceDescriptor[7] == 0))
      000316 C3               [12]  911 	clr	c
      000317 74 41            [12]  912 	mov	a,#0x41
      000319 95*06            [12]  913 	subb	a,_wLength
      00031B E4               [12]  914 	clr	a
      00031C 95*07            [12]  915 	subb	a,(_wLength + 1)
      00031E 50 1F            [24]  916 	jnc	00129$
      000320 90r00r07         [24]  917 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      000323 E4               [12]  918 	clr	a
      000324 93               [24]  919 	movc	a,@a+dptr
      000325 FF               [12]  920 	mov	r7,a
      000326 8F*00            [24]  921 	mov	__moduint_PARM_2,r7
      000328 75*01 00         [24]  922 	mov	(__moduint_PARM_2 + 1),#0x00
      00032B 90 00 41         [24]  923 	mov	dptr,#0x0041
      00032E 12r00r00         [24]  924 	lcall	__moduint
      000331 E5 82            [12]  925 	mov	a,dpl
      000333 85 83 F0         [24]  926 	mov	b,dph
      000336 45 F0            [12]  927 	orl	a,b
      000338 70 05            [24]  928 	jnz	00129$
                                    929 ;	src/usbcore.c:456: NeedZeroPacket = 1;
      00033A 75*0D 01         [24]  930 	mov	_NeedZeroPacket,#0x01
      00033D 80 03            [24]  931 	sjmp	00130$
      00033F                        932 00129$:
                                    933 ;	src/usbcore.c:458: NeedZeroPacket = 0;
      00033F 75*0D 00         [24]  934 	mov	_NeedZeroPacket,#0x00
      000342                        935 00130$:
                                    936 ;	src/usbcore.c:459: usb_bus_ep0_send_data();
                                    937 ;	src/usbcore.c:460: break;
      000342 02r05r2E         [24]  938 	ljmp	_usb_bus_ep0_send_data
                                    939 ;	src/usbcore.c:461: default:
      000345                        940 00132$:
                                    941 ;	src/usbcore.c:463: Prints("other descriptor: ");
      000345 90r02r53         [24]  942 	mov	dptr,#___str_17
      000348 75 F0 80         [24]  943 	mov	b,#0x80
      00034B 12r00r00         [24]  944 	lcall	_Prints
                                    945 ;	src/usbcore.c:465: print_hex((wValue >> 8) & 0xFF);
      00034E 85*03 82         [24]  946 	mov	dpl,(_wValue + 1)
      000351 12r00r00         [24]  947 	lcall	_print_hex
                                    948 ;	src/usbcore.c:466: Prints("\n");
      000354 90r02r66         [24]  949 	mov	dptr,#___str_18
      000357 75 F0 80         [24]  950 	mov	b,#0x80
                                    951 ;	src/usbcore.c:469: break;
      00035A 02r00r00         [24]  952 	ljmp	_Prints
                                    953 ;	src/usbcore.c:470: case GET_INTERFACE:
      00035D                        954 00134$:
                                    955 ;	src/usbcore.c:472: Prints("Get interface\n");
      00035D 90r02r68         [24]  956 	mov	dptr,#___str_19
      000360 75 F0 80         [24]  957 	mov	b,#0x80
                                    958 ;	src/usbcore.c:474: break;
      000363 02r00r00         [24]  959 	ljmp	_Prints
                                    960 ;	src/usbcore.c:475: case GET_STATUS:
      000366                        961 00135$:
                                    962 ;	src/usbcore.c:477: Prints("Get status\n");
      000366 90r02r77         [24]  963 	mov	dptr,#___str_20
      000369 75 F0 80         [24]  964 	mov	b,#0x80
                                    965 ;	src/usbcore.c:479: break;
      00036C 02r00r00         [24]  966 	ljmp	_Prints
                                    967 ;	src/usbcore.c:480: case SYNCH_FRAME:
      00036F                        968 00136$:
                                    969 ;	src/usbcore.c:482: Prints("Synch frame\n");
      00036F 90r02r83         [24]  970 	mov	dptr,#___str_21
      000372 75 F0 80         [24]  971 	mov	b,#0x80
                                    972 ;	src/usbcore.c:484: break;
      000375 02r00r00         [24]  973 	ljmp	_Prints
                                    974 ;	src/usbcore.c:485: default:
      000378                        975 00137$:
                                    976 ;	src/usbcore.c:487: Prints("Error: undefined stander request\n");
      000378 90r02r90         [24]  977 	mov	dptr,#___str_22
      00037B 75 F0 80         [24]  978 	mov	b,#0x80
                                    979 ;	src/usbcore.c:491: break;
      00037E 02r00r00         [24]  980 	ljmp	_Prints
                                    981 ;	src/usbcore.c:492: case 1:                            /* class request */
      000381                        982 00139$:
                                    983 ;	src/usbcore.c:494: Prints("USB class input request:\n");
      000381 90r02rB2         [24]  984 	mov	dptr,#___str_23
      000384 75 F0 80         [24]  985 	mov	b,#0x80
                                    986 ;	src/usbcore.c:496: break;
      000387 02r00r00         [24]  987 	ljmp	_Prints
                                    988 ;	src/usbcore.c:497: case 2:
      00038A                        989 00140$:
                                    990 ;	src/usbcore.c:499: Prints("USB vendor input request:\n");
      00038A 90r02rCC         [24]  991 	mov	dptr,#___str_24
      00038D 75 F0 80         [24]  992 	mov	b,#0x80
                                    993 ;	src/usbcore.c:501: break;
      000390 02r00r00         [24]  994 	ljmp	_Prints
                                    995 ;	src/usbcore.c:502: default:
      000393                        996 00141$:
                                    997 ;	src/usbcore.c:504: Prints("Error: undefined input request:\n");
      000393 90r02rE7         [24]  998 	mov	dptr,#___str_25
      000396 75 F0 80         [24]  999 	mov	b,#0x80
                                   1000 ;	src/usbcore.c:507: }
      000399 02r00r00         [24] 1001 	ljmp	_Prints
      00039C                       1002 00160$:
                                   1003 ;	src/usbcore.c:511: switch ((bmRequestType >> 5) & 0x3) {
      00039C E5*00            [12] 1004 	mov	a,_bmRequestType
      00039E C4               [12] 1005 	swap	a
      00039F 03               [12] 1006 	rr	a
      0003A0 54 07            [12] 1007 	anl	a,#0x07
      0003A2 FF               [12] 1008 	mov	r7,a
      0003A3 53 07 03         [24] 1009 	anl	ar7,#0x03
      0003A6 7E 00            [12] 1010 	mov	r6,#0x00
      0003A8 BF 00 05         [24] 1011 	cjne	r7,#0x00,00324$
      0003AB BE 00 02         [24] 1012 	cjne	r6,#0x00,00324$
      0003AE 80 15            [24] 1013 	sjmp	00143$
      0003B0                       1014 00324$:
      0003B0 BF 01 06         [24] 1015 	cjne	r7,#0x01,00325$
      0003B3 BE 00 03         [24] 1016 	cjne	r6,#0x00,00325$
      0003B6 02r04r6B         [24] 1017 	ljmp	00152$
      0003B9                       1018 00325$:
      0003B9 BF 02 06         [24] 1019 	cjne	r7,#0x02,00326$
      0003BC BE 00 03         [24] 1020 	cjne	r6,#0x00,00326$
      0003BF 02r04r97         [24] 1021 	ljmp	00156$
      0003C2                       1022 00326$:
      0003C2 02r04rA0         [24] 1023 	ljmp	00157$
                                   1024 ;	src/usbcore.c:512: case 0:
      0003C5                       1025 00143$:
                                   1026 ;	src/usbcore.c:514: Prints("USB stander output request: ");
      0003C5 90r03r08         [24] 1027 	mov	dptr,#___str_26
      0003C8 75 F0 80         [24] 1028 	mov	b,#0x80
      0003CB 12r00r00         [24] 1029 	lcall	_Prints
                                   1030 ;	src/usbcore.c:516: switch (bRequest) {
      0003CE 74 01            [12] 1031 	mov	a,#0x01
      0003D0 B5*01 02         [24] 1032 	cjne	a,_bRequest,00327$
      0003D3 80 23            [24] 1033 	sjmp	00144$
      0003D5                       1034 00327$:
      0003D5 74 03            [12] 1035 	mov	a,#0x03
      0003D7 B5*01 02         [24] 1036 	cjne	a,_bRequest,00328$
      0003DA 80 74            [24] 1037 	sjmp	00148$
      0003DC                       1038 00328$:
      0003DC 74 05            [12] 1039 	mov	a,#0x05
      0003DE B5*01 02         [24] 1040 	cjne	a,_bRequest,00329$
      0003E1 80 1E            [24] 1041 	sjmp	00145$
      0003E3                       1042 00329$:
      0003E3 74 07            [12] 1043 	mov	a,#0x07
      0003E5 B5*01 02         [24] 1044 	cjne	a,_bRequest,00330$
      0003E8 80 5D            [24] 1045 	sjmp	00147$
      0003EA                       1046 00330$:
      0003EA 74 09            [12] 1047 	mov	a,#0x09
      0003EC B5*01 02         [24] 1048 	cjne	a,_bRequest,00331$
      0003EF 80 39            [24] 1049 	sjmp	00146$
      0003F1                       1050 00331$:
      0003F1 74 0B            [12] 1051 	mov	a,#0x0b
                                   1052 ;	src/usbcore.c:517: case CLEAR_FEATURE:
      0003F3 B5*01 6C         [24] 1053 	cjne	a,_bRequest,00150$
      0003F6 80 61            [24] 1054 	sjmp	00149$
      0003F8                       1055 00144$:
                                   1056 ;	src/usbcore.c:519: Prints("clear feature\n");                   
      0003F8 90r03r25         [24] 1057 	mov	dptr,#___str_27
      0003FB 75 F0 80         [24] 1058 	mov	b,#0x80
                                   1059 ;	src/usbcore.c:521: break;
      0003FE 02r00r00         [24] 1060 	ljmp	_Prints
                                   1061 ;	src/usbcore.c:522: case SET_ADDRESS:
      000401                       1062 00145$:
                                   1063 ;	src/usbcore.c:524: Prints("set address, the address is: ");
      000401 90r03r34         [24] 1064 	mov	dptr,#___str_28
      000404 75 F0 80         [24] 1065 	mov	b,#0x80
      000407 12r00r00         [24] 1066 	lcall	_Prints
                                   1067 ;	src/usbcore.c:525: print_hex(wValue & 0xFF);
      00040A 85*02 82         [24] 1068 	mov	dpl,_wValue
      00040D 12r00r00         [24] 1069 	lcall	_print_hex
                                   1070 ;	src/usbcore.c:526: Prints("\n");                
      000410 90r02r66         [24] 1071 	mov	dptr,#___str_18
      000413 75 F0 80         [24] 1072 	mov	b,#0x80
      000416 12r00r00         [24] 1073 	lcall	_Prints
                                   1074 ;	src/usbcore.c:528: D12_set_address(wValue & 0xFF);
      000419 85*02 82         [24] 1075 	mov	dpl,_wValue
      00041C 12r00r00         [24] 1076 	lcall	_D12_set_address
                                   1077 ;	src/usbcore.c:529: SendLength = 0;
      00041F E4               [12] 1078 	clr	a
      000420 F5*0B            [12] 1079 	mov	_SendLength,a
      000422 F5*0C            [12] 1080 	mov	(_SendLength + 1),a
                                   1081 ;	src/usbcore.c:530: NeedZeroPacket = 1;
      000424 75*0D 01         [24] 1082 	mov	_NeedZeroPacket,#0x01
                                   1083 ;	src/usbcore.c:531: usb_bus_ep0_send_data();
                                   1084 ;	src/usbcore.c:532: break;
      000427 02r05r2E         [24] 1085 	ljmp	_usb_bus_ep0_send_data
                                   1086 ;	src/usbcore.c:533: case SET_CONFIGURATION:
      00042A                       1087 00146$:
                                   1088 ;	src/usbcore.c:535: Prints("set configuration\n");                   
      00042A 90r03r52         [24] 1089 	mov	dptr,#___str_29
      00042D 75 F0 80         [24] 1090 	mov	b,#0x80
      000430 12r00r00         [24] 1091 	lcall	_Prints
                                   1092 ;	src/usbcore.c:537: ConfigValue = wValue & 0xFF;
      000433 AF*02            [24] 1093 	mov	r7,_wValue
      000435 8F*0F            [24] 1094 	mov	_ConfigValue,r7
                                   1095 ;	src/usbcore.c:538: D12_set_endpoint_enable(wValue & 0xFF);
      000437 8F 82            [24] 1096 	mov	dpl,r7
      000439 12r00r00         [24] 1097 	lcall	_D12_set_endpoint_enable
                                   1098 ;	src/usbcore.c:540: SendLength = 0;
      00043C E4               [12] 1099 	clr	a
      00043D F5*0B            [12] 1100 	mov	_SendLength,a
      00043F F5*0C            [12] 1101 	mov	(_SendLength + 1),a
                                   1102 ;	src/usbcore.c:541: NeedZeroPacket = 1;
      000441 75*0D 01         [24] 1103 	mov	_NeedZeroPacket,#0x01
                                   1104 ;	src/usbcore.c:542: usb_bus_ep0_send_data();
                                   1105 ;	src/usbcore.c:543: break;
      000444 02r05r2E         [24] 1106 	ljmp	_usb_bus_ep0_send_data
                                   1107 ;	src/usbcore.c:544: case SET_DESCRIPTOR:
      000447                       1108 00147$:
                                   1109 ;	src/usbcore.c:546: Prints("set descriptor\n");                   
      000447 90r03r65         [24] 1110 	mov	dptr,#___str_30
      00044A 75 F0 80         [24] 1111 	mov	b,#0x80
                                   1112 ;	src/usbcore.c:548: break;
      00044D 02r00r00         [24] 1113 	ljmp	_Prints
                                   1114 ;	src/usbcore.c:549: case SET_FEATURE:
      000450                       1115 00148$:
                                   1116 ;	src/usbcore.c:551: Prints("set feature\n");                   
      000450 90r03r75         [24] 1117 	mov	dptr,#___str_31
      000453 75 F0 80         [24] 1118 	mov	b,#0x80
                                   1119 ;	src/usbcore.c:553: break;
      000456 02r00r00         [24] 1120 	ljmp	_Prints
                                   1121 ;	src/usbcore.c:554: case SET_INTERFACE:
      000459                       1122 00149$:
                                   1123 ;	src/usbcore.c:556: Prints("set interface\n");                   
      000459 90r03r82         [24] 1124 	mov	dptr,#___str_32
      00045C 75 F0 80         [24] 1125 	mov	b,#0x80
                                   1126 ;	src/usbcore.c:558: break;
      00045F 02r00r00         [24] 1127 	ljmp	_Prints
                                   1128 ;	src/usbcore.c:559: default:
      000462                       1129 00150$:
                                   1130 ;	src/usbcore.c:561: Prints("Error: undefined stander request\n");                   
      000462 90r02r90         [24] 1131 	mov	dptr,#___str_22
      000465 75 F0 80         [24] 1132 	mov	b,#0x80
                                   1133 ;	src/usbcore.c:565: break;
      000468 02r00r00         [24] 1134 	ljmp	_Prints
                                   1135 ;	src/usbcore.c:566: case 1:
      00046B                       1136 00152$:
                                   1137 ;	src/usbcore.c:568: Prints("USB class output request:\n");                   
      00046B 90r03r91         [24] 1138 	mov	dptr,#___str_33
      00046E 75 F0 80         [24] 1139 	mov	b,#0x80
      000471 12r00r00         [24] 1140 	lcall	_Prints
                                   1141 ;	src/usbcore.c:570: switch (bRequest) {
      000474 74 0A            [12] 1142 	mov	a,#0x0a
      000476 B5*01 15         [24] 1143 	cjne	a,_bRequest,00154$
                                   1144 ;	src/usbcore.c:573: Prints("set idle\n");
      000479 90r03rAC         [24] 1145 	mov	dptr,#___str_34
      00047C 75 F0 80         [24] 1146 	mov	b,#0x80
      00047F 12r00r00         [24] 1147 	lcall	_Prints
                                   1148 ;	src/usbcore.c:575: SendLength = 1;
      000482 75*0B 01         [24] 1149 	mov	_SendLength,#0x01
      000485 75*0C 00         [24] 1150 	mov	(_SendLength + 1),#0x00
                                   1151 ;	src/usbcore.c:576: NeedZeroPacket = 1;
      000488 75*0D 01         [24] 1152 	mov	_NeedZeroPacket,#0x01
                                   1153 ;	src/usbcore.c:578: usb_bus_ep0_send_data();
                                   1154 ;	src/usbcore.c:579: break;
                                   1155 ;	src/usbcore.c:580: default:
      00048B 02r05r2E         [24] 1156 	ljmp	_usb_bus_ep0_send_data
      00048E                       1157 00154$:
                                   1158 ;	src/usbcore.c:582: Prints("unknown request\n");                   
      00048E 90r03rB6         [24] 1159 	mov	dptr,#___str_35
      000491 75 F0 80         [24] 1160 	mov	b,#0x80
                                   1161 ;	src/usbcore.c:586: break;
                                   1162 ;	src/usbcore.c:587: case 2:
      000494 02r00r00         [24] 1163 	ljmp	_Prints
      000497                       1164 00156$:
                                   1165 ;	src/usbcore.c:589: Prints("USB vendor output request:\n");                   
      000497 90r03rC7         [24] 1166 	mov	dptr,#___str_36
      00049A 75 F0 80         [24] 1167 	mov	b,#0x80
                                   1168 ;	src/usbcore.c:591: break;
                                   1169 ;	src/usbcore.c:592: default:
      00049D 02r00r00         [24] 1170 	ljmp	_Prints
      0004A0                       1171 00157$:
                                   1172 ;	src/usbcore.c:594: Prints("Error: undefined output request.\n");                   
      0004A0 90r03rE3         [24] 1173 	mov	dptr,#___str_37
      0004A3 75 F0 80         [24] 1174 	mov	b,#0x80
                                   1175 ;	src/usbcore.c:597: }
      0004A6 02r00r00         [24] 1176 	ljmp	_Prints
      0004A9                       1177 00163$:
                                   1178 ;	src/usbcore.c:600: D12_read_endpoint_buffer(0, 16, buffer);
      0004A9 75*00r10         [24] 1179 	mov	_D12_read_endpoint_buffer_PARM_3,#_usb_bus_isr_ep0_out_buffer_65536_57
      0004AC 75*01 00         [24] 1180 	mov	(_D12_read_endpoint_buffer_PARM_3 + 1),#0x00
      0004AF 75*02 40         [24] 1181 	mov	(_D12_read_endpoint_buffer_PARM_3 + 2),#0x40
      0004B2 75*00 10         [24] 1182 	mov	_D12_read_endpoint_buffer_PARM_2,#0x10
      0004B5 75 82 00         [24] 1183 	mov	dpl,#0x00
      0004B8 12r00r00         [24] 1184 	lcall	_D12_read_endpoint_buffer
                                   1185 ;	src/usbcore.c:601: D12_clear_buffer();
      0004BB 12r00r00         [24] 1186 	lcall	_D12_clear_buffer
                                   1187 ;	src/usbcore.c:602: dump_hex(buffer, 8);
      0004BE 75*00 08         [24] 1188 	mov	_dump_hex_PARM_2,#0x08
      0004C1 75*01 00         [24] 1189 	mov	(_dump_hex_PARM_2 + 1),#0x00
      0004C4 90r00r10         [24] 1190 	mov	dptr,#_usb_bus_isr_ep0_out_buffer_65536_57
      0004C7 75 F0 40         [24] 1191 	mov	b,#0x40
                                   1192 ;	src/usbcore.c:604: }
      0004CA 02r00r00         [24] 1193 	ljmp	_dump_hex
                                   1194 ;------------------------------------------------------------
                                   1195 ;Allocation info for local variables in function 'usb_bus_isr_ep0_in'
                                   1196 ;------------------------------------------------------------
                                   1197 ;	src/usbcore.c:606: void usb_bus_isr_ep0_in()
                                   1198 ;	-----------------------------------------
                                   1199 ;	 function usb_bus_isr_ep0_in
                                   1200 ;	-----------------------------------------
      0004CD                       1201 _usb_bus_isr_ep0_in:
                                   1202 ;	src/usbcore.c:609: Prints("usb isr ep0 in\n");
      0004CD 90r04r05         [24] 1203 	mov	dptr,#___str_38
      0004D0 75 F0 80         [24] 1204 	mov	b,#0x80
      0004D3 12r00r00         [24] 1205 	lcall	_Prints
                                   1206 ;	src/usbcore.c:611: D12_read_endpoint_last_status(1);
      0004D6 75 82 01         [24] 1207 	mov	dpl,#0x01
      0004D9 12r00r00         [24] 1208 	lcall	_D12_read_endpoint_last_status
                                   1209 ;	src/usbcore.c:612: usb_bus_ep0_send_data();
                                   1210 ;	src/usbcore.c:613: }
      0004DC 02r05r2E         [24] 1211 	ljmp	_usb_bus_ep0_send_data
                                   1212 ;------------------------------------------------------------
                                   1213 ;Allocation info for local variables in function 'usb_bus_isr_ep1_out'
                                   1214 ;------------------------------------------------------------
                                   1215 ;buf                       Allocated with name '_usb_bus_isr_ep1_out_buf_65536_74'
                                   1216 ;------------------------------------------------------------
                                   1217 ;	src/usbcore.c:615: void usb_bus_isr_ep1_out()
                                   1218 ;	-----------------------------------------
                                   1219 ;	 function usb_bus_isr_ep1_out
                                   1220 ;	-----------------------------------------
      0004DF                       1221 _usb_bus_isr_ep1_out:
                                   1222 ;	src/usbcore.c:619: Prints("usb core ep1 out\n");
      0004DF 90r04r15         [24] 1223 	mov	dptr,#___str_39
      0004E2 75 F0 80         [24] 1224 	mov	b,#0x80
      0004E5 12r00r00         [24] 1225 	lcall	_Prints
                                   1226 ;	src/usbcore.c:622: D12_read_endpoint_last_status(2);
      0004E8 75 82 02         [24] 1227 	mov	dpl,#0x02
      0004EB 12r00r00         [24] 1228 	lcall	_D12_read_endpoint_last_status
                                   1229 ;	src/usbcore.c:624: D12_read_endpoint_buffer(2, 1, buf);
      0004EE 75*00r20         [24] 1230 	mov	_D12_read_endpoint_buffer_PARM_3,#_usb_bus_isr_ep1_out_buf_65536_74
      0004F1 75*01 00         [24] 1231 	mov	(_D12_read_endpoint_buffer_PARM_3 + 1),#0x00
      0004F4 75*02 40         [24] 1232 	mov	(_D12_read_endpoint_buffer_PARM_3 + 2),#0x40
      0004F7 75*00 01         [24] 1233 	mov	_D12_read_endpoint_buffer_PARM_2,#0x01
      0004FA 75 82 02         [24] 1234 	mov	dpl,#0x02
      0004FD 12r00r00         [24] 1235 	lcall	_D12_read_endpoint_buffer
                                   1236 ;	src/usbcore.c:626: D12_clear_buffer();
      000500 12r00r00         [24] 1237 	lcall	_D12_clear_buffer
                                   1238 ;	src/usbcore.c:628: LED = ~buf[0];
      000503 E5*20            [12] 1239 	mov	a,_usb_bus_isr_ep1_out_buf_65536_74
      000505 F4               [12] 1240 	cpl	a
      000506 F5 A0            [12] 1241 	mov	_P2,a
                                   1242 ;	src/usbcore.c:629: }
      000508 22               [24] 1243 	ret
                                   1244 ;------------------------------------------------------------
                                   1245 ;Allocation info for local variables in function 'usb_bus_isr_ep1_in'
                                   1246 ;------------------------------------------------------------
                                   1247 ;	src/usbcore.c:631: void usb_bus_isr_ep1_in()
                                   1248 ;	-----------------------------------------
                                   1249 ;	 function usb_bus_isr_ep1_in
                                   1250 ;	-----------------------------------------
      000509                       1251 _usb_bus_isr_ep1_in:
                                   1252 ;	src/usbcore.c:634: Prints("usb core ep1 in\n");
      000509 90r04r27         [24] 1253 	mov	dptr,#___str_40
      00050C 75 F0 80         [24] 1254 	mov	b,#0x80
      00050F 12r00r00         [24] 1255 	lcall	_Prints
                                   1256 ;	src/usbcore.c:636: D12_read_endpoint_last_status(3);
      000512 75 82 03         [24] 1257 	mov	dpl,#0x03
      000515 12r00r00         [24] 1258 	lcall	_D12_read_endpoint_last_status
                                   1259 ;	src/usbcore.c:637: Ep1InIsBusy = 0;
      000518 75*0E 00         [24] 1260 	mov	_Ep1InIsBusy,#0x00
                                   1261 ;	src/usbcore.c:638: }
      00051B 22               [24] 1262 	ret
                                   1263 ;------------------------------------------------------------
                                   1264 ;Allocation info for local variables in function 'usb_bus_isr_ep2_out'
                                   1265 ;------------------------------------------------------------
                                   1266 ;	src/usbcore.c:640: void usb_bus_isr_ep2_out()
                                   1267 ;	-----------------------------------------
                                   1268 ;	 function usb_bus_isr_ep2_out
                                   1269 ;	-----------------------------------------
      00051C                       1270 _usb_bus_isr_ep2_out:
                                   1271 ;	src/usbcore.c:643: Prints("usb core ep2 out\n");
      00051C 90r04r38         [24] 1272 	mov	dptr,#___str_41
      00051F 75 F0 80         [24] 1273 	mov	b,#0x80
                                   1274 ;	src/usbcore.c:645: }
      000522 02r00r00         [24] 1275 	ljmp	_Prints
                                   1276 ;------------------------------------------------------------
                                   1277 ;Allocation info for local variables in function 'usb_bus_isr_ep2_in'
                                   1278 ;------------------------------------------------------------
                                   1279 ;	src/usbcore.c:647: void usb_bus_isr_ep2_in()
                                   1280 ;	-----------------------------------------
                                   1281 ;	 function usb_bus_isr_ep2_in
                                   1282 ;	-----------------------------------------
      000525                       1283 _usb_bus_isr_ep2_in:
                                   1284 ;	src/usbcore.c:650: Prints("usb core ep2 in\n");
      000525 90r04r4A         [24] 1285 	mov	dptr,#___str_42
      000528 75 F0 80         [24] 1286 	mov	b,#0x80
                                   1287 ;	src/usbcore.c:652: }
      00052B 02r00r00         [24] 1288 	ljmp	_Prints
                                   1289 ;------------------------------------------------------------
                                   1290 ;Allocation info for local variables in function 'usb_bus_ep0_send_data'
                                   1291 ;------------------------------------------------------------
                                   1292 ;	src/usbcore.c:654: void usb_bus_ep0_send_data(void)
                                   1293 ;	-----------------------------------------
                                   1294 ;	 function usb_bus_ep0_send_data
                                   1295 ;	-----------------------------------------
      00052E                       1296 _usb_bus_ep0_send_data:
                                   1297 ;	src/usbcore.c:656: if (SendLength > DeviceDescriptor[7]) {
      00052E 90r00r07         [24] 1298 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      000531 E4               [12] 1299 	clr	a
      000532 93               [24] 1300 	movc	a,@a+dptr
      000533 FF               [12] 1301 	mov	r7,a
      000534 FD               [12] 1302 	mov	r5,a
      000535 7E 00            [12] 1303 	mov	r6,#0x00
      000537 C3               [12] 1304 	clr	c
      000538 ED               [12] 1305 	mov	a,r5
      000539 95*0B            [12] 1306 	subb	a,_SendLength
      00053B EE               [12] 1307 	mov	a,r6
      00053C 95*0C            [12] 1308 	subb	a,(_SendLength + 1)
      00053E 50 34            [24] 1309 	jnc	00107$
                                   1310 ;	src/usbcore.c:657: D12_write_endpoint_buffer(1, DeviceDescriptor[7], pSendData);
      000540 8F*00            [24] 1311 	mov	_D12_write_endpoint_buffer_PARM_2,r7
      000542 85*08*00         [24] 1312 	mov	_D12_write_endpoint_buffer_PARM_3,_pSendData
      000545 85*09*01         [24] 1313 	mov	(_D12_write_endpoint_buffer_PARM_3 + 1),(_pSendData + 1)
      000548 85*0A*02         [24] 1314 	mov	(_D12_write_endpoint_buffer_PARM_3 + 2),(_pSendData + 2)
      00054B 75 82 01         [24] 1315 	mov	dpl,#0x01
      00054E 12r00r00         [24] 1316 	lcall	_D12_write_endpoint_buffer
                                   1317 ;	src/usbcore.c:658: SendLength -= DeviceDescriptor[7];
      000551 90r00r07         [24] 1318 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      000554 E4               [12] 1319 	clr	a
      000555 93               [24] 1320 	movc	a,@a+dptr
      000556 FF               [12] 1321 	mov	r7,a
      000557 FD               [12] 1322 	mov	r5,a
      000558 7E 00            [12] 1323 	mov	r6,#0x00
      00055A AB*0B            [24] 1324 	mov	r3,_SendLength
      00055C AC*0C            [24] 1325 	mov	r4,(_SendLength + 1)
      00055E EB               [12] 1326 	mov	a,r3
      00055F C3               [12] 1327 	clr	c
      000560 9D               [12] 1328 	subb	a,r5
      000561 FB               [12] 1329 	mov	r3,a
      000562 EC               [12] 1330 	mov	a,r4
      000563 9E               [12] 1331 	subb	a,r6
      000564 FC               [12] 1332 	mov	r4,a
      000565 8B*0B            [24] 1333 	mov	_SendLength,r3
      000567 8C*0C            [24] 1334 	mov	(_SendLength + 1),r4
                                   1335 ;	src/usbcore.c:659: pSendData += DeviceDescriptor[7];
      000569 EF               [12] 1336 	mov	a,r7
      00056A 25*08            [12] 1337 	add	a,_pSendData
      00056C F5*08            [12] 1338 	mov	_pSendData,a
      00056E E4               [12] 1339 	clr	a
      00056F 35*09            [12] 1340 	addc	a,(_pSendData + 1)
      000571 F5*09            [12] 1341 	mov	(_pSendData + 1),a
      000573 22               [24] 1342 	ret
      000574                       1343 00107$:
                                   1344 ;	src/usbcore.c:661: if (SendLength != 0) {
      000574 E5*0B            [12] 1345 	mov	a,_SendLength
      000576 45*0C            [12] 1346 	orl	a,(_SendLength + 1)
      000578 60 18            [24] 1347 	jz	00104$
                                   1348 ;	src/usbcore.c:662: D12_write_endpoint_buffer(1, SendLength, pSendData);
      00057A 85*0B*00         [24] 1349 	mov	_D12_write_endpoint_buffer_PARM_2,_SendLength
      00057D 85*08*00         [24] 1350 	mov	_D12_write_endpoint_buffer_PARM_3,_pSendData
      000580 85*09*01         [24] 1351 	mov	(_D12_write_endpoint_buffer_PARM_3 + 1),(_pSendData + 1)
      000583 85*0A*02         [24] 1352 	mov	(_D12_write_endpoint_buffer_PARM_3 + 2),(_pSendData + 2)
      000586 75 82 01         [24] 1353 	mov	dpl,#0x01
      000589 12r00r00         [24] 1354 	lcall	_D12_write_endpoint_buffer
                                   1355 ;	src/usbcore.c:663: SendLength = 0;
      00058C E4               [12] 1356 	clr	a
      00058D F5*0B            [12] 1357 	mov	_SendLength,a
      00058F F5*0C            [12] 1358 	mov	(_SendLength + 1),a
      000591 22               [24] 1359 	ret
      000592                       1360 00104$:
                                   1361 ;	src/usbcore.c:665: if (NeedZeroPacket == 1) {
      000592 74 01            [12] 1362 	mov	a,#0x01
      000594 B5*0D 15         [24] 1363 	cjne	a,_NeedZeroPacket,00109$
                                   1364 ;	src/usbcore.c:666: D12_write_endpoint_buffer(1, 0, pSendData);
      000597 75*00 00         [24] 1365 	mov	_D12_write_endpoint_buffer_PARM_2,#0x00
      00059A 85*08*00         [24] 1366 	mov	_D12_write_endpoint_buffer_PARM_3,_pSendData
      00059D 85*09*01         [24] 1367 	mov	(_D12_write_endpoint_buffer_PARM_3 + 1),(_pSendData + 1)
      0005A0 85*0A*02         [24] 1368 	mov	(_D12_write_endpoint_buffer_PARM_3 + 2),(_pSendData + 2)
      0005A3 75 82 01         [24] 1369 	mov	dpl,#0x01
      0005A6 12r00r00         [24] 1370 	lcall	_D12_write_endpoint_buffer
                                   1371 ;	src/usbcore.c:667: NeedZeroPacket = 0;
      0005A9 75*0D 00         [24] 1372 	mov	_NeedZeroPacket,#0x00
      0005AC                       1373 00109$:
                                   1374 ;	src/usbcore.c:671: }
      0005AC 22               [24] 1375 	ret
                                   1376 	.area CSEG    (CODE)
                                   1377 	.area CONST   (CODE)
      000000                       1378 _DeviceDescriptor:
      000000 12                    1379 	.db #0x12	; 18
      000001 01                    1380 	.db #0x01	; 1
      000002 10                    1381 	.db #0x10	; 16
      000003 01                    1382 	.db #0x01	; 1
      000004 00                    1383 	.db #0x00	; 0
      000005 00                    1384 	.db #0x00	; 0
      000006 00                    1385 	.db #0x00	; 0
      000007 10                    1386 	.db #0x10	; 16
      000008 88                    1387 	.db #0x88	; 136
      000009 88                    1388 	.db #0x88	; 136
      00000A 02                    1389 	.db #0x02	; 2
      00000B 00                    1390 	.db #0x00	; 0
      00000C 00                    1391 	.db #0x00	; 0
      00000D 01                    1392 	.db #0x01	; 1
      00000E 01                    1393 	.db #0x01	; 1
      00000F 02                    1394 	.db #0x02	; 2
      000010 03                    1395 	.db #0x03	; 3
      000011 01                    1396 	.db #0x01	; 1
      000012                       1397 _ConfigurationDescriptor:
      000012 09                    1398 	.db #0x09	; 9
      000013 02                    1399 	.db #0x02	; 2
      000014 29                    1400 	.db #0x29	; 41
      000015 00                    1401 	.db #0x00	; 0
      000016 01                    1402 	.db #0x01	; 1
      000017 01                    1403 	.db #0x01	; 1
      000018 00                    1404 	.db #0x00	; 0
      000019 80                    1405 	.db #0x80	; 128
      00001A 32                    1406 	.db #0x32	; 50	'2'
      00001B 09                    1407 	.db #0x09	; 9
      00001C 04                    1408 	.db #0x04	; 4
      00001D 00                    1409 	.db #0x00	; 0
      00001E 00                    1410 	.db #0x00	; 0
      00001F 02                    1411 	.db #0x02	; 2
      000020 03                    1412 	.db #0x03	; 3
      000021 01                    1413 	.db #0x01	; 1
      000022 01                    1414 	.db #0x01	; 1
      000023 00                    1415 	.db #0x00	; 0
      000024 09                    1416 	.db #0x09	; 9
      000025 21                    1417 	.db #0x21	; 33
      000026 10                    1418 	.db #0x10	; 16
      000027 01                    1419 	.db #0x01	; 1
      000028 21                    1420 	.db #0x21	; 33
      000029 01                    1421 	.db #0x01	; 1
      00002A 22                    1422 	.db #0x22	; 34
      00002B 41                    1423 	.db #0x41	; 65	'A'
      00002C 00                    1424 	.db #0x00	; 0
      00002D 07                    1425 	.db #0x07	; 7
      00002E 05                    1426 	.db #0x05	; 5
      00002F 81                    1427 	.db #0x81	; 129
      000030 03                    1428 	.db #0x03	; 3
      000031 10                    1429 	.db #0x10	; 16
      000032 00                    1430 	.db #0x00	; 0
      000033 0A                    1431 	.db #0x0a	; 10
      000034 07                    1432 	.db #0x07	; 7
      000035 05                    1433 	.db #0x05	; 5
      000036 01                    1434 	.db #0x01	; 1
      000037 03                    1435 	.db #0x03	; 3
      000038 10                    1436 	.db #0x10	; 16
      000039 00                    1437 	.db #0x00	; 0
      00003A 0A                    1438 	.db #0x0a	; 10
      00003B                       1439 _languageId:
      00003B 04                    1440 	.db #0x04	; 4
      00003C 03                    1441 	.db #0x03	; 3
      00003D 09                    1442 	.db #0x09	; 9
      00003E 04                    1443 	.db #0x04	; 4
      00003F                       1444 _ManufacturerStringDescriptor:
      00003F 5E                    1445 	.db #0x5e	; 94
      000040 03                    1446 	.db #0x03	; 3
      000041 43                    1447 	.db #0x43	; 67	'C'
      000042 00                    1448 	.db #0x00	; 0
      000043 6F                    1449 	.db #0x6f	; 111	'o'
      000044 00                    1450 	.db #0x00	; 0
      000045 6E                    1451 	.db #0x6e	; 110	'n'
      000046 00                    1452 	.db #0x00	; 0
      000047 74                    1453 	.db #0x74	; 116	't'
      000048 00                    1454 	.db #0x00	; 0
      000049 61                    1455 	.db #0x61	; 97	'a'
      00004A 00                    1456 	.db #0x00	; 0
      00004B 63                    1457 	.db #0x63	; 99	'c'
      00004C 00                    1458 	.db #0x00	; 0
      00004D 74                    1459 	.db #0x74	; 116	't'
      00004E 00                    1460 	.db #0x00	; 0
      00004F 20                    1461 	.db #0x20	; 32
      000050 00                    1462 	.db #0x00	; 0
      000051 61                    1463 	.db #0x61	; 97	'a'
      000052 00                    1464 	.db #0x00	; 0
      000053 75                    1465 	.db #0x75	; 117	'u'
      000054 00                    1466 	.db #0x00	; 0
      000055 74                    1467 	.db #0x74	; 116	't'
      000056 00                    1468 	.db #0x00	; 0
      000057 68                    1469 	.db #0x68	; 104	'h'
      000058 00                    1470 	.db #0x00	; 0
      000059 6F                    1471 	.db #0x6f	; 111	'o'
      00005A 00                    1472 	.db #0x00	; 0
      00005B 72                    1473 	.db #0x72	; 114	'r'
      00005C 00                    1474 	.db #0x00	; 0
      00005D 20                    1475 	.db #0x20	; 32
      00005E 00                    1476 	.db #0x00	; 0
      00005F 48                    1477 	.db #0x48	; 72	'H'
      000060 00                    1478 	.db #0x00	; 0
      000061 65                    1479 	.db #0x65	; 101	'e'
      000062 00                    1480 	.db #0x00	; 0
      000063 6E                    1481 	.db #0x6e	; 110	'n'
      000064 00                    1482 	.db #0x00	; 0
      000065 67                    1483 	.db #0x67	; 103	'g'
      000066 00                    1484 	.db #0x00	; 0
      000067 20                    1485 	.db #0x20	; 32
      000068 00                    1486 	.db #0x00	; 0
      000069 56                    1487 	.db #0x56	; 86	'V'
      00006A 00                    1488 	.db #0x00	; 0
      00006B 69                    1489 	.db #0x69	; 105	'i'
      00006C 00                    1490 	.db #0x00	; 0
      00006D 61                    1491 	.db #0x61	; 97	'a'
      00006E 00                    1492 	.db #0x00	; 0
      00006F 20                    1493 	.db #0x20	; 32
      000070 00                    1494 	.db #0x00	; 0
      000071 65                    1495 	.db #0x65	; 101	'e'
      000072 00                    1496 	.db #0x00	; 0
      000073 6D                    1497 	.db #0x6d	; 109	'm'
      000074 00                    1498 	.db #0x00	; 0
      000075 61                    1499 	.db #0x61	; 97	'a'
      000076 00                    1500 	.db #0x00	; 0
      000077 69                    1501 	.db #0x69	; 105	'i'
      000078 00                    1502 	.db #0x00	; 0
      000079 6C                    1503 	.db #0x6c	; 108	'l'
      00007A 00                    1504 	.db #0x00	; 0
      00007B 20                    1505 	.db #0x20	; 32
      00007C 00                    1506 	.db #0x00	; 0
      00007D 37                    1507 	.db #0x37	; 55	'7'
      00007E 00                    1508 	.db #0x00	; 0
      00007F 37                    1509 	.db #0x37	; 55	'7'
      000080 00                    1510 	.db #0x00	; 0
      000081 30                    1511 	.db #0x30	; 48	'0'
      000082 00                    1512 	.db #0x00	; 0
      000083 31                    1513 	.db #0x31	; 49	'1'
      000084 00                    1514 	.db #0x00	; 0
      000085 37                    1515 	.db #0x37	; 55	'7'
      000086 00                    1516 	.db #0x00	; 0
      000087 35                    1517 	.db #0x35	; 53	'5'
      000088 00                    1518 	.db #0x00	; 0
      000089 31                    1519 	.db #0x31	; 49	'1'
      00008A 00                    1520 	.db #0x00	; 0
      00008B 37                    1521 	.db #0x37	; 55	'7'
      00008C 00                    1522 	.db #0x00	; 0
      00008D 37                    1523 	.db #0x37	; 55	'7'
      00008E 00                    1524 	.db #0x00	; 0
      00008F 40                    1525 	.db #0x40	; 64
      000090 00                    1526 	.db #0x00	; 0
      000091 71                    1527 	.db #0x71	; 113	'q'
      000092 00                    1528 	.db #0x00	; 0
      000093 71                    1529 	.db #0x71	; 113	'q'
      000094 00                    1530 	.db #0x00	; 0
      000095 2E                    1531 	.db #0x2e	; 46
      000096 00                    1532 	.db #0x00	; 0
      000097 63                    1533 	.db #0x63	; 99	'c'
      000098 00                    1534 	.db #0x00	; 0
      000099 6F                    1535 	.db #0x6f	; 111	'o'
      00009A 00                    1536 	.db #0x00	; 0
      00009B 6D                    1537 	.db #0x6d	; 109	'm'
      00009C 00                    1538 	.db #0x00	; 0
      00009D                       1539 _ProductStringDescriptor:
      00009D 20                    1540 	.db #0x20	; 32
      00009E 03                    1541 	.db #0x03	; 3
      00009F 48                    1542 	.db #0x48	; 72	'H'
      0000A0 00                    1543 	.db #0x00	; 0
      0000A1 65                    1544 	.db #0x65	; 101	'e'
      0000A2 00                    1545 	.db #0x00	; 0
      0000A3 6E                    1546 	.db #0x6e	; 110	'n'
      0000A4 00                    1547 	.db #0x00	; 0
      0000A5 67                    1548 	.db #0x67	; 103	'g'
      0000A6 00                    1549 	.db #0x00	; 0
      0000A7 27                    1550 	.db #0x27	; 39
      0000A8 00                    1551 	.db #0x00	; 0
      0000A9 73                    1552 	.db #0x73	; 115	's'
      0000AA 00                    1553 	.db #0x00	; 0
      0000AB 20                    1554 	.db #0x20	; 32
      0000AC 00                    1555 	.db #0x00	; 0
      0000AD 4B                    1556 	.db #0x4b	; 75	'K'
      0000AE 00                    1557 	.db #0x00	; 0
      0000AF 65                    1558 	.db #0x65	; 101	'e'
      0000B0 00                    1559 	.db #0x00	; 0
      0000B1 79                    1560 	.db #0x79	; 121	'y'
      0000B2 00                    1561 	.db #0x00	; 0
      0000B3 62                    1562 	.db #0x62	; 98	'b'
      0000B4 00                    1563 	.db #0x00	; 0
      0000B5 6F                    1564 	.db #0x6f	; 111	'o'
      0000B6 00                    1565 	.db #0x00	; 0
      0000B7 61                    1566 	.db #0x61	; 97	'a'
      0000B8 00                    1567 	.db #0x00	; 0
      0000B9 72                    1568 	.db #0x72	; 114	'r'
      0000BA 00                    1569 	.db #0x00	; 0
      0000BB 64                    1570 	.db #0x64	; 100	'd'
      0000BC 00                    1571 	.db #0x00	; 0
      0000BD                       1572 _SerialNumberStringDescriptor:
      0000BD 16                    1573 	.db #0x16	; 22
      0000BE 03                    1574 	.db #0x03	; 3
      0000BF 32                    1575 	.db #0x32	; 50	'2'
      0000C0 00                    1576 	.db #0x00	; 0
      0000C1 30                    1577 	.db #0x30	; 48	'0'
      0000C2 00                    1578 	.db #0x00	; 0
      0000C3 32                    1579 	.db #0x32	; 50	'2'
      0000C4 00                    1580 	.db #0x00	; 0
      0000C5 33                    1581 	.db #0x33	; 51	'3'
      0000C6 00                    1582 	.db #0x00	; 0
      0000C7 2D                    1583 	.db #0x2d	; 45
      0000C8 00                    1584 	.db #0x00	; 0
      0000C9 30                    1585 	.db #0x30	; 48	'0'
      0000CA 00                    1586 	.db #0x00	; 0
      0000CB 37                    1587 	.db #0x37	; 55	'7'
      0000CC 00                    1588 	.db #0x00	; 0
      0000CD 2D                    1589 	.db #0x2d	; 45
      0000CE 00                    1590 	.db #0x00	; 0
      0000CF 32                    1591 	.db #0x32	; 50	'2'
      0000D0 00                    1592 	.db #0x00	; 0
      0000D1 33                    1593 	.db #0x33	; 51	'3'
      0000D2 00                    1594 	.db #0x00	; 0
      0000D3                       1595 _ReportDescriptor:
      0000D3 05                    1596 	.db #0x05	; 5
      0000D4 01                    1597 	.db #0x01	; 1
      0000D5 09                    1598 	.db #0x09	; 9
      0000D6 06                    1599 	.db #0x06	; 6
      0000D7 A1                    1600 	.db #0xa1	; 161
      0000D8 01                    1601 	.db #0x01	; 1
      0000D9 05                    1602 	.db #0x05	; 5
      0000DA 07                    1603 	.db #0x07	; 7
      0000DB 19                    1604 	.db #0x19	; 25
      0000DC E0                    1605 	.db #0xe0	; 224
      0000DD 29                    1606 	.db #0x29	; 41
      0000DE E7                    1607 	.db #0xe7	; 231
      0000DF 15                    1608 	.db #0x15	; 21
      0000E0 00                    1609 	.db #0x00	; 0
      0000E1 25                    1610 	.db #0x25	; 37
      0000E2 01                    1611 	.db #0x01	; 1
      0000E3 95                    1612 	.db #0x95	; 149
      0000E4 08                    1613 	.db #0x08	; 8
      0000E5 75                    1614 	.db #0x75	; 117	'u'
      0000E6 01                    1615 	.db #0x01	; 1
      0000E7 81                    1616 	.db #0x81	; 129
      0000E8 02                    1617 	.db #0x02	; 2
      0000E9 95                    1618 	.db #0x95	; 149
      0000EA 01                    1619 	.db #0x01	; 1
      0000EB 75                    1620 	.db #0x75	; 117	'u'
      0000EC 08                    1621 	.db #0x08	; 8
      0000ED 81                    1622 	.db #0x81	; 129
      0000EE 03                    1623 	.db #0x03	; 3
      0000EF 95                    1624 	.db #0x95	; 149
      0000F0 06                    1625 	.db #0x06	; 6
      0000F1 75                    1626 	.db #0x75	; 117	'u'
      0000F2 08                    1627 	.db #0x08	; 8
      0000F3 15                    1628 	.db #0x15	; 21
      0000F4 00                    1629 	.db #0x00	; 0
      0000F5 25                    1630 	.db #0x25	; 37
      0000F6 FF                    1631 	.db #0xff	; 255
      0000F7 05                    1632 	.db #0x05	; 5
      0000F8 07                    1633 	.db #0x07	; 7
      0000F9 19                    1634 	.db #0x19	; 25
      0000FA 00                    1635 	.db #0x00	; 0
      0000FB 29                    1636 	.db #0x29	; 41
      0000FC 65                    1637 	.db #0x65	; 101	'e'
      0000FD 81                    1638 	.db #0x81	; 129
      0000FE 00                    1639 	.db #0x00	; 0
      0000FF 25                    1640 	.db #0x25	; 37
      000100 01                    1641 	.db #0x01	; 1
      000101 95                    1642 	.db #0x95	; 149
      000102 05                    1643 	.db #0x05	; 5
      000103 75                    1644 	.db #0x75	; 117	'u'
      000104 01                    1645 	.db #0x01	; 1
      000105 05                    1646 	.db #0x05	; 5
      000106 08                    1647 	.db #0x08	; 8
      000107 19                    1648 	.db #0x19	; 25
      000108 01                    1649 	.db #0x01	; 1
      000109 29                    1650 	.db #0x29	; 41
      00010A 05                    1651 	.db #0x05	; 5
      00010B 91                    1652 	.db #0x91	; 145
      00010C 02                    1653 	.db #0x02	; 2
      00010D 95                    1654 	.db #0x95	; 149
      00010E 01                    1655 	.db #0x01	; 1
      00010F 75                    1656 	.db #0x75	; 117	'u'
      000110 03                    1657 	.db #0x03	; 3
      000111 91                    1658 	.db #0x91	; 145
      000112 03                    1659 	.db #0x03	; 3
      000113 C0                    1660 	.db #0xc0	; 192
                                   1661 	.area CONST   (CODE)
      000114                       1662 ___str_0:
      000114 75 73 62 20 64 69 73  1663 	.ascii "usb disconnect"
             63 6F 6E 6E 65 63 74
      000122 0A                    1664 	.db 0x0a
      000123 00                    1665 	.db 0x00
                                   1666 	.area CSEG    (CODE)
                                   1667 	.area CONST   (CODE)
      000124                       1668 ___str_1:
      000124 75 73 62 20 63 6F 6E  1669 	.ascii "usb connect"
             6E 65 63 74
      00012F 0A                    1670 	.db 0x0a
      000130 00                    1671 	.db 0x00
                                   1672 	.area CSEG    (CODE)
                                   1673 	.area CONST   (CODE)
      000131                       1674 ___str_2:
      000131 75 73 62 20 63 6F 72  1675 	.ascii "usb core isr suspend"
             65 20 69 73 72 20 73
             75 73 70 65 6E 64
      000145 0A                    1676 	.db 0x0a
      000146 00                    1677 	.db 0x00
                                   1678 	.area CSEG    (CODE)
                                   1679 	.area CONST   (CODE)
      000147                       1680 ___str_3:
      000147 75 73 62 20 63 6F 72  1681 	.ascii "usb core isr reset"
             65 20 69 73 72 20 72
             65 73 65 74
      000159 0A                    1682 	.db 0x0a
      00015A 00                    1683 	.db 0x00
                                   1684 	.area CSEG    (CODE)
                                   1685 	.area CONST   (CODE)
      00015B                       1686 ___str_4:
      00015B 75 73 62 20 69 73 72  1687 	.ascii "usb isr ep0 out"
             20 65 70 30 20 6F 75
             74
      00016A 0A                    1688 	.db 0x0a
      00016B 00                    1689 	.db 0x00
                                   1690 	.area CSEG    (CODE)
                                   1691 	.area CONST   (CODE)
      00016C                       1692 ___str_5:
      00016C 55 53 42 20 73 74 61  1693 	.ascii "USB stand input request: "
             6E 64 20 69 6E 70 75
             74 20 72 65 71 75 65
             73 74 3A 20
      000185 00                    1694 	.db 0x00
                                   1695 	.area CSEG    (CODE)
                                   1696 	.area CONST   (CODE)
      000186                       1697 ___str_6:
      000186 47 65 74 20 63 6F 6E  1698 	.ascii "Get configuration"
             66 69 67 75 72 61 74
             69 6F 6E
      000197 0A                    1699 	.db 0x0a
      000198 00                    1700 	.db 0x00
                                   1701 	.area CSEG    (CODE)
                                   1702 	.area CONST   (CODE)
      000199                       1703 ___str_7:
      000199 47 65 74 20 64 65 73  1704 	.ascii "Get descriptor -- "
             63 72 69 70 74 6F 72
             20 2D 2D 20
      0001AB 00                    1705 	.db 0x00
                                   1706 	.area CSEG    (CODE)
                                   1707 	.area CONST   (CODE)
      0001AC                       1708 ___str_8:
      0001AC 64 65 76 69 63 65 20  1709 	.ascii "device descriptor"
             64 65 73 63 72 69 70
             74 6F 72
      0001BD 0A                    1710 	.db 0x0a
      0001BE 00                    1711 	.db 0x00
                                   1712 	.area CSEG    (CODE)
                                   1713 	.area CONST   (CODE)
      0001BF                       1714 ___str_9:
      0001BF 63 6F 6E 66 69 67 75  1715 	.ascii "configuration descriptor"
             72 61 74 69 6F 6E 20
             64 65 73 63 72 69 70
             74 6F 72
      0001D7 0A                    1716 	.db 0x0a
      0001D8 00                    1717 	.db 0x00
                                   1718 	.area CSEG    (CODE)
                                   1719 	.area CONST   (CODE)
      0001D9                       1720 ___str_10:
      0001D9 73 74 72 69 6E 67 20  1721 	.ascii "string descriptor -- "
             64 65 73 63 72 69 70
             74 6F 72 20 2D 2D 20
      0001EE 00                    1722 	.db 0x00
                                   1723 	.area CSEG    (CODE)
                                   1724 	.area CONST   (CODE)
      0001EF                       1725 ___str_11:
      0001EF 6C 61 6E 67 75 61 67  1726 	.ascii "language ID"
             65 20 49 44
      0001FA 0A                    1727 	.db 0x0a
      0001FB 00                    1728 	.db 0x00
                                   1729 	.area CSEG    (CODE)
                                   1730 	.area CONST   (CODE)
      0001FC                       1731 ___str_12:
      0001FC 6D 61 6E 75 66 61 63  1732 	.ascii "manufacture string"
             74 75 72 65 20 73 74
             72 69 6E 67
      00020E 0A                    1733 	.db 0x0a
      00020F 00                    1734 	.db 0x00
                                   1735 	.area CSEG    (CODE)
                                   1736 	.area CONST   (CODE)
      000210                       1737 ___str_13:
      000210 70 72 6F 64 75 63 74  1738 	.ascii "product string"
             20 73 74 72 69 6E 67
      00021E 0A                    1739 	.db 0x0a
      00021F 00                    1740 	.db 0x00
                                   1741 	.area CSEG    (CODE)
                                   1742 	.area CONST   (CODE)
      000220                       1743 ___str_14:
      000220 73 65 72 69 61 6C 20  1744 	.ascii "serial string"
             73 74 72 69 6E 67
      00022D 0A                    1745 	.db 0x0a
      00022E 00                    1746 	.db 0x00
                                   1747 	.area CSEG    (CODE)
                                   1748 	.area CONST   (CODE)
      00022F                       1749 ___str_15:
      00022F 75 6E 6B 6E 6F 77 6E  1750 	.ascii "unknown string"
             20 73 74 72 69 6E 67
      00023D 0A                    1751 	.db 0x0a
      00023E 00                    1752 	.db 0x00
                                   1753 	.area CSEG    (CODE)
                                   1754 	.area CONST   (CODE)
      00023F                       1755 ___str_16:
      00023F 52 65 70 6F 72 74 20  1756 	.ascii "Report descriptor: "
             64 65 73 63 72 69 70
             74 6F 72 3A 20
      000252 00                    1757 	.db 0x00
                                   1758 	.area CSEG    (CODE)
                                   1759 	.area CONST   (CODE)
      000253                       1760 ___str_17:
      000253 6F 74 68 65 72 20 64  1761 	.ascii "other descriptor: "
             65 73 63 72 69 70 74
             6F 72 3A 20
      000265 00                    1762 	.db 0x00
                                   1763 	.area CSEG    (CODE)
                                   1764 	.area CONST   (CODE)
      000266                       1765 ___str_18:
      000266 0A                    1766 	.db 0x0a
      000267 00                    1767 	.db 0x00
                                   1768 	.area CSEG    (CODE)
                                   1769 	.area CONST   (CODE)
      000268                       1770 ___str_19:
      000268 47 65 74 20 69 6E 74  1771 	.ascii "Get interface"
             65 72 66 61 63 65
      000275 0A                    1772 	.db 0x0a
      000276 00                    1773 	.db 0x00
                                   1774 	.area CSEG    (CODE)
                                   1775 	.area CONST   (CODE)
      000277                       1776 ___str_20:
      000277 47 65 74 20 73 74 61  1777 	.ascii "Get status"
             74 75 73
      000281 0A                    1778 	.db 0x0a
      000282 00                    1779 	.db 0x00
                                   1780 	.area CSEG    (CODE)
                                   1781 	.area CONST   (CODE)
      000283                       1782 ___str_21:
      000283 53 79 6E 63 68 20 66  1783 	.ascii "Synch frame"
             72 61 6D 65
      00028E 0A                    1784 	.db 0x0a
      00028F 00                    1785 	.db 0x00
                                   1786 	.area CSEG    (CODE)
                                   1787 	.area CONST   (CODE)
      000290                       1788 ___str_22:
      000290 45 72 72 6F 72 3A 20  1789 	.ascii "Error: undefined stander request"
             75 6E 64 65 66 69 6E
             65 64 20 73 74 61 6E
             64 65 72 20 72 65 71
             75 65 73 74
      0002B0 0A                    1790 	.db 0x0a
      0002B1 00                    1791 	.db 0x00
                                   1792 	.area CSEG    (CODE)
                                   1793 	.area CONST   (CODE)
      0002B2                       1794 ___str_23:
      0002B2 55 53 42 20 63 6C 61  1795 	.ascii "USB class input request:"
             73 73 20 69 6E 70 75
             74 20 72 65 71 75 65
             73 74 3A
      0002CA 0A                    1796 	.db 0x0a
      0002CB 00                    1797 	.db 0x00
                                   1798 	.area CSEG    (CODE)
                                   1799 	.area CONST   (CODE)
      0002CC                       1800 ___str_24:
      0002CC 55 53 42 20 76 65 6E  1801 	.ascii "USB vendor input request:"
             64 6F 72 20 69 6E 70
             75 74 20 72 65 71 75
             65 73 74 3A
      0002E5 0A                    1802 	.db 0x0a
      0002E6 00                    1803 	.db 0x00
                                   1804 	.area CSEG    (CODE)
                                   1805 	.area CONST   (CODE)
      0002E7                       1806 ___str_25:
      0002E7 45 72 72 6F 72 3A 20  1807 	.ascii "Error: undefined input request:"
             75 6E 64 65 66 69 6E
             65 64 20 69 6E 70 75
             74 20 72 65 71 75 65
             73 74 3A
      000306 0A                    1808 	.db 0x0a
      000307 00                    1809 	.db 0x00
                                   1810 	.area CSEG    (CODE)
                                   1811 	.area CONST   (CODE)
      000308                       1812 ___str_26:
      000308 55 53 42 20 73 74 61  1813 	.ascii "USB stander output request: "
             6E 64 65 72 20 6F 75
             74 70 75 74 20 72 65
             71 75 65 73 74 3A 20
      000324 00                    1814 	.db 0x00
                                   1815 	.area CSEG    (CODE)
                                   1816 	.area CONST   (CODE)
      000325                       1817 ___str_27:
      000325 63 6C 65 61 72 20 66  1818 	.ascii "clear feature"
             65 61 74 75 72 65
      000332 0A                    1819 	.db 0x0a
      000333 00                    1820 	.db 0x00
                                   1821 	.area CSEG    (CODE)
                                   1822 	.area CONST   (CODE)
      000334                       1823 ___str_28:
      000334 73 65 74 20 61 64 64  1824 	.ascii "set address, the address is: "
             72 65 73 73 2C 20 74
             68 65 20 61 64 64 72
             65 73 73 20 69 73 3A
             20
      000351 00                    1825 	.db 0x00
                                   1826 	.area CSEG    (CODE)
                                   1827 	.area CONST   (CODE)
      000352                       1828 ___str_29:
      000352 73 65 74 20 63 6F 6E  1829 	.ascii "set configuration"
             66 69 67 75 72 61 74
             69 6F 6E
      000363 0A                    1830 	.db 0x0a
      000364 00                    1831 	.db 0x00
                                   1832 	.area CSEG    (CODE)
                                   1833 	.area CONST   (CODE)
      000365                       1834 ___str_30:
      000365 73 65 74 20 64 65 73  1835 	.ascii "set descriptor"
             63 72 69 70 74 6F 72
      000373 0A                    1836 	.db 0x0a
      000374 00                    1837 	.db 0x00
                                   1838 	.area CSEG    (CODE)
                                   1839 	.area CONST   (CODE)
      000375                       1840 ___str_31:
      000375 73 65 74 20 66 65 61  1841 	.ascii "set feature"
             74 75 72 65
      000380 0A                    1842 	.db 0x0a
      000381 00                    1843 	.db 0x00
                                   1844 	.area CSEG    (CODE)
                                   1845 	.area CONST   (CODE)
      000382                       1846 ___str_32:
      000382 73 65 74 20 69 6E 74  1847 	.ascii "set interface"
             65 72 66 61 63 65
      00038F 0A                    1848 	.db 0x0a
      000390 00                    1849 	.db 0x00
                                   1850 	.area CSEG    (CODE)
                                   1851 	.area CONST   (CODE)
      000391                       1852 ___str_33:
      000391 55 53 42 20 63 6C 61  1853 	.ascii "USB class output request:"
             73 73 20 6F 75 74 70
             75 74 20 72 65 71 75
             65 73 74 3A
      0003AA 0A                    1854 	.db 0x0a
      0003AB 00                    1855 	.db 0x00
                                   1856 	.area CSEG    (CODE)
                                   1857 	.area CONST   (CODE)
      0003AC                       1858 ___str_34:
      0003AC 73 65 74 20 69 64 6C  1859 	.ascii "set idle"
             65
      0003B4 0A                    1860 	.db 0x0a
      0003B5 00                    1861 	.db 0x00
                                   1862 	.area CSEG    (CODE)
                                   1863 	.area CONST   (CODE)
      0003B6                       1864 ___str_35:
      0003B6 75 6E 6B 6E 6F 77 6E  1865 	.ascii "unknown request"
             20 72 65 71 75 65 73
             74
      0003C5 0A                    1866 	.db 0x0a
      0003C6 00                    1867 	.db 0x00
                                   1868 	.area CSEG    (CODE)
                                   1869 	.area CONST   (CODE)
      0003C7                       1870 ___str_36:
      0003C7 55 53 42 20 76 65 6E  1871 	.ascii "USB vendor output request:"
             64 6F 72 20 6F 75 74
             70 75 74 20 72 65 71
             75 65 73 74 3A
      0003E1 0A                    1872 	.db 0x0a
      0003E2 00                    1873 	.db 0x00
                                   1874 	.area CSEG    (CODE)
                                   1875 	.area CONST   (CODE)
      0003E3                       1876 ___str_37:
      0003E3 45 72 72 6F 72 3A 20  1877 	.ascii "Error: undefined output request."
             75 6E 64 65 66 69 6E
             65 64 20 6F 75 74 70
             75 74 20 72 65 71 75
             65 73 74 2E
      000403 0A                    1878 	.db 0x0a
      000404 00                    1879 	.db 0x00
                                   1880 	.area CSEG    (CODE)
                                   1881 	.area CONST   (CODE)
      000405                       1882 ___str_38:
      000405 75 73 62 20 69 73 72  1883 	.ascii "usb isr ep0 in"
             20 65 70 30 20 69 6E
      000413 0A                    1884 	.db 0x0a
      000414 00                    1885 	.db 0x00
                                   1886 	.area CSEG    (CODE)
                                   1887 	.area CONST   (CODE)
      000415                       1888 ___str_39:
      000415 75 73 62 20 63 6F 72  1889 	.ascii "usb core ep1 out"
             65 20 65 70 31 20 6F
             75 74
      000425 0A                    1890 	.db 0x0a
      000426 00                    1891 	.db 0x00
                                   1892 	.area CSEG    (CODE)
                                   1893 	.area CONST   (CODE)
      000427                       1894 ___str_40:
      000427 75 73 62 20 63 6F 72  1895 	.ascii "usb core ep1 in"
             65 20 65 70 31 20 69
             6E
      000436 0A                    1896 	.db 0x0a
      000437 00                    1897 	.db 0x00
                                   1898 	.area CSEG    (CODE)
                                   1899 	.area CONST   (CODE)
      000438                       1900 ___str_41:
      000438 75 73 62 20 63 6F 72  1901 	.ascii "usb core ep2 out"
             65 20 65 70 32 20 6F
             75 74
      000448 0A                    1902 	.db 0x0a
      000449 00                    1903 	.db 0x00
                                   1904 	.area CSEG    (CODE)
                                   1905 	.area CONST   (CODE)
      00044A                       1906 ___str_42:
      00044A 75 73 62 20 63 6F 72  1907 	.ascii "usb core ep2 in"
             65 20 65 70 32 20 69
             6E
      000459 0A                    1908 	.db 0x0a
      00045A 00                    1909 	.db 0x00
                                   1910 	.area CSEG    (CODE)
                                   1911 	.area XINIT   (CODE)
                                   1912 	.area CABS    (ABS,CODE)
