                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module usbcore
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ReportDescriptor
                                     12 	.globl _SerialNumberStringDescriptor
                                     13 	.globl _ProductStringDescriptor
                                     14 	.globl _ManufacturerStringDescriptor
                                     15 	.globl _languageId
                                     16 	.globl _ConfigurationDescriptor
                                     17 	.globl _DeviceDescriptor
                                     18 	.globl _delay_ms
                                     19 	.globl _D12_set_endpoint_enable
                                     20 	.globl _D12_set_address
                                     21 	.globl _D12_write_endpoint_buffer
                                     22 	.globl _D12_read_endpoint_last_status
                                     23 	.globl _D12_Acknowlwdge_setup
                                     24 	.globl _D12_clear_buffer
                                     25 	.globl _D12_read_endpoint_buffer
                                     26 	.globl _D12_write_byte
                                     27 	.globl _D12_write_command
                                     28 	.globl _dump_hex
                                     29 	.globl _print_hex
                                     30 	.globl _Prints
                                     31 	.globl _memset
                                     32 	.globl _TF2
                                     33 	.globl _EXF2
                                     34 	.globl _RCLK
                                     35 	.globl _TCLK
                                     36 	.globl _EXEN2
                                     37 	.globl _TR2
                                     38 	.globl _C_T2
                                     39 	.globl _CP_RL2
                                     40 	.globl _T2CON_7
                                     41 	.globl _T2CON_6
                                     42 	.globl _T2CON_5
                                     43 	.globl _T2CON_4
                                     44 	.globl _T2CON_3
                                     45 	.globl _T2CON_2
                                     46 	.globl _T2CON_1
                                     47 	.globl _T2CON_0
                                     48 	.globl _PT2
                                     49 	.globl _ET2
                                     50 	.globl _CY
                                     51 	.globl _AC
                                     52 	.globl _F0
                                     53 	.globl _RS1
                                     54 	.globl _RS0
                                     55 	.globl _OV
                                     56 	.globl _F1
                                     57 	.globl _P
                                     58 	.globl _PS
                                     59 	.globl _PT1
                                     60 	.globl _PX1
                                     61 	.globl _PT0
                                     62 	.globl _PX0
                                     63 	.globl _RD
                                     64 	.globl _WR
                                     65 	.globl _T1
                                     66 	.globl _T0
                                     67 	.globl _INT1
                                     68 	.globl _INT0
                                     69 	.globl _TXD
                                     70 	.globl _RXD
                                     71 	.globl _P3_7
                                     72 	.globl _P3_6
                                     73 	.globl _P3_5
                                     74 	.globl _P3_4
                                     75 	.globl _P3_3
                                     76 	.globl _P3_2
                                     77 	.globl _P3_1
                                     78 	.globl _P3_0
                                     79 	.globl _EA
                                     80 	.globl _ES
                                     81 	.globl _ET1
                                     82 	.globl _EX1
                                     83 	.globl _ET0
                                     84 	.globl _EX0
                                     85 	.globl _P2_7
                                     86 	.globl _P2_6
                                     87 	.globl _P2_5
                                     88 	.globl _P2_4
                                     89 	.globl _P2_3
                                     90 	.globl _P2_2
                                     91 	.globl _P2_1
                                     92 	.globl _P2_0
                                     93 	.globl _SM0
                                     94 	.globl _SM1
                                     95 	.globl _SM2
                                     96 	.globl _REN
                                     97 	.globl _TB8
                                     98 	.globl _RB8
                                     99 	.globl _TI
                                    100 	.globl _RI
                                    101 	.globl _P1_7
                                    102 	.globl _P1_6
                                    103 	.globl _P1_5
                                    104 	.globl _P1_4
                                    105 	.globl _P1_3
                                    106 	.globl _P1_2
                                    107 	.globl _P1_1
                                    108 	.globl _P1_0
                                    109 	.globl _TF1
                                    110 	.globl _TR1
                                    111 	.globl _TF0
                                    112 	.globl _TR0
                                    113 	.globl _IE1
                                    114 	.globl _IT1
                                    115 	.globl _IE0
                                    116 	.globl _IT0
                                    117 	.globl _P0_7
                                    118 	.globl _P0_6
                                    119 	.globl _P0_5
                                    120 	.globl _P0_4
                                    121 	.globl _P0_3
                                    122 	.globl _P0_2
                                    123 	.globl _P0_1
                                    124 	.globl _P0_0
                                    125 	.globl _TH2
                                    126 	.globl _TL2
                                    127 	.globl _RCAP2H
                                    128 	.globl _RCAP2L
                                    129 	.globl _T2CON
                                    130 	.globl _B
                                    131 	.globl _ACC
                                    132 	.globl _PSW
                                    133 	.globl _IP
                                    134 	.globl _P3
                                    135 	.globl _IE
                                    136 	.globl _P2
                                    137 	.globl _SBUF
                                    138 	.globl _SCON
                                    139 	.globl _P1
                                    140 	.globl _TH1
                                    141 	.globl _TH0
                                    142 	.globl _TL1
                                    143 	.globl _TL0
                                    144 	.globl _TMOD
                                    145 	.globl _TCON
                                    146 	.globl _PCON
                                    147 	.globl _DPH
                                    148 	.globl _DPL
                                    149 	.globl _SP
                                    150 	.globl _P0
                                    151 	.globl _ConfigValue
                                    152 	.globl _Ep1InIsBusy
                                    153 	.globl _NeedZeroPacket
                                    154 	.globl _SendLength
                                    155 	.globl _pSendData
                                    156 	.globl _wLength
                                    157 	.globl _wIndex
                                    158 	.globl _wValue
                                    159 	.globl _bRequest
                                    160 	.globl _bmRequestType
                                    161 	.globl _usb_disconnect
                                    162 	.globl _usb_connect
                                    163 	.globl _usb_bus_isr_suspend
                                    164 	.globl _usb_bus_isr_reset
                                    165 	.globl _usb_bus_isr_ep0_out
                                    166 	.globl _usb_bus_isr_ep0_in
                                    167 	.globl _usb_bus_isr_ep1_out
                                    168 	.globl _usb_bus_isr_ep1_in
                                    169 	.globl _usb_bus_isr_ep2_out
                                    170 	.globl _usb_bus_isr_ep2_in
                                    171 	.globl _usb_bus_ep0_send_data
                                    172 ;--------------------------------------------------------
                                    173 ; special function registers
                                    174 ;--------------------------------------------------------
                                    175 	.area RSEG    (ABS,DATA)
      000000                        176 	.org 0x0000
                           000080   177 _P0	=	0x0080
                           000081   178 _SP	=	0x0081
                           000082   179 _DPL	=	0x0082
                           000083   180 _DPH	=	0x0083
                           000087   181 _PCON	=	0x0087
                           000088   182 _TCON	=	0x0088
                           000089   183 _TMOD	=	0x0089
                           00008A   184 _TL0	=	0x008a
                           00008B   185 _TL1	=	0x008b
                           00008C   186 _TH0	=	0x008c
                           00008D   187 _TH1	=	0x008d
                           000090   188 _P1	=	0x0090
                           000098   189 _SCON	=	0x0098
                           000099   190 _SBUF	=	0x0099
                           0000A0   191 _P2	=	0x00a0
                           0000A8   192 _IE	=	0x00a8
                           0000B0   193 _P3	=	0x00b0
                           0000B8   194 _IP	=	0x00b8
                           0000D0   195 _PSW	=	0x00d0
                           0000E0   196 _ACC	=	0x00e0
                           0000F0   197 _B	=	0x00f0
                           0000C8   198 _T2CON	=	0x00c8
                           0000CA   199 _RCAP2L	=	0x00ca
                           0000CB   200 _RCAP2H	=	0x00cb
                           0000CC   201 _TL2	=	0x00cc
                           0000CD   202 _TH2	=	0x00cd
                                    203 ;--------------------------------------------------------
                                    204 ; special function bits
                                    205 ;--------------------------------------------------------
                                    206 	.area RSEG    (ABS,DATA)
      000000                        207 	.org 0x0000
                           000080   208 _P0_0	=	0x0080
                           000081   209 _P0_1	=	0x0081
                           000082   210 _P0_2	=	0x0082
                           000083   211 _P0_3	=	0x0083
                           000084   212 _P0_4	=	0x0084
                           000085   213 _P0_5	=	0x0085
                           000086   214 _P0_6	=	0x0086
                           000087   215 _P0_7	=	0x0087
                           000088   216 _IT0	=	0x0088
                           000089   217 _IE0	=	0x0089
                           00008A   218 _IT1	=	0x008a
                           00008B   219 _IE1	=	0x008b
                           00008C   220 _TR0	=	0x008c
                           00008D   221 _TF0	=	0x008d
                           00008E   222 _TR1	=	0x008e
                           00008F   223 _TF1	=	0x008f
                           000090   224 _P1_0	=	0x0090
                           000091   225 _P1_1	=	0x0091
                           000092   226 _P1_2	=	0x0092
                           000093   227 _P1_3	=	0x0093
                           000094   228 _P1_4	=	0x0094
                           000095   229 _P1_5	=	0x0095
                           000096   230 _P1_6	=	0x0096
                           000097   231 _P1_7	=	0x0097
                           000098   232 _RI	=	0x0098
                           000099   233 _TI	=	0x0099
                           00009A   234 _RB8	=	0x009a
                           00009B   235 _TB8	=	0x009b
                           00009C   236 _REN	=	0x009c
                           00009D   237 _SM2	=	0x009d
                           00009E   238 _SM1	=	0x009e
                           00009F   239 _SM0	=	0x009f
                           0000A0   240 _P2_0	=	0x00a0
                           0000A1   241 _P2_1	=	0x00a1
                           0000A2   242 _P2_2	=	0x00a2
                           0000A3   243 _P2_3	=	0x00a3
                           0000A4   244 _P2_4	=	0x00a4
                           0000A5   245 _P2_5	=	0x00a5
                           0000A6   246 _P2_6	=	0x00a6
                           0000A7   247 _P2_7	=	0x00a7
                           0000A8   248 _EX0	=	0x00a8
                           0000A9   249 _ET0	=	0x00a9
                           0000AA   250 _EX1	=	0x00aa
                           0000AB   251 _ET1	=	0x00ab
                           0000AC   252 _ES	=	0x00ac
                           0000AF   253 _EA	=	0x00af
                           0000B0   254 _P3_0	=	0x00b0
                           0000B1   255 _P3_1	=	0x00b1
                           0000B2   256 _P3_2	=	0x00b2
                           0000B3   257 _P3_3	=	0x00b3
                           0000B4   258 _P3_4	=	0x00b4
                           0000B5   259 _P3_5	=	0x00b5
                           0000B6   260 _P3_6	=	0x00b6
                           0000B7   261 _P3_7	=	0x00b7
                           0000B0   262 _RXD	=	0x00b0
                           0000B1   263 _TXD	=	0x00b1
                           0000B2   264 _INT0	=	0x00b2
                           0000B3   265 _INT1	=	0x00b3
                           0000B4   266 _T0	=	0x00b4
                           0000B5   267 _T1	=	0x00b5
                           0000B6   268 _WR	=	0x00b6
                           0000B7   269 _RD	=	0x00b7
                           0000B8   270 _PX0	=	0x00b8
                           0000B9   271 _PT0	=	0x00b9
                           0000BA   272 _PX1	=	0x00ba
                           0000BB   273 _PT1	=	0x00bb
                           0000BC   274 _PS	=	0x00bc
                           0000D0   275 _P	=	0x00d0
                           0000D1   276 _F1	=	0x00d1
                           0000D2   277 _OV	=	0x00d2
                           0000D3   278 _RS0	=	0x00d3
                           0000D4   279 _RS1	=	0x00d4
                           0000D5   280 _F0	=	0x00d5
                           0000D6   281 _AC	=	0x00d6
                           0000D7   282 _CY	=	0x00d7
                           0000AD   283 _ET2	=	0x00ad
                           0000BD   284 _PT2	=	0x00bd
                           0000C8   285 _T2CON_0	=	0x00c8
                           0000C9   286 _T2CON_1	=	0x00c9
                           0000CA   287 _T2CON_2	=	0x00ca
                           0000CB   288 _T2CON_3	=	0x00cb
                           0000CC   289 _T2CON_4	=	0x00cc
                           0000CD   290 _T2CON_5	=	0x00cd
                           0000CE   291 _T2CON_6	=	0x00ce
                           0000CF   292 _T2CON_7	=	0x00cf
                           0000C8   293 _CP_RL2	=	0x00c8
                           0000C9   294 _C_T2	=	0x00c9
                           0000CA   295 _TR2	=	0x00ca
                           0000CB   296 _EXEN2	=	0x00cb
                           0000CC   297 _TCLK	=	0x00cc
                           0000CD   298 _RCLK	=	0x00cd
                           0000CE   299 _EXF2	=	0x00ce
                           0000CF   300 _TF2	=	0x00cf
                                    301 ;--------------------------------------------------------
                                    302 ; overlayable register banks
                                    303 ;--------------------------------------------------------
                                    304 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        305 	.ds 8
                                    306 ;--------------------------------------------------------
                                    307 ; internal ram data
                                    308 ;--------------------------------------------------------
                                    309 	.area DSEG    (DATA)
      000000                        310 _bmRequestType::
      000000                        311 	.ds 1
      000001                        312 _bRequest::
      000001                        313 	.ds 1
      000002                        314 _wValue::
      000002                        315 	.ds 2
      000004                        316 _wIndex::
      000004                        317 	.ds 2
      000006                        318 _wLength::
      000006                        319 	.ds 2
      000008                        320 _pSendData::
      000008                        321 	.ds 3
      00000B                        322 _SendLength::
      00000B                        323 	.ds 2
      00000D                        324 _NeedZeroPacket::
      00000D                        325 	.ds 1
      00000E                        326 _Ep1InIsBusy::
      00000E                        327 	.ds 1
      00000F                        328 _ConfigValue::
      00000F                        329 	.ds 1
      000010                        330 _usb_bus_isr_ep0_out_buffer_65536_55:
      000010                        331 	.ds 16
                                    332 ;--------------------------------------------------------
                                    333 ; overlayable items in internal ram 
                                    334 ;--------------------------------------------------------
                                    335 ;--------------------------------------------------------
                                    336 ; indirectly addressable internal ram data
                                    337 ;--------------------------------------------------------
                                    338 	.area ISEG    (DATA)
                                    339 ;--------------------------------------------------------
                                    340 ; absolute internal ram data
                                    341 ;--------------------------------------------------------
                                    342 	.area IABS    (ABS,DATA)
                                    343 	.area IABS    (ABS,DATA)
                                    344 ;--------------------------------------------------------
                                    345 ; bit data
                                    346 ;--------------------------------------------------------
                                    347 	.area BSEG    (BIT)
                                    348 ;--------------------------------------------------------
                                    349 ; paged external ram data
                                    350 ;--------------------------------------------------------
                                    351 	.area PSEG    (PAG,XDATA)
                                    352 ;--------------------------------------------------------
                                    353 ; external ram data
                                    354 ;--------------------------------------------------------
                                    355 	.area XSEG    (XDATA)
                                    356 ;--------------------------------------------------------
                                    357 ; absolute external ram data
                                    358 ;--------------------------------------------------------
                                    359 	.area XABS    (ABS,XDATA)
                                    360 ;--------------------------------------------------------
                                    361 ; external initialized ram data
                                    362 ;--------------------------------------------------------
                                    363 	.area XISEG   (XDATA)
                                    364 	.area HOME    (CODE)
                                    365 	.area GSINIT0 (CODE)
                                    366 	.area GSINIT1 (CODE)
                                    367 	.area GSINIT2 (CODE)
                                    368 	.area GSINIT3 (CODE)
                                    369 	.area GSINIT4 (CODE)
                                    370 	.area GSINIT5 (CODE)
                                    371 	.area GSINIT  (CODE)
                                    372 	.area GSFINAL (CODE)
                                    373 	.area CSEG    (CODE)
                                    374 ;--------------------------------------------------------
                                    375 ; global & static initialisations
                                    376 ;--------------------------------------------------------
                                    377 	.area HOME    (CODE)
                                    378 	.area GSINIT  (CODE)
                                    379 	.area GSFINAL (CODE)
                                    380 	.area GSINIT  (CODE)
                                    381 ;--------------------------------------------------------
                                    382 ; Home
                                    383 ;--------------------------------------------------------
                                    384 	.area HOME    (CODE)
                                    385 	.area HOME    (CODE)
                                    386 ;--------------------------------------------------------
                                    387 ; code
                                    388 ;--------------------------------------------------------
                                    389 	.area CSEG    (CODE)
                                    390 ;------------------------------------------------------------
                                    391 ;Allocation info for local variables in function 'usb_disconnect'
                                    392 ;------------------------------------------------------------
                                    393 ;	src/usbcore.c:259: void usb_disconnect(void)
                                    394 ;	-----------------------------------------
                                    395 ;	 function usb_disconnect
                                    396 ;	-----------------------------------------
      000000                        397 _usb_disconnect:
                           000007   398 	ar7 = 0x07
                           000006   399 	ar6 = 0x06
                           000005   400 	ar5 = 0x05
                           000004   401 	ar4 = 0x04
                           000003   402 	ar3 = 0x03
                           000002   403 	ar2 = 0x02
                           000001   404 	ar1 = 0x01
                           000000   405 	ar0 = 0x00
                                    406 ;	src/usbcore.c:262: Prints("usb disconnect\n");
      000000 90r00rFA         [24]  407 	mov	dptr,#___str_0
      000003 75 F0 80         [24]  408 	mov	b,#0x80
      000006 12r00r00         [24]  409 	lcall	_Prints
                                    410 ;	src/usbcore.c:264: D12_write_command(D12_SET_MODE);    /* set mode */
      000009 75 82 F3         [24]  411 	mov	dpl,#0xf3
      00000C 12r00r00         [24]  412 	lcall	_D12_write_command
                                    413 ;	src/usbcore.c:265: D12_write_byte(0x06);               /* byte1, pull-up R disconnect, indicate usb disconnet */
      00000F 75 82 06         [24]  414 	mov	dpl,#0x06
      000012 12r00r00         [24]  415 	lcall	_D12_write_byte
                                    416 ;	src/usbcore.c:266: D12_write_byte(0x47);               /* byte2 */
      000015 75 82 47         [24]  417 	mov	dpl,#0x47
      000018 12r00r00         [24]  418 	lcall	_D12_write_byte
                                    419 ;	src/usbcore.c:267: delay_ms(1000);
      00001B 90 03 E8         [24]  420 	mov	dptr,#0x03e8
                                    421 ;	src/usbcore.c:268: }
      00001E 02r00r00         [24]  422 	ljmp	_delay_ms
                                    423 ;------------------------------------------------------------
                                    424 ;Allocation info for local variables in function 'usb_connect'
                                    425 ;------------------------------------------------------------
                                    426 ;	src/usbcore.c:270: void usb_connect(void)
                                    427 ;	-----------------------------------------
                                    428 ;	 function usb_connect
                                    429 ;	-----------------------------------------
      000021                        430 _usb_connect:
                                    431 ;	src/usbcore.c:273: Prints("usb connect\n");
      000021 90r01r0A         [24]  432 	mov	dptr,#___str_1
      000024 75 F0 80         [24]  433 	mov	b,#0x80
      000027 12r00r00         [24]  434 	lcall	_Prints
                                    435 ;	src/usbcore.c:275: D12_write_command(D12_SET_MODE);    /* set mode */
      00002A 75 82 F3         [24]  436 	mov	dpl,#0xf3
      00002D 12r00r00         [24]  437 	lcall	_D12_write_command
                                    438 ;	src/usbcore.c:276: D12_write_byte(0x16);               /* byte1, pull-up R connect, indicate usb connet */
      000030 75 82 16         [24]  439 	mov	dpl,#0x16
      000033 12r00r00         [24]  440 	lcall	_D12_write_byte
                                    441 ;	src/usbcore.c:277: D12_write_byte(0x47);               /* byte2 */
      000036 75 82 47         [24]  442 	mov	dpl,#0x47
                                    443 ;	src/usbcore.c:278: }
      000039 02r00r00         [24]  444 	ljmp	_D12_write_byte
                                    445 ;------------------------------------------------------------
                                    446 ;Allocation info for local variables in function 'usb_bus_isr_suspend'
                                    447 ;------------------------------------------------------------
                                    448 ;	src/usbcore.c:280: void usb_bus_isr_suspend()
                                    449 ;	-----------------------------------------
                                    450 ;	 function usb_bus_isr_suspend
                                    451 ;	-----------------------------------------
      00003C                        452 _usb_bus_isr_suspend:
                                    453 ;	src/usbcore.c:283: Prints("usb core isr suspend\n");
      00003C 90r01r17         [24]  454 	mov	dptr,#___str_2
      00003F 75 F0 80         [24]  455 	mov	b,#0x80
                                    456 ;	src/usbcore.c:285: }
      000042 02r00r00         [24]  457 	ljmp	_Prints
                                    458 ;------------------------------------------------------------
                                    459 ;Allocation info for local variables in function 'usb_bus_isr_reset'
                                    460 ;------------------------------------------------------------
                                    461 ;	src/usbcore.c:287: void usb_bus_isr_reset()
                                    462 ;	-----------------------------------------
                                    463 ;	 function usb_bus_isr_reset
                                    464 ;	-----------------------------------------
      000045                        465 _usb_bus_isr_reset:
                                    466 ;	src/usbcore.c:290: Prints("usb core isr reset\n");
      000045 90r01r2D         [24]  467 	mov	dptr,#___str_3
      000048 75 F0 80         [24]  468 	mov	b,#0x80
      00004B 12r00r00         [24]  469 	lcall	_Prints
                                    470 ;	src/usbcore.c:292: Ep1InIsBusy = 0;
      00004E 75*0E 00         [24]  471 	mov	_Ep1InIsBusy,#0x00
                                    472 ;	src/usbcore.c:293: }
      000051 22               [24]  473 	ret
                                    474 ;------------------------------------------------------------
                                    475 ;Allocation info for local variables in function 'usb_bus_isr_ep0_out'
                                    476 ;------------------------------------------------------------
                                    477 ;buffer                    Allocated with name '_usb_bus_isr_ep0_out_buffer_65536_55'
                                    478 ;------------------------------------------------------------
                                    479 ;	src/usbcore.c:306: void usb_bus_isr_ep0_out()
                                    480 ;	-----------------------------------------
                                    481 ;	 function usb_bus_isr_ep0_out
                                    482 ;	-----------------------------------------
      000052                        483 _usb_bus_isr_ep0_out:
                                    484 ;	src/usbcore.c:310: Prints("usb isr ep0 out\n");
      000052 90r01r41         [24]  485 	mov	dptr,#___str_4
      000055 75 F0 80         [24]  486 	mov	b,#0x80
      000058 12r00r00         [24]  487 	lcall	_Prints
                                    488 ;	src/usbcore.c:312: memset(buffer, 0, sizeof(buffer));
      00005B 75*00 00         [24]  489 	mov	_memset_PARM_2,#0x00
      00005E 75*00 10         [24]  490 	mov	_memset_PARM_3,#0x10
      000061 75*01 00         [24]  491 	mov	(_memset_PARM_3 + 1),#0x00
      000064 90r00r10         [24]  492 	mov	dptr,#_usb_bus_isr_ep0_out_buffer_65536_55
      000067 75 F0 40         [24]  493 	mov	b,#0x40
      00006A 12r00r00         [24]  494 	lcall	_memset
                                    495 ;	src/usbcore.c:315: if (D12_read_endpoint_last_status(0) & 0x20) {
      00006D 75 82 00         [24]  496 	mov	dpl,#0x00
      000070 12r00r00         [24]  497 	lcall	_D12_read_endpoint_last_status
      000073 E5 82            [12]  498 	mov	a,dpl
      000075 20 E5 03         [24]  499 	jb	acc.5,00299$
      000078 02r04rA9         [24]  500 	ljmp	00163$
      00007B                        501 00299$:
                                    502 ;	src/usbcore.c:316: D12_read_endpoint_buffer(0, 16, buffer);
      00007B 75*00r10         [24]  503 	mov	_D12_read_endpoint_buffer_PARM_3,#_usb_bus_isr_ep0_out_buffer_65536_55
      00007E 75*01 00         [24]  504 	mov	(_D12_read_endpoint_buffer_PARM_3 + 1),#0x00
      000081 75*02 40         [24]  505 	mov	(_D12_read_endpoint_buffer_PARM_3 + 2),#0x40
      000084 75*00 10         [24]  506 	mov	_D12_read_endpoint_buffer_PARM_2,#0x10
      000087 75 82 00         [24]  507 	mov	dpl,#0x00
      00008A 12r00r00         [24]  508 	lcall	_D12_read_endpoint_buffer
                                    509 ;	src/usbcore.c:317: D12_Acknowlwdge_setup();
      00008D 12r00r00         [24]  510 	lcall	_D12_Acknowlwdge_setup
                                    511 ;	src/usbcore.c:318: D12_clear_buffer();
      000090 12r00r00         [24]  512 	lcall	_D12_clear_buffer
                                    513 ;	src/usbcore.c:320: bmRequestType = buffer[0];
      000093 85*10*00         [24]  514 	mov	_bmRequestType,_usb_bus_isr_ep0_out_buffer_65536_55
                                    515 ;	src/usbcore.c:321: bRequest = buffer[1];
      000096 85*11*01         [24]  516 	mov	_bRequest,(_usb_bus_isr_ep0_out_buffer_65536_55 + 0x0001)
                                    517 ;	src/usbcore.c:322: wValue = buffer[2] | (((uint16)buffer[3]) << 8);
      000099 AF*13            [24]  518 	mov	r7,(_usb_bus_isr_ep0_out_buffer_65536_55 + 0x0003)
      00009B 7E 00            [12]  519 	mov	r6,#0x00
      00009D AC*12            [24]  520 	mov	r4,(_usb_bus_isr_ep0_out_buffer_65536_55 + 0x0002)
      00009F 7D 00            [12]  521 	mov	r5,#0x00
      0000A1 EE               [12]  522 	mov	a,r6
      0000A2 4C               [12]  523 	orl	a,r4
      0000A3 F5*02            [12]  524 	mov	_wValue,a
      0000A5 EF               [12]  525 	mov	a,r7
      0000A6 4D               [12]  526 	orl	a,r5
      0000A7 F5*03            [12]  527 	mov	(_wValue + 1),a
                                    528 ;	src/usbcore.c:323: wIndex = buffer[4] | (((uint16)buffer[5]) << 8);
      0000A9 AF*15            [24]  529 	mov	r7,(_usb_bus_isr_ep0_out_buffer_65536_55 + 0x0005)
      0000AB 7E 00            [12]  530 	mov	r6,#0x00
      0000AD AC*14            [24]  531 	mov	r4,(_usb_bus_isr_ep0_out_buffer_65536_55 + 0x0004)
      0000AF 7D 00            [12]  532 	mov	r5,#0x00
      0000B1 EE               [12]  533 	mov	a,r6
      0000B2 4C               [12]  534 	orl	a,r4
      0000B3 F5*04            [12]  535 	mov	_wIndex,a
      0000B5 EF               [12]  536 	mov	a,r7
      0000B6 4D               [12]  537 	orl	a,r5
      0000B7 F5*05            [12]  538 	mov	(_wIndex + 1),a
                                    539 ;	src/usbcore.c:324: wLength = buffer[6] | (((uint16)buffer[7]) << 8);
      0000B9 AF*17            [24]  540 	mov	r7,(_usb_bus_isr_ep0_out_buffer_65536_55 + 0x0007)
      0000BB 7E 00            [12]  541 	mov	r6,#0x00
      0000BD AC*16            [24]  542 	mov	r4,(_usb_bus_isr_ep0_out_buffer_65536_55 + 0x0006)
      0000BF 7D 00            [12]  543 	mov	r5,#0x00
      0000C1 EE               [12]  544 	mov	a,r6
      0000C2 4C               [12]  545 	orl	a,r4
      0000C3 F5*06            [12]  546 	mov	_wLength,a
      0000C5 EF               [12]  547 	mov	a,r7
      0000C6 4D               [12]  548 	orl	a,r5
      0000C7 F5*07            [12]  549 	mov	(_wLength + 1),a
                                    550 ;	src/usbcore.c:326: if ((bmRequestType & 0x80) == 0x80) {   /* input request */
      0000C9 AE*00            [24]  551 	mov	r6,_bmRequestType
      0000CB 53 06 80         [24]  552 	anl	ar6,#0x80
      0000CE 7F 00            [12]  553 	mov	r7,#0x00
      0000D0 BE 80 05         [24]  554 	cjne	r6,#0x80,00300$
      0000D3 BF 00 02         [24]  555 	cjne	r7,#0x00,00300$
      0000D6 80 03            [24]  556 	sjmp	00301$
      0000D8                        557 00300$:
      0000D8 02r03r9C         [24]  558 	ljmp	00160$
      0000DB                        559 00301$:
                                    560 ;	src/usbcore.c:329: switch ((bmRequestType >> 5) & 0x3) {
      0000DB E5*00            [12]  561 	mov	a,_bmRequestType
      0000DD C4               [12]  562 	swap	a
      0000DE 03               [12]  563 	rr	a
      0000DF 54 07            [12]  564 	anl	a,#0x07
      0000E1 FF               [12]  565 	mov	r7,a
      0000E2 53 07 03         [24]  566 	anl	ar7,#0x03
      0000E5 7E 00            [12]  567 	mov	r6,#0x00
      0000E7 BF 00 05         [24]  568 	cjne	r7,#0x00,00302$
      0000EA BE 00 02         [24]  569 	cjne	r6,#0x00,00302$
      0000ED 80 15            [24]  570 	sjmp	00101$
      0000EF                        571 00302$:
      0000EF BF 01 06         [24]  572 	cjne	r7,#0x01,00303$
      0000F2 BE 00 03         [24]  573 	cjne	r6,#0x00,00303$
      0000F5 02r03r81         [24]  574 	ljmp	00139$
      0000F8                        575 00303$:
      0000F8 BF 02 06         [24]  576 	cjne	r7,#0x02,00304$
      0000FB BE 00 03         [24]  577 	cjne	r6,#0x00,00304$
      0000FE 02r03r8A         [24]  578 	ljmp	00140$
      000101                        579 00304$:
      000101 02r03r93         [24]  580 	ljmp	00141$
                                    581 ;	src/usbcore.c:330: case 0:                             /* stander request */
      000104                        582 00101$:
                                    583 ;	src/usbcore.c:332: Prints("USB stand input request: ");
      000104 90r01r52         [24]  584 	mov	dptr,#___str_5
      000107 75 F0 80         [24]  585 	mov	b,#0x80
      00010A 12r00r00         [24]  586 	lcall	_Prints
                                    587 ;	src/usbcore.c:334: switch (bRequest) {
      00010D E4               [12]  588 	clr	a
      00010E B5*01 03         [24]  589 	cjne	a,_bRequest,00305$
      000111 02r03r66         [24]  590 	ljmp	00135$
      000114                        591 00305$:
      000114 74 06            [12]  592 	mov	a,#0x06
      000116 B5*01 02         [24]  593 	cjne	a,_bRequest,00306$
      000119 80 23            [24]  594 	sjmp	00103$
      00011B                        595 00306$:
      00011B 74 08            [12]  596 	mov	a,#0x08
      00011D B5*01 02         [24]  597 	cjne	a,_bRequest,00307$
      000120 80 13            [24]  598 	sjmp	00102$
      000122                        599 00307$:
      000122 74 0A            [12]  600 	mov	a,#0x0a
      000124 B5*01 03         [24]  601 	cjne	a,_bRequest,00308$
      000127 02r03r5D         [24]  602 	ljmp	00134$
      00012A                        603 00308$:
      00012A 74 0C            [12]  604 	mov	a,#0x0c
      00012C B5*01 03         [24]  605 	cjne	a,_bRequest,00309$
      00012F 02r03r6F         [24]  606 	ljmp	00136$
      000132                        607 00309$:
      000132 02r03r78         [24]  608 	ljmp	00137$
                                    609 ;	src/usbcore.c:335: case GET_CONFIGURATION:         /* get configuration */
      000135                        610 00102$:
                                    611 ;	src/usbcore.c:337: Prints("Get configuration\n");
      000135 90r01r6C         [24]  612 	mov	dptr,#___str_6
      000138 75 F0 80         [24]  613 	mov	b,#0x80
                                    614 ;	src/usbcore.c:339: break;
      00013B 02r00r00         [24]  615 	ljmp	_Prints
                                    616 ;	src/usbcore.c:340: case GET_DESCRIPTOR:
      00013E                        617 00103$:
                                    618 ;	src/usbcore.c:342: Prints("Get descriptor -- ");
      00013E 90r01r7F         [24]  619 	mov	dptr,#___str_7
      000141 75 F0 80         [24]  620 	mov	b,#0x80
      000144 12r00r00         [24]  621 	lcall	_Prints
                                    622 ;	src/usbcore.c:346: switch ((wValue >> 8) & 0xFF) {
      000147 AF*03            [24]  623 	mov	r7,(_wValue + 1)
      000149 BF 01 02         [24]  624 	cjne	r7,#0x01,00310$
      00014C 80 14            [24]  625 	sjmp	00104$
      00014E                        626 00310$:
      00014E BF 02 02         [24]  627 	cjne	r7,#0x02,00311$
      000151 80 61            [24]  628 	sjmp	00110$
      000153                        629 00311$:
      000153 BF 03 03         [24]  630 	cjne	r7,#0x03,00312$
      000156 02r02r15         [24]  631 	ljmp	00116$
      000159                        632 00312$:
      000159 BF 22 03         [24]  633 	cjne	r7,#0x22,00313$
      00015C 02r02rFE         [24]  634 	ljmp	00127$
      00015F                        635 00313$:
      00015F 02r03r45         [24]  636 	ljmp	00132$
                                    637 ;	src/usbcore.c:347: case DEVICE_DESCRIPTOR:
      000162                        638 00104$:
                                    639 ;	src/usbcore.c:349: Prints("device descriptor\n");
      000162 90r01r92         [24]  640 	mov	dptr,#___str_8
      000165 75 F0 80         [24]  641 	mov	b,#0x80
      000168 12r00r00         [24]  642 	lcall	_Prints
                                    643 ;	src/usbcore.c:351: pSendData = (uint8 *)DeviceDescriptor;
      00016B 75*08r00         [24]  644 	mov	_pSendData,#_DeviceDescriptor
      00016E 75*09s00         [24]  645 	mov	(_pSendData + 1),#(_DeviceDescriptor >> 8)
      000171 75*0A 80         [24]  646 	mov	(_pSendData + 2),#0x80
                                    647 ;	src/usbcore.c:352: if (wLength > DeviceDescriptor[0]) {
      000174 90r00r00         [24]  648 	mov	dptr,#_DeviceDescriptor
      000177 E4               [12]  649 	clr	a
      000178 93               [24]  650 	movc	a,@a+dptr
      000179 FE               [12]  651 	mov	r6,a
      00017A 7F 00            [12]  652 	mov	r7,#0x00
      00017C C3               [12]  653 	clr	c
      00017D EE               [12]  654 	mov	a,r6
      00017E 95*06            [12]  655 	subb	a,_wLength
      000180 EF               [12]  656 	mov	a,r7
      000181 95*07            [12]  657 	subb	a,(_wLength + 1)
      000183 50 26            [24]  658 	jnc	00108$
                                    659 ;	src/usbcore.c:353: SendLength = DeviceDescriptor[0];
      000185 8E*0B            [24]  660 	mov	_SendLength,r6
      000187 8F*0C            [24]  661 	mov	(_SendLength + 1),r7
                                    662 ;	src/usbcore.c:354: if (SendLength % DeviceDescriptor[7] == 0)
      000189 90r00r07         [24]  663 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      00018C E4               [12]  664 	clr	a
      00018D 93               [24]  665 	movc	a,@a+dptr
      00018E FF               [12]  666 	mov	r7,a
      00018F 8F*00            [24]  667 	mov	__moduint_PARM_2,r7
      000191 75*01 00         [24]  668 	mov	(__moduint_PARM_2 + 1),#0x00
      000194 85*0B 82         [24]  669 	mov	dpl,_SendLength
      000197 85*0C 83         [24]  670 	mov	dph,(_SendLength + 1)
      00019A 12r00r00         [24]  671 	lcall	__moduint
      00019D E5 82            [12]  672 	mov	a,dpl
      00019F 85 83 F0         [24]  673 	mov	b,dph
      0001A2 45 F0            [12]  674 	orl	a,b
      0001A4 70 0B            [24]  675 	jnz	00109$
                                    676 ;	src/usbcore.c:355: NeedZeroPacket = 1;
      0001A6 75*0D 01         [24]  677 	mov	_NeedZeroPacket,#0x01
      0001A9 80 06            [24]  678 	sjmp	00109$
      0001AB                        679 00108$:
                                    680 ;	src/usbcore.c:357: SendLength = wLength;
      0001AB 85*06*0B         [24]  681 	mov	_SendLength,_wLength
      0001AE 85*07*0C         [24]  682 	mov	(_SendLength + 1),(_wLength + 1)
      0001B1                        683 00109$:
                                    684 ;	src/usbcore.c:359: usb_bus_ep0_send_data();
                                    685 ;	src/usbcore.c:360: break;
      0001B1 02r05r0D         [24]  686 	ljmp	_usb_bus_ep0_send_data
                                    687 ;	src/usbcore.c:361: case CONFIGURATION_DESCRIPTOR:
      0001B4                        688 00110$:
                                    689 ;	src/usbcore.c:363: Prints("configuration descriptor\n");
      0001B4 90r01rA5         [24]  690 	mov	dptr,#___str_9
      0001B7 75 F0 80         [24]  691 	mov	b,#0x80
      0001BA 12r00r00         [24]  692 	lcall	_Prints
                                    693 ;	src/usbcore.c:365: pSendData = (uint8 *)ConfigurationDescriptor;
      0001BD 75*08r12         [24]  694 	mov	_pSendData,#_ConfigurationDescriptor
      0001C0 75*09s00         [24]  695 	mov	(_pSendData + 1),#(_ConfigurationDescriptor >> 8)
      0001C3 75*0A 80         [24]  696 	mov	(_pSendData + 2),#0x80
                                    697 ;	src/usbcore.c:366: SendLength = ConfigurationDescriptor[3] * 256 + ConfigurationDescriptor[2];
      0001C6 90r00r15         [24]  698 	mov	dptr,#(_ConfigurationDescriptor + 0x0003)
      0001C9 E4               [12]  699 	clr	a
      0001CA 93               [24]  700 	movc	a,@a+dptr
      0001CB FE               [12]  701 	mov	r6,a
      0001CC 7F 00            [12]  702 	mov	r7,#0x00
      0001CE 90r00r14         [24]  703 	mov	dptr,#(_ConfigurationDescriptor + 0x0002)
      0001D1 E4               [12]  704 	clr	a
      0001D2 93               [24]  705 	movc	a,@a+dptr
      0001D3 FD               [12]  706 	mov	r5,a
      0001D4 7C 00            [12]  707 	mov	r4,#0x00
      0001D6 2F               [12]  708 	add	a,r7
      0001D7 FF               [12]  709 	mov	r7,a
      0001D8 EC               [12]  710 	mov	a,r4
      0001D9 3E               [12]  711 	addc	a,r6
      0001DA FE               [12]  712 	mov	r6,a
      0001DB 8F*0B            [24]  713 	mov	_SendLength,r7
      0001DD 8E*0C            [24]  714 	mov	(_SendLength + 1),r6
                                    715 ;	src/usbcore.c:367: if (wLength > SendLength) {
      0001DF C3               [12]  716 	clr	c
      0001E0 E5*0B            [12]  717 	mov	a,_SendLength
      0001E2 95*06            [12]  718 	subb	a,_wLength
      0001E4 E5*0C            [12]  719 	mov	a,(_SendLength + 1)
      0001E6 95*07            [12]  720 	subb	a,(_wLength + 1)
      0001E8 50 22            [24]  721 	jnc	00114$
                                    722 ;	src/usbcore.c:368: if (SendLength % DeviceDescriptor[7] == 0)
      0001EA 90r00r07         [24]  723 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      0001ED E4               [12]  724 	clr	a
      0001EE 93               [24]  725 	movc	a,@a+dptr
      0001EF FF               [12]  726 	mov	r7,a
      0001F0 8F*00            [24]  727 	mov	__moduint_PARM_2,r7
      0001F2 75*01 00         [24]  728 	mov	(__moduint_PARM_2 + 1),#0x00
      0001F5 85*0B 82         [24]  729 	mov	dpl,_SendLength
      0001F8 85*0C 83         [24]  730 	mov	dph,(_SendLength + 1)
      0001FB 12r00r00         [24]  731 	lcall	__moduint
      0001FE E5 82            [12]  732 	mov	a,dpl
      000200 85 83 F0         [24]  733 	mov	b,dph
      000203 45 F0            [12]  734 	orl	a,b
      000205 70 0B            [24]  735 	jnz	00115$
                                    736 ;	src/usbcore.c:369: NeedZeroPacket = 1;
      000207 75*0D 01         [24]  737 	mov	_NeedZeroPacket,#0x01
      00020A 80 06            [24]  738 	sjmp	00115$
      00020C                        739 00114$:
                                    740 ;	src/usbcore.c:371: SendLength = wLength;
      00020C 85*06*0B         [24]  741 	mov	_SendLength,_wLength
      00020F 85*07*0C         [24]  742 	mov	(_SendLength + 1),(_wLength + 1)
      000212                        743 00115$:
                                    744 ;	src/usbcore.c:373: usb_bus_ep0_send_data();
                                    745 ;	src/usbcore.c:374: break;
      000212 02r05r0D         [24]  746 	ljmp	_usb_bus_ep0_send_data
                                    747 ;	src/usbcore.c:375: case STRING_DESCRIPTOR:
      000215                        748 00116$:
                                    749 ;	src/usbcore.c:377: Prints("string descriptor -- ");
      000215 90r01rBF         [24]  750 	mov	dptr,#___str_10
      000218 75 F0 80         [24]  751 	mov	b,#0x80
      00021B 12r00r00         [24]  752 	lcall	_Prints
                                    753 ;	src/usbcore.c:379: switch (wValue & 0xFF) {
      00021E AE*02            [24]  754 	mov	r6,_wValue
      000220 7F 00            [12]  755 	mov	r7,#0x00
      000222 C3               [12]  756 	clr	c
      000223 74 03            [12]  757 	mov	a,#0x03
      000225 9E               [12]  758 	subb	a,r6
      000226 E4               [12]  759 	clr	a
      000227 9F               [12]  760 	subb	a,r7
      000228 50 03            [24]  761 	jnc	00318$
      00022A 02r02rB7         [24]  762 	ljmp	00121$
      00022D                        763 00318$:
      00022D EE               [12]  764 	mov	a,r6
      00022E 2E               [12]  765 	add	a,r6
                                    766 ;	src/usbcore.c:380: case 0:         /* get language ID */
      00022F 90r02r33         [24]  767 	mov	dptr,#00319$
      000232 73               [24]  768 	jmp	@a+dptr
      000233                        769 00319$:
      000233 80 06            [24]  770 	sjmp	00117$
      000235 80 23            [24]  771 	sjmp	00118$
      000237 80 40            [24]  772 	sjmp	00119$
      000239 80 5D            [24]  773 	sjmp	00120$
      00023B                        774 00117$:
                                    775 ;	src/usbcore.c:382: Prints("language ID\n");
      00023B 90r01rD5         [24]  776 	mov	dptr,#___str_11
      00023E 75 F0 80         [24]  777 	mov	b,#0x80
      000241 12r00r00         [24]  778 	lcall	_Prints
                                    779 ;	src/usbcore.c:384: pSendData = (uint8 *)languageId;
      000244 75*08r34         [24]  780 	mov	_pSendData,#_languageId
      000247 75*09s00         [24]  781 	mov	(_pSendData + 1),#(_languageId >> 8)
      00024A 75*0A 80         [24]  782 	mov	(_pSendData + 2),#0x80
                                    783 ;	src/usbcore.c:385: SendLength = languageId[0];
      00024D 90r00r34         [24]  784 	mov	dptr,#_languageId
      000250 E4               [12]  785 	clr	a
      000251 93               [24]  786 	movc	a,@a+dptr
      000252 FF               [12]  787 	mov	r7,a
      000253 8F*0B            [24]  788 	mov	_SendLength,r7
      000255 75*0C 00         [24]  789 	mov	(_SendLength + 1),#0x00
                                    790 ;	src/usbcore.c:386: break;
                                    791 ;	src/usbcore.c:387: case 1:         /* Vendor string id is 1  */
      000258 80 6E            [24]  792 	sjmp	00122$
      00025A                        793 00118$:
                                    794 ;	src/usbcore.c:389: Prints("manufacture string\n");
      00025A 90r01rE2         [24]  795 	mov	dptr,#___str_12
      00025D 75 F0 80         [24]  796 	mov	b,#0x80
      000260 12r00r00         [24]  797 	lcall	_Prints
                                    798 ;	src/usbcore.c:391: pSendData = (uint8 *)ManufacturerStringDescriptor;
      000263 75*08r38         [24]  799 	mov	_pSendData,#_ManufacturerStringDescriptor
      000266 75*09s00         [24]  800 	mov	(_pSendData + 1),#(_ManufacturerStringDescriptor >> 8)
      000269 75*0A 80         [24]  801 	mov	(_pSendData + 2),#0x80
                                    802 ;	src/usbcore.c:392: SendLength = ManufacturerStringDescriptor[0];
      00026C 90r00r38         [24]  803 	mov	dptr,#_ManufacturerStringDescriptor
      00026F E4               [12]  804 	clr	a
      000270 93               [24]  805 	movc	a,@a+dptr
      000271 FF               [12]  806 	mov	r7,a
      000272 8F*0B            [24]  807 	mov	_SendLength,r7
      000274 75*0C 00         [24]  808 	mov	(_SendLength + 1),#0x00
                                    809 ;	src/usbcore.c:393: break;
                                    810 ;	src/usbcore.c:394: case 2:         /* Vendor string id is 1  */
      000277 80 4F            [24]  811 	sjmp	00122$
      000279                        812 00119$:
                                    813 ;	src/usbcore.c:396: Prints("product string\n");
      000279 90r01rF6         [24]  814 	mov	dptr,#___str_13
      00027C 75 F0 80         [24]  815 	mov	b,#0x80
      00027F 12r00r00         [24]  816 	lcall	_Prints
                                    817 ;	src/usbcore.c:398: pSendData = (uint8 *)ProductStringDescriptor;
      000282 75*08r96         [24]  818 	mov	_pSendData,#_ProductStringDescriptor
      000285 75*09s00         [24]  819 	mov	(_pSendData + 1),#(_ProductStringDescriptor >> 8)
      000288 75*0A 80         [24]  820 	mov	(_pSendData + 2),#0x80
                                    821 ;	src/usbcore.c:399: SendLength = ProductStringDescriptor[0];
      00028B 90r00r96         [24]  822 	mov	dptr,#_ProductStringDescriptor
      00028E E4               [12]  823 	clr	a
      00028F 93               [24]  824 	movc	a,@a+dptr
      000290 FF               [12]  825 	mov	r7,a
      000291 8F*0B            [24]  826 	mov	_SendLength,r7
      000293 75*0C 00         [24]  827 	mov	(_SendLength + 1),#0x00
                                    828 ;	src/usbcore.c:400: break;
                                    829 ;	src/usbcore.c:401: case 3:         /* Vendor string id is 1  */
      000296 80 30            [24]  830 	sjmp	00122$
      000298                        831 00120$:
                                    832 ;	src/usbcore.c:403: Prints("serial string\n");
      000298 90r02r06         [24]  833 	mov	dptr,#___str_14
      00029B 75 F0 80         [24]  834 	mov	b,#0x80
      00029E 12r00r00         [24]  835 	lcall	_Prints
                                    836 ;	src/usbcore.c:405: pSendData = (uint8 *)SerialNumberStringDescriptor;
      0002A1 75*08rB0         [24]  837 	mov	_pSendData,#_SerialNumberStringDescriptor
      0002A4 75*09s00         [24]  838 	mov	(_pSendData + 1),#(_SerialNumberStringDescriptor >> 8)
      0002A7 75*0A 80         [24]  839 	mov	(_pSendData + 2),#0x80
                                    840 ;	src/usbcore.c:406: SendLength = SerialNumberStringDescriptor[0];
      0002AA 90r00rB0         [24]  841 	mov	dptr,#_SerialNumberStringDescriptor
      0002AD E4               [12]  842 	clr	a
      0002AE 93               [24]  843 	movc	a,@a+dptr
      0002AF FF               [12]  844 	mov	r7,a
      0002B0 8F*0B            [24]  845 	mov	_SendLength,r7
      0002B2 75*0C 00         [24]  846 	mov	(_SendLength + 1),#0x00
                                    847 ;	src/usbcore.c:407: break;
                                    848 ;	src/usbcore.c:408: default:         /* Vendor string id is 1  */
      0002B5 80 11            [24]  849 	sjmp	00122$
      0002B7                        850 00121$:
                                    851 ;	src/usbcore.c:410: Prints("unknown string\n");
      0002B7 90r02r15         [24]  852 	mov	dptr,#___str_15
      0002BA 75 F0 80         [24]  853 	mov	b,#0x80
      0002BD 12r00r00         [24]  854 	lcall	_Prints
                                    855 ;	src/usbcore.c:412: SendLength = 0;
      0002C0 E4               [12]  856 	clr	a
      0002C1 F5*0B            [12]  857 	mov	_SendLength,a
      0002C3 F5*0C            [12]  858 	mov	(_SendLength + 1),a
                                    859 ;	src/usbcore.c:413: NeedZeroPacket = 1;
      0002C5 75*0D 01         [24]  860 	mov	_NeedZeroPacket,#0x01
                                    861 ;	src/usbcore.c:415: }
      0002C8                        862 00122$:
                                    863 ;	src/usbcore.c:416: if ((wLength > SendLength) &&
      0002C8 C3               [12]  864 	clr	c
      0002C9 E5*0B            [12]  865 	mov	a,_SendLength
      0002CB 95*06            [12]  866 	subb	a,_wLength
      0002CD E5*0C            [12]  867 	mov	a,(_SendLength + 1)
      0002CF 95*07            [12]  868 	subb	a,(_wLength + 1)
      0002D1 50 22            [24]  869 	jnc	00124$
                                    870 ;	src/usbcore.c:417: (SendLength % DeviceDescriptor[7] == 0))
      0002D3 90r00r07         [24]  871 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      0002D6 E4               [12]  872 	clr	a
      0002D7 93               [24]  873 	movc	a,@a+dptr
      0002D8 FF               [12]  874 	mov	r7,a
      0002D9 8F*00            [24]  875 	mov	__moduint_PARM_2,r7
      0002DB 75*01 00         [24]  876 	mov	(__moduint_PARM_2 + 1),#0x00
      0002DE 85*0B 82         [24]  877 	mov	dpl,_SendLength
      0002E1 85*0C 83         [24]  878 	mov	dph,(_SendLength + 1)
      0002E4 12r00r00         [24]  879 	lcall	__moduint
      0002E7 E5 82            [12]  880 	mov	a,dpl
      0002E9 85 83 F0         [24]  881 	mov	b,dph
      0002EC 45 F0            [12]  882 	orl	a,b
      0002EE 70 05            [24]  883 	jnz	00124$
                                    884 ;	src/usbcore.c:418: NeedZeroPacket = 1;
      0002F0 75*0D 01         [24]  885 	mov	_NeedZeroPacket,#0x01
      0002F3 80 06            [24]  886 	sjmp	00125$
      0002F5                        887 00124$:
                                    888 ;	src/usbcore.c:420: SendLength = wLength;
      0002F5 85*06*0B         [24]  889 	mov	_SendLength,_wLength
      0002F8 85*07*0C         [24]  890 	mov	(_SendLength + 1),(_wLength + 1)
      0002FB                        891 00125$:
                                    892 ;	src/usbcore.c:421: usb_bus_ep0_send_data(); 
                                    893 ;	src/usbcore.c:422: break;
      0002FB 02r05r0D         [24]  894 	ljmp	_usb_bus_ep0_send_data
                                    895 ;	src/usbcore.c:423: case REPORT_DESCRIPTOR:
      0002FE                        896 00127$:
                                    897 ;	src/usbcore.c:425: Prints("Report descriptor: ");
      0002FE 90r02r25         [24]  898 	mov	dptr,#___str_16
      000301 75 F0 80         [24]  899 	mov	b,#0x80
      000304 12r00r00         [24]  900 	lcall	_Prints
                                    901 ;	src/usbcore.c:427: pSendData = (uint8 *)ReportDescriptor;
      000307 75*08rC6         [24]  902 	mov	_pSendData,#_ReportDescriptor
      00030A 75*09s00         [24]  903 	mov	(_pSendData + 1),#(_ReportDescriptor >> 8)
      00030D 75*0A 80         [24]  904 	mov	(_pSendData + 2),#0x80
                                    905 ;	src/usbcore.c:428: SendLength = sizeof(ReportDescriptor);
      000310 75*0B 34         [24]  906 	mov	_SendLength,#0x34
      000313 75*0C 00         [24]  907 	mov	(_SendLength + 1),#0x00
                                    908 ;	src/usbcore.c:429: if ((wLength > SendLength) && (SendLength % DeviceDescriptor[7] == 0))
      000316 C3               [12]  909 	clr	c
      000317 74 34            [12]  910 	mov	a,#0x34
      000319 95*06            [12]  911 	subb	a,_wLength
      00031B E4               [12]  912 	clr	a
      00031C 95*07            [12]  913 	subb	a,(_wLength + 1)
      00031E 50 1F            [24]  914 	jnc	00129$
      000320 90r00r07         [24]  915 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      000323 E4               [12]  916 	clr	a
      000324 93               [24]  917 	movc	a,@a+dptr
      000325 FF               [12]  918 	mov	r7,a
      000326 8F*00            [24]  919 	mov	__moduint_PARM_2,r7
      000328 75*01 00         [24]  920 	mov	(__moduint_PARM_2 + 1),#0x00
      00032B 90 00 34         [24]  921 	mov	dptr,#0x0034
      00032E 12r00r00         [24]  922 	lcall	__moduint
      000331 E5 82            [12]  923 	mov	a,dpl
      000333 85 83 F0         [24]  924 	mov	b,dph
      000336 45 F0            [12]  925 	orl	a,b
      000338 70 05            [24]  926 	jnz	00129$
                                    927 ;	src/usbcore.c:430: NeedZeroPacket = 1;
      00033A 75*0D 01         [24]  928 	mov	_NeedZeroPacket,#0x01
      00033D 80 03            [24]  929 	sjmp	00130$
      00033F                        930 00129$:
                                    931 ;	src/usbcore.c:432: NeedZeroPacket = 0;
      00033F 75*0D 00         [24]  932 	mov	_NeedZeroPacket,#0x00
      000342                        933 00130$:
                                    934 ;	src/usbcore.c:433: usb_bus_ep0_send_data();
                                    935 ;	src/usbcore.c:434: break;
      000342 02r05r0D         [24]  936 	ljmp	_usb_bus_ep0_send_data
                                    937 ;	src/usbcore.c:435: default:
      000345                        938 00132$:
                                    939 ;	src/usbcore.c:437: Prints("other descriptor: ");
      000345 90r02r39         [24]  940 	mov	dptr,#___str_17
      000348 75 F0 80         [24]  941 	mov	b,#0x80
      00034B 12r00r00         [24]  942 	lcall	_Prints
                                    943 ;	src/usbcore.c:439: print_hex((wValue >> 8) & 0xFF);
      00034E 85*03 82         [24]  944 	mov	dpl,(_wValue + 1)
      000351 12r00r00         [24]  945 	lcall	_print_hex
                                    946 ;	src/usbcore.c:440: Prints("\n");
      000354 90r02r4C         [24]  947 	mov	dptr,#___str_18
      000357 75 F0 80         [24]  948 	mov	b,#0x80
                                    949 ;	src/usbcore.c:443: break;
      00035A 02r00r00         [24]  950 	ljmp	_Prints
                                    951 ;	src/usbcore.c:444: case GET_INTERFACE:
      00035D                        952 00134$:
                                    953 ;	src/usbcore.c:446: Prints("Get interface\n");
      00035D 90r02r4E         [24]  954 	mov	dptr,#___str_19
      000360 75 F0 80         [24]  955 	mov	b,#0x80
                                    956 ;	src/usbcore.c:448: break;
      000363 02r00r00         [24]  957 	ljmp	_Prints
                                    958 ;	src/usbcore.c:449: case GET_STATUS:
      000366                        959 00135$:
                                    960 ;	src/usbcore.c:451: Prints("Get status\n");
      000366 90r02r5D         [24]  961 	mov	dptr,#___str_20
      000369 75 F0 80         [24]  962 	mov	b,#0x80
                                    963 ;	src/usbcore.c:453: break;
      00036C 02r00r00         [24]  964 	ljmp	_Prints
                                    965 ;	src/usbcore.c:454: case SYNCH_FRAME:
      00036F                        966 00136$:
                                    967 ;	src/usbcore.c:456: Prints("Synch frame\n");
      00036F 90r02r69         [24]  968 	mov	dptr,#___str_21
      000372 75 F0 80         [24]  969 	mov	b,#0x80
                                    970 ;	src/usbcore.c:458: break;
      000375 02r00r00         [24]  971 	ljmp	_Prints
                                    972 ;	src/usbcore.c:459: default:
      000378                        973 00137$:
                                    974 ;	src/usbcore.c:461: Prints("Error: undefined stander request\n");
      000378 90r02r76         [24]  975 	mov	dptr,#___str_22
      00037B 75 F0 80         [24]  976 	mov	b,#0x80
                                    977 ;	src/usbcore.c:465: break;
      00037E 02r00r00         [24]  978 	ljmp	_Prints
                                    979 ;	src/usbcore.c:466: case 1:                            /* class request */
      000381                        980 00139$:
                                    981 ;	src/usbcore.c:468: Prints("USB class input request:\n");
      000381 90r02r98         [24]  982 	mov	dptr,#___str_23
      000384 75 F0 80         [24]  983 	mov	b,#0x80
                                    984 ;	src/usbcore.c:470: break;
      000387 02r00r00         [24]  985 	ljmp	_Prints
                                    986 ;	src/usbcore.c:471: case 2:
      00038A                        987 00140$:
                                    988 ;	src/usbcore.c:473: Prints("USB vendor input request:\n");
      00038A 90r02rB2         [24]  989 	mov	dptr,#___str_24
      00038D 75 F0 80         [24]  990 	mov	b,#0x80
                                    991 ;	src/usbcore.c:475: break;
      000390 02r00r00         [24]  992 	ljmp	_Prints
                                    993 ;	src/usbcore.c:476: default:
      000393                        994 00141$:
                                    995 ;	src/usbcore.c:478: Prints("Error: undefined input request:\n");
      000393 90r02rCD         [24]  996 	mov	dptr,#___str_25
      000396 75 F0 80         [24]  997 	mov	b,#0x80
                                    998 ;	src/usbcore.c:481: }
      000399 02r00r00         [24]  999 	ljmp	_Prints
      00039C                       1000 00160$:
                                   1001 ;	src/usbcore.c:485: switch ((bmRequestType >> 5) & 0x3) {
      00039C E5*00            [12] 1002 	mov	a,_bmRequestType
      00039E C4               [12] 1003 	swap	a
      00039F 03               [12] 1004 	rr	a
      0003A0 54 07            [12] 1005 	anl	a,#0x07
      0003A2 FF               [12] 1006 	mov	r7,a
      0003A3 53 07 03         [24] 1007 	anl	ar7,#0x03
      0003A6 7E 00            [12] 1008 	mov	r6,#0x00
      0003A8 BF 00 05         [24] 1009 	cjne	r7,#0x00,00324$
      0003AB BE 00 02         [24] 1010 	cjne	r6,#0x00,00324$
      0003AE 80 15            [24] 1011 	sjmp	00143$
      0003B0                       1012 00324$:
      0003B0 BF 01 06         [24] 1013 	cjne	r7,#0x01,00325$
      0003B3 BE 00 03         [24] 1014 	cjne	r6,#0x00,00325$
      0003B6 02r04r6B         [24] 1015 	ljmp	00152$
      0003B9                       1016 00325$:
      0003B9 BF 02 06         [24] 1017 	cjne	r7,#0x02,00326$
      0003BC BE 00 03         [24] 1018 	cjne	r6,#0x00,00326$
      0003BF 02r04r97         [24] 1019 	ljmp	00156$
      0003C2                       1020 00326$:
      0003C2 02r04rA0         [24] 1021 	ljmp	00157$
                                   1022 ;	src/usbcore.c:486: case 0:
      0003C5                       1023 00143$:
                                   1024 ;	src/usbcore.c:488: Prints("USB stander output request: ");
      0003C5 90r02rEE         [24] 1025 	mov	dptr,#___str_26
      0003C8 75 F0 80         [24] 1026 	mov	b,#0x80
      0003CB 12r00r00         [24] 1027 	lcall	_Prints
                                   1028 ;	src/usbcore.c:490: switch (bRequest) {
      0003CE 74 01            [12] 1029 	mov	a,#0x01
      0003D0 B5*01 02         [24] 1030 	cjne	a,_bRequest,00327$
      0003D3 80 23            [24] 1031 	sjmp	00144$
      0003D5                       1032 00327$:
      0003D5 74 03            [12] 1033 	mov	a,#0x03
      0003D7 B5*01 02         [24] 1034 	cjne	a,_bRequest,00328$
      0003DA 80 74            [24] 1035 	sjmp	00148$
      0003DC                       1036 00328$:
      0003DC 74 05            [12] 1037 	mov	a,#0x05
      0003DE B5*01 02         [24] 1038 	cjne	a,_bRequest,00329$
      0003E1 80 1E            [24] 1039 	sjmp	00145$
      0003E3                       1040 00329$:
      0003E3 74 07            [12] 1041 	mov	a,#0x07
      0003E5 B5*01 02         [24] 1042 	cjne	a,_bRequest,00330$
      0003E8 80 5D            [24] 1043 	sjmp	00147$
      0003EA                       1044 00330$:
      0003EA 74 09            [12] 1045 	mov	a,#0x09
      0003EC B5*01 02         [24] 1046 	cjne	a,_bRequest,00331$
      0003EF 80 39            [24] 1047 	sjmp	00146$
      0003F1                       1048 00331$:
      0003F1 74 0B            [12] 1049 	mov	a,#0x0b
                                   1050 ;	src/usbcore.c:491: case CLEAR_FEATURE:
      0003F3 B5*01 6C         [24] 1051 	cjne	a,_bRequest,00150$
      0003F6 80 61            [24] 1052 	sjmp	00149$
      0003F8                       1053 00144$:
                                   1054 ;	src/usbcore.c:493: Prints("clear feature\n");                   
      0003F8 90r03r0B         [24] 1055 	mov	dptr,#___str_27
      0003FB 75 F0 80         [24] 1056 	mov	b,#0x80
                                   1057 ;	src/usbcore.c:495: break;
      0003FE 02r00r00         [24] 1058 	ljmp	_Prints
                                   1059 ;	src/usbcore.c:496: case SET_ADDRESS:
      000401                       1060 00145$:
                                   1061 ;	src/usbcore.c:498: Prints("set address, the address is: ");
      000401 90r03r1A         [24] 1062 	mov	dptr,#___str_28
      000404 75 F0 80         [24] 1063 	mov	b,#0x80
      000407 12r00r00         [24] 1064 	lcall	_Prints
                                   1065 ;	src/usbcore.c:499: print_hex(wValue & 0xFF);
      00040A 85*02 82         [24] 1066 	mov	dpl,_wValue
      00040D 12r00r00         [24] 1067 	lcall	_print_hex
                                   1068 ;	src/usbcore.c:500: Prints("\n");                
      000410 90r02r4C         [24] 1069 	mov	dptr,#___str_18
      000413 75 F0 80         [24] 1070 	mov	b,#0x80
      000416 12r00r00         [24] 1071 	lcall	_Prints
                                   1072 ;	src/usbcore.c:502: D12_set_address(wValue & 0xFF);
      000419 85*02 82         [24] 1073 	mov	dpl,_wValue
      00041C 12r00r00         [24] 1074 	lcall	_D12_set_address
                                   1075 ;	src/usbcore.c:503: SendLength = 0;
      00041F E4               [12] 1076 	clr	a
      000420 F5*0B            [12] 1077 	mov	_SendLength,a
      000422 F5*0C            [12] 1078 	mov	(_SendLength + 1),a
                                   1079 ;	src/usbcore.c:504: NeedZeroPacket = 1;
      000424 75*0D 01         [24] 1080 	mov	_NeedZeroPacket,#0x01
                                   1081 ;	src/usbcore.c:505: usb_bus_ep0_send_data();
                                   1082 ;	src/usbcore.c:506: break;
      000427 02r05r0D         [24] 1083 	ljmp	_usb_bus_ep0_send_data
                                   1084 ;	src/usbcore.c:507: case SET_CONFIGURATION:
      00042A                       1085 00146$:
                                   1086 ;	src/usbcore.c:509: Prints("set configuration\n");                   
      00042A 90r03r38         [24] 1087 	mov	dptr,#___str_29
      00042D 75 F0 80         [24] 1088 	mov	b,#0x80
      000430 12r00r00         [24] 1089 	lcall	_Prints
                                   1090 ;	src/usbcore.c:511: ConfigValue = wValue & 0xFF;
      000433 AF*02            [24] 1091 	mov	r7,_wValue
      000435 8F*0F            [24] 1092 	mov	_ConfigValue,r7
                                   1093 ;	src/usbcore.c:512: D12_set_endpoint_enable(wValue & 0xFF);
      000437 8F 82            [24] 1094 	mov	dpl,r7
      000439 12r00r00         [24] 1095 	lcall	_D12_set_endpoint_enable
                                   1096 ;	src/usbcore.c:514: SendLength = 0;
      00043C E4               [12] 1097 	clr	a
      00043D F5*0B            [12] 1098 	mov	_SendLength,a
      00043F F5*0C            [12] 1099 	mov	(_SendLength + 1),a
                                   1100 ;	src/usbcore.c:515: NeedZeroPacket = 1;
      000441 75*0D 01         [24] 1101 	mov	_NeedZeroPacket,#0x01
                                   1102 ;	src/usbcore.c:516: usb_bus_ep0_send_data();
                                   1103 ;	src/usbcore.c:517: break;
      000444 02r05r0D         [24] 1104 	ljmp	_usb_bus_ep0_send_data
                                   1105 ;	src/usbcore.c:518: case SET_DESCRIPTOR:
      000447                       1106 00147$:
                                   1107 ;	src/usbcore.c:520: Prints("set descriptor\n");                   
      000447 90r03r4B         [24] 1108 	mov	dptr,#___str_30
      00044A 75 F0 80         [24] 1109 	mov	b,#0x80
                                   1110 ;	src/usbcore.c:522: break;
      00044D 02r00r00         [24] 1111 	ljmp	_Prints
                                   1112 ;	src/usbcore.c:523: case SET_FEATURE:
      000450                       1113 00148$:
                                   1114 ;	src/usbcore.c:525: Prints("set feature\n");                   
      000450 90r03r5B         [24] 1115 	mov	dptr,#___str_31
      000453 75 F0 80         [24] 1116 	mov	b,#0x80
                                   1117 ;	src/usbcore.c:527: break;
      000456 02r00r00         [24] 1118 	ljmp	_Prints
                                   1119 ;	src/usbcore.c:528: case SET_INTERFACE:
      000459                       1120 00149$:
                                   1121 ;	src/usbcore.c:530: Prints("set interface\n");                   
      000459 90r03r68         [24] 1122 	mov	dptr,#___str_32
      00045C 75 F0 80         [24] 1123 	mov	b,#0x80
                                   1124 ;	src/usbcore.c:532: break;
      00045F 02r00r00         [24] 1125 	ljmp	_Prints
                                   1126 ;	src/usbcore.c:533: default:
      000462                       1127 00150$:
                                   1128 ;	src/usbcore.c:535: Prints("Error: undefined stander request\n");                   
      000462 90r02r76         [24] 1129 	mov	dptr,#___str_22
      000465 75 F0 80         [24] 1130 	mov	b,#0x80
                                   1131 ;	src/usbcore.c:539: break;
      000468 02r00r00         [24] 1132 	ljmp	_Prints
                                   1133 ;	src/usbcore.c:540: case 1:
      00046B                       1134 00152$:
                                   1135 ;	src/usbcore.c:542: Prints("USB class output request:\n");                   
      00046B 90r03r77         [24] 1136 	mov	dptr,#___str_33
      00046E 75 F0 80         [24] 1137 	mov	b,#0x80
      000471 12r00r00         [24] 1138 	lcall	_Prints
                                   1139 ;	src/usbcore.c:544: switch (bRequest) {
      000474 74 0A            [12] 1140 	mov	a,#0x0a
      000476 B5*01 15         [24] 1141 	cjne	a,_bRequest,00154$
                                   1142 ;	src/usbcore.c:547: Prints("set idle\n");
      000479 90r03r92         [24] 1143 	mov	dptr,#___str_34
      00047C 75 F0 80         [24] 1144 	mov	b,#0x80
      00047F 12r00r00         [24] 1145 	lcall	_Prints
                                   1146 ;	src/usbcore.c:549: SendLength = 1;
      000482 75*0B 01         [24] 1147 	mov	_SendLength,#0x01
      000485 75*0C 00         [24] 1148 	mov	(_SendLength + 1),#0x00
                                   1149 ;	src/usbcore.c:550: NeedZeroPacket = 1;
      000488 75*0D 01         [24] 1150 	mov	_NeedZeroPacket,#0x01
                                   1151 ;	src/usbcore.c:552: usb_bus_ep0_send_data();
                                   1152 ;	src/usbcore.c:553: break;
                                   1153 ;	src/usbcore.c:554: default:
      00048B 02r05r0D         [24] 1154 	ljmp	_usb_bus_ep0_send_data
      00048E                       1155 00154$:
                                   1156 ;	src/usbcore.c:556: Prints("unknown request\n");                   
      00048E 90r03r9C         [24] 1157 	mov	dptr,#___str_35
      000491 75 F0 80         [24] 1158 	mov	b,#0x80
                                   1159 ;	src/usbcore.c:560: break;
                                   1160 ;	src/usbcore.c:561: case 2:
      000494 02r00r00         [24] 1161 	ljmp	_Prints
      000497                       1162 00156$:
                                   1163 ;	src/usbcore.c:563: Prints("USB vendor output request:\n");                   
      000497 90r03rAD         [24] 1164 	mov	dptr,#___str_36
      00049A 75 F0 80         [24] 1165 	mov	b,#0x80
                                   1166 ;	src/usbcore.c:565: break;
                                   1167 ;	src/usbcore.c:566: default:
      00049D 02r00r00         [24] 1168 	ljmp	_Prints
      0004A0                       1169 00157$:
                                   1170 ;	src/usbcore.c:568: Prints("Error: undefined output request.\n");                   
      0004A0 90r03rC9         [24] 1171 	mov	dptr,#___str_37
      0004A3 75 F0 80         [24] 1172 	mov	b,#0x80
                                   1173 ;	src/usbcore.c:571: }
      0004A6 02r00r00         [24] 1174 	ljmp	_Prints
      0004A9                       1175 00163$:
                                   1176 ;	src/usbcore.c:574: D12_read_endpoint_buffer(0, 16, buffer);
      0004A9 75*00r10         [24] 1177 	mov	_D12_read_endpoint_buffer_PARM_3,#_usb_bus_isr_ep0_out_buffer_65536_55
      0004AC 75*01 00         [24] 1178 	mov	(_D12_read_endpoint_buffer_PARM_3 + 1),#0x00
      0004AF 75*02 40         [24] 1179 	mov	(_D12_read_endpoint_buffer_PARM_3 + 2),#0x40
      0004B2 75*00 10         [24] 1180 	mov	_D12_read_endpoint_buffer_PARM_2,#0x10
      0004B5 75 82 00         [24] 1181 	mov	dpl,#0x00
      0004B8 12r00r00         [24] 1182 	lcall	_D12_read_endpoint_buffer
                                   1183 ;	src/usbcore.c:575: D12_clear_buffer();
      0004BB 12r00r00         [24] 1184 	lcall	_D12_clear_buffer
                                   1185 ;	src/usbcore.c:576: dump_hex(buffer, 8);
      0004BE 75*00 08         [24] 1186 	mov	_dump_hex_PARM_2,#0x08
      0004C1 75*01 00         [24] 1187 	mov	(_dump_hex_PARM_2 + 1),#0x00
      0004C4 90r00r10         [24] 1188 	mov	dptr,#_usb_bus_isr_ep0_out_buffer_65536_55
      0004C7 75 F0 40         [24] 1189 	mov	b,#0x40
                                   1190 ;	src/usbcore.c:578: }
      0004CA 02r00r00         [24] 1191 	ljmp	_dump_hex
                                   1192 ;------------------------------------------------------------
                                   1193 ;Allocation info for local variables in function 'usb_bus_isr_ep0_in'
                                   1194 ;------------------------------------------------------------
                                   1195 ;	src/usbcore.c:580: void usb_bus_isr_ep0_in()
                                   1196 ;	-----------------------------------------
                                   1197 ;	 function usb_bus_isr_ep0_in
                                   1198 ;	-----------------------------------------
      0004CD                       1199 _usb_bus_isr_ep0_in:
                                   1200 ;	src/usbcore.c:583: Prints("usb isr ep0 in\n");
      0004CD 90r03rEB         [24] 1201 	mov	dptr,#___str_38
      0004D0 75 F0 80         [24] 1202 	mov	b,#0x80
      0004D3 12r00r00         [24] 1203 	lcall	_Prints
                                   1204 ;	src/usbcore.c:585: D12_read_endpoint_last_status(1);
      0004D6 75 82 01         [24] 1205 	mov	dpl,#0x01
      0004D9 12r00r00         [24] 1206 	lcall	_D12_read_endpoint_last_status
                                   1207 ;	src/usbcore.c:586: usb_bus_ep0_send_data();
                                   1208 ;	src/usbcore.c:587: }
      0004DC 02r05r0D         [24] 1209 	ljmp	_usb_bus_ep0_send_data
                                   1210 ;------------------------------------------------------------
                                   1211 ;Allocation info for local variables in function 'usb_bus_isr_ep1_out'
                                   1212 ;------------------------------------------------------------
                                   1213 ;	src/usbcore.c:589: void usb_bus_isr_ep1_out()
                                   1214 ;	-----------------------------------------
                                   1215 ;	 function usb_bus_isr_ep1_out
                                   1216 ;	-----------------------------------------
      0004DF                       1217 _usb_bus_isr_ep1_out:
                                   1218 ;	src/usbcore.c:592: Prints("usb core ep1 out\n");
      0004DF 90r03rFB         [24] 1219 	mov	dptr,#___str_39
      0004E2 75 F0 80         [24] 1220 	mov	b,#0x80
                                   1221 ;	src/usbcore.c:594: }
      0004E5 02r00r00         [24] 1222 	ljmp	_Prints
                                   1223 ;------------------------------------------------------------
                                   1224 ;Allocation info for local variables in function 'usb_bus_isr_ep1_in'
                                   1225 ;------------------------------------------------------------
                                   1226 ;	src/usbcore.c:596: void usb_bus_isr_ep1_in()
                                   1227 ;	-----------------------------------------
                                   1228 ;	 function usb_bus_isr_ep1_in
                                   1229 ;	-----------------------------------------
      0004E8                       1230 _usb_bus_isr_ep1_in:
                                   1231 ;	src/usbcore.c:599: Prints("usb core ep1 in\n");
      0004E8 90r04r0D         [24] 1232 	mov	dptr,#___str_40
      0004EB 75 F0 80         [24] 1233 	mov	b,#0x80
      0004EE 12r00r00         [24] 1234 	lcall	_Prints
                                   1235 ;	src/usbcore.c:601: D12_read_endpoint_last_status(3);
      0004F1 75 82 03         [24] 1236 	mov	dpl,#0x03
      0004F4 12r00r00         [24] 1237 	lcall	_D12_read_endpoint_last_status
                                   1238 ;	src/usbcore.c:602: Ep1InIsBusy = 0;
      0004F7 75*0E 00         [24] 1239 	mov	_Ep1InIsBusy,#0x00
                                   1240 ;	src/usbcore.c:603: }
      0004FA 22               [24] 1241 	ret
                                   1242 ;------------------------------------------------------------
                                   1243 ;Allocation info for local variables in function 'usb_bus_isr_ep2_out'
                                   1244 ;------------------------------------------------------------
                                   1245 ;	src/usbcore.c:605: void usb_bus_isr_ep2_out()
                                   1246 ;	-----------------------------------------
                                   1247 ;	 function usb_bus_isr_ep2_out
                                   1248 ;	-----------------------------------------
      0004FB                       1249 _usb_bus_isr_ep2_out:
                                   1250 ;	src/usbcore.c:608: Prints("usb core ep2 out\n");
      0004FB 90r04r1E         [24] 1251 	mov	dptr,#___str_41
      0004FE 75 F0 80         [24] 1252 	mov	b,#0x80
                                   1253 ;	src/usbcore.c:610: }
      000501 02r00r00         [24] 1254 	ljmp	_Prints
                                   1255 ;------------------------------------------------------------
                                   1256 ;Allocation info for local variables in function 'usb_bus_isr_ep2_in'
                                   1257 ;------------------------------------------------------------
                                   1258 ;	src/usbcore.c:612: void usb_bus_isr_ep2_in()
                                   1259 ;	-----------------------------------------
                                   1260 ;	 function usb_bus_isr_ep2_in
                                   1261 ;	-----------------------------------------
      000504                       1262 _usb_bus_isr_ep2_in:
                                   1263 ;	src/usbcore.c:615: Prints("usb core ep2 in\n");
      000504 90r04r30         [24] 1264 	mov	dptr,#___str_42
      000507 75 F0 80         [24] 1265 	mov	b,#0x80
                                   1266 ;	src/usbcore.c:617: }
      00050A 02r00r00         [24] 1267 	ljmp	_Prints
                                   1268 ;------------------------------------------------------------
                                   1269 ;Allocation info for local variables in function 'usb_bus_ep0_send_data'
                                   1270 ;------------------------------------------------------------
                                   1271 ;	src/usbcore.c:619: void usb_bus_ep0_send_data(void)
                                   1272 ;	-----------------------------------------
                                   1273 ;	 function usb_bus_ep0_send_data
                                   1274 ;	-----------------------------------------
      00050D                       1275 _usb_bus_ep0_send_data:
                                   1276 ;	src/usbcore.c:621: if (SendLength > DeviceDescriptor[7]) {
      00050D 90r00r07         [24] 1277 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      000510 E4               [12] 1278 	clr	a
      000511 93               [24] 1279 	movc	a,@a+dptr
      000512 FF               [12] 1280 	mov	r7,a
      000513 FD               [12] 1281 	mov	r5,a
      000514 7E 00            [12] 1282 	mov	r6,#0x00
      000516 C3               [12] 1283 	clr	c
      000517 ED               [12] 1284 	mov	a,r5
      000518 95*0B            [12] 1285 	subb	a,_SendLength
      00051A EE               [12] 1286 	mov	a,r6
      00051B 95*0C            [12] 1287 	subb	a,(_SendLength + 1)
      00051D 50 34            [24] 1288 	jnc	00107$
                                   1289 ;	src/usbcore.c:622: D12_write_endpoint_buffer(1, DeviceDescriptor[7], pSendData);
      00051F 8F*00            [24] 1290 	mov	_D12_write_endpoint_buffer_PARM_2,r7
      000521 85*08*00         [24] 1291 	mov	_D12_write_endpoint_buffer_PARM_3,_pSendData
      000524 85*09*01         [24] 1292 	mov	(_D12_write_endpoint_buffer_PARM_3 + 1),(_pSendData + 1)
      000527 85*0A*02         [24] 1293 	mov	(_D12_write_endpoint_buffer_PARM_3 + 2),(_pSendData + 2)
      00052A 75 82 01         [24] 1294 	mov	dpl,#0x01
      00052D 12r00r00         [24] 1295 	lcall	_D12_write_endpoint_buffer
                                   1296 ;	src/usbcore.c:623: SendLength -= DeviceDescriptor[7];
      000530 90r00r07         [24] 1297 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      000533 E4               [12] 1298 	clr	a
      000534 93               [24] 1299 	movc	a,@a+dptr
      000535 FF               [12] 1300 	mov	r7,a
      000536 FD               [12] 1301 	mov	r5,a
      000537 7E 00            [12] 1302 	mov	r6,#0x00
      000539 AB*0B            [24] 1303 	mov	r3,_SendLength
      00053B AC*0C            [24] 1304 	mov	r4,(_SendLength + 1)
      00053D EB               [12] 1305 	mov	a,r3
      00053E C3               [12] 1306 	clr	c
      00053F 9D               [12] 1307 	subb	a,r5
      000540 FB               [12] 1308 	mov	r3,a
      000541 EC               [12] 1309 	mov	a,r4
      000542 9E               [12] 1310 	subb	a,r6
      000543 FC               [12] 1311 	mov	r4,a
      000544 8B*0B            [24] 1312 	mov	_SendLength,r3
      000546 8C*0C            [24] 1313 	mov	(_SendLength + 1),r4
                                   1314 ;	src/usbcore.c:624: pSendData += DeviceDescriptor[7];
      000548 EF               [12] 1315 	mov	a,r7
      000549 25*08            [12] 1316 	add	a,_pSendData
      00054B F5*08            [12] 1317 	mov	_pSendData,a
      00054D E4               [12] 1318 	clr	a
      00054E 35*09            [12] 1319 	addc	a,(_pSendData + 1)
      000550 F5*09            [12] 1320 	mov	(_pSendData + 1),a
      000552 22               [24] 1321 	ret
      000553                       1322 00107$:
                                   1323 ;	src/usbcore.c:626: if (SendLength != 0) {
      000553 E5*0B            [12] 1324 	mov	a,_SendLength
      000555 45*0C            [12] 1325 	orl	a,(_SendLength + 1)
      000557 60 18            [24] 1326 	jz	00104$
                                   1327 ;	src/usbcore.c:627: D12_write_endpoint_buffer(1, SendLength, pSendData);
      000559 85*0B*00         [24] 1328 	mov	_D12_write_endpoint_buffer_PARM_2,_SendLength
      00055C 85*08*00         [24] 1329 	mov	_D12_write_endpoint_buffer_PARM_3,_pSendData
      00055F 85*09*01         [24] 1330 	mov	(_D12_write_endpoint_buffer_PARM_3 + 1),(_pSendData + 1)
      000562 85*0A*02         [24] 1331 	mov	(_D12_write_endpoint_buffer_PARM_3 + 2),(_pSendData + 2)
      000565 75 82 01         [24] 1332 	mov	dpl,#0x01
      000568 12r00r00         [24] 1333 	lcall	_D12_write_endpoint_buffer
                                   1334 ;	src/usbcore.c:628: SendLength = 0;
      00056B E4               [12] 1335 	clr	a
      00056C F5*0B            [12] 1336 	mov	_SendLength,a
      00056E F5*0C            [12] 1337 	mov	(_SendLength + 1),a
      000570 22               [24] 1338 	ret
      000571                       1339 00104$:
                                   1340 ;	src/usbcore.c:630: if (NeedZeroPacket == 1) {
      000571 74 01            [12] 1341 	mov	a,#0x01
      000573 B5*0D 15         [24] 1342 	cjne	a,_NeedZeroPacket,00109$
                                   1343 ;	src/usbcore.c:631: D12_write_endpoint_buffer(1, 0, pSendData);
      000576 75*00 00         [24] 1344 	mov	_D12_write_endpoint_buffer_PARM_2,#0x00
      000579 85*08*00         [24] 1345 	mov	_D12_write_endpoint_buffer_PARM_3,_pSendData
      00057C 85*09*01         [24] 1346 	mov	(_D12_write_endpoint_buffer_PARM_3 + 1),(_pSendData + 1)
      00057F 85*0A*02         [24] 1347 	mov	(_D12_write_endpoint_buffer_PARM_3 + 2),(_pSendData + 2)
      000582 75 82 01         [24] 1348 	mov	dpl,#0x01
      000585 12r00r00         [24] 1349 	lcall	_D12_write_endpoint_buffer
                                   1350 ;	src/usbcore.c:632: NeedZeroPacket = 0;
      000588 75*0D 00         [24] 1351 	mov	_NeedZeroPacket,#0x00
      00058B                       1352 00109$:
                                   1353 ;	src/usbcore.c:636: }
      00058B 22               [24] 1354 	ret
                                   1355 	.area CSEG    (CODE)
                                   1356 	.area CONST   (CODE)
      000000                       1357 _DeviceDescriptor:
      000000 12                    1358 	.db #0x12	; 18
      000001 01                    1359 	.db #0x01	; 1
      000002 10                    1360 	.db #0x10	; 16
      000003 01                    1361 	.db #0x01	; 1
      000004 00                    1362 	.db #0x00	; 0
      000005 00                    1363 	.db #0x00	; 0
      000006 00                    1364 	.db #0x00	; 0
      000007 10                    1365 	.db #0x10	; 16
      000008 88                    1366 	.db #0x88	; 136
      000009 88                    1367 	.db #0x88	; 136
      00000A 01                    1368 	.db #0x01	; 1
      00000B 00                    1369 	.db #0x00	; 0
      00000C 00                    1370 	.db #0x00	; 0
      00000D 01                    1371 	.db #0x01	; 1
      00000E 01                    1372 	.db #0x01	; 1
      00000F 02                    1373 	.db #0x02	; 2
      000010 03                    1374 	.db #0x03	; 3
      000011 01                    1375 	.db #0x01	; 1
      000012                       1376 _ConfigurationDescriptor:
      000012 09                    1377 	.db #0x09	; 9
      000013 02                    1378 	.db #0x02	; 2
      000014 22                    1379 	.db #0x22	; 34
      000015 00                    1380 	.db #0x00	; 0
      000016 01                    1381 	.db #0x01	; 1
      000017 01                    1382 	.db #0x01	; 1
      000018 00                    1383 	.db #0x00	; 0
      000019 80                    1384 	.db #0x80	; 128
      00001A 32                    1385 	.db #0x32	; 50	'2'
      00001B 09                    1386 	.db #0x09	; 9
      00001C 04                    1387 	.db #0x04	; 4
      00001D 00                    1388 	.db #0x00	; 0
      00001E 00                    1389 	.db #0x00	; 0
      00001F 01                    1390 	.db #0x01	; 1
      000020 03                    1391 	.db #0x03	; 3
      000021 01                    1392 	.db #0x01	; 1
      000022 02                    1393 	.db #0x02	; 2
      000023 00                    1394 	.db #0x00	; 0
      000024 09                    1395 	.db #0x09	; 9
      000025 21                    1396 	.db #0x21	; 33
      000026 10                    1397 	.db #0x10	; 16
      000027 01                    1398 	.db #0x01	; 1
      000028 21                    1399 	.db #0x21	; 33
      000029 01                    1400 	.db #0x01	; 1
      00002A 22                    1401 	.db #0x22	; 34
      00002B 34                    1402 	.db #0x34	; 52	'4'
      00002C 00                    1403 	.db #0x00	; 0
      00002D 07                    1404 	.db #0x07	; 7
      00002E 05                    1405 	.db #0x05	; 5
      00002F 81                    1406 	.db #0x81	; 129
      000030 03                    1407 	.db #0x03	; 3
      000031 10                    1408 	.db #0x10	; 16
      000032 00                    1409 	.db #0x00	; 0
      000033 0A                    1410 	.db #0x0a	; 10
      000034                       1411 _languageId:
      000034 04                    1412 	.db #0x04	; 4
      000035 03                    1413 	.db #0x03	; 3
      000036 09                    1414 	.db #0x09	; 9
      000037 04                    1415 	.db #0x04	; 4
      000038                       1416 _ManufacturerStringDescriptor:
      000038 5E                    1417 	.db #0x5e	; 94
      000039 03                    1418 	.db #0x03	; 3
      00003A 43                    1419 	.db #0x43	; 67	'C'
      00003B 00                    1420 	.db #0x00	; 0
      00003C 6F                    1421 	.db #0x6f	; 111	'o'
      00003D 00                    1422 	.db #0x00	; 0
      00003E 6E                    1423 	.db #0x6e	; 110	'n'
      00003F 00                    1424 	.db #0x00	; 0
      000040 74                    1425 	.db #0x74	; 116	't'
      000041 00                    1426 	.db #0x00	; 0
      000042 61                    1427 	.db #0x61	; 97	'a'
      000043 00                    1428 	.db #0x00	; 0
      000044 63                    1429 	.db #0x63	; 99	'c'
      000045 00                    1430 	.db #0x00	; 0
      000046 74                    1431 	.db #0x74	; 116	't'
      000047 00                    1432 	.db #0x00	; 0
      000048 20                    1433 	.db #0x20	; 32
      000049 00                    1434 	.db #0x00	; 0
      00004A 61                    1435 	.db #0x61	; 97	'a'
      00004B 00                    1436 	.db #0x00	; 0
      00004C 75                    1437 	.db #0x75	; 117	'u'
      00004D 00                    1438 	.db #0x00	; 0
      00004E 74                    1439 	.db #0x74	; 116	't'
      00004F 00                    1440 	.db #0x00	; 0
      000050 68                    1441 	.db #0x68	; 104	'h'
      000051 00                    1442 	.db #0x00	; 0
      000052 6F                    1443 	.db #0x6f	; 111	'o'
      000053 00                    1444 	.db #0x00	; 0
      000054 72                    1445 	.db #0x72	; 114	'r'
      000055 00                    1446 	.db #0x00	; 0
      000056 20                    1447 	.db #0x20	; 32
      000057 00                    1448 	.db #0x00	; 0
      000058 48                    1449 	.db #0x48	; 72	'H'
      000059 00                    1450 	.db #0x00	; 0
      00005A 65                    1451 	.db #0x65	; 101	'e'
      00005B 00                    1452 	.db #0x00	; 0
      00005C 6E                    1453 	.db #0x6e	; 110	'n'
      00005D 00                    1454 	.db #0x00	; 0
      00005E 67                    1455 	.db #0x67	; 103	'g'
      00005F 00                    1456 	.db #0x00	; 0
      000060 20                    1457 	.db #0x20	; 32
      000061 00                    1458 	.db #0x00	; 0
      000062 56                    1459 	.db #0x56	; 86	'V'
      000063 00                    1460 	.db #0x00	; 0
      000064 69                    1461 	.db #0x69	; 105	'i'
      000065 00                    1462 	.db #0x00	; 0
      000066 61                    1463 	.db #0x61	; 97	'a'
      000067 00                    1464 	.db #0x00	; 0
      000068 20                    1465 	.db #0x20	; 32
      000069 00                    1466 	.db #0x00	; 0
      00006A 65                    1467 	.db #0x65	; 101	'e'
      00006B 00                    1468 	.db #0x00	; 0
      00006C 6D                    1469 	.db #0x6d	; 109	'm'
      00006D 00                    1470 	.db #0x00	; 0
      00006E 61                    1471 	.db #0x61	; 97	'a'
      00006F 00                    1472 	.db #0x00	; 0
      000070 69                    1473 	.db #0x69	; 105	'i'
      000071 00                    1474 	.db #0x00	; 0
      000072 6C                    1475 	.db #0x6c	; 108	'l'
      000073 00                    1476 	.db #0x00	; 0
      000074 20                    1477 	.db #0x20	; 32
      000075 00                    1478 	.db #0x00	; 0
      000076 37                    1479 	.db #0x37	; 55	'7'
      000077 00                    1480 	.db #0x00	; 0
      000078 37                    1481 	.db #0x37	; 55	'7'
      000079 00                    1482 	.db #0x00	; 0
      00007A 30                    1483 	.db #0x30	; 48	'0'
      00007B 00                    1484 	.db #0x00	; 0
      00007C 31                    1485 	.db #0x31	; 49	'1'
      00007D 00                    1486 	.db #0x00	; 0
      00007E 37                    1487 	.db #0x37	; 55	'7'
      00007F 00                    1488 	.db #0x00	; 0
      000080 35                    1489 	.db #0x35	; 53	'5'
      000081 00                    1490 	.db #0x00	; 0
      000082 31                    1491 	.db #0x31	; 49	'1'
      000083 00                    1492 	.db #0x00	; 0
      000084 37                    1493 	.db #0x37	; 55	'7'
      000085 00                    1494 	.db #0x00	; 0
      000086 37                    1495 	.db #0x37	; 55	'7'
      000087 00                    1496 	.db #0x00	; 0
      000088 40                    1497 	.db #0x40	; 64
      000089 00                    1498 	.db #0x00	; 0
      00008A 71                    1499 	.db #0x71	; 113	'q'
      00008B 00                    1500 	.db #0x00	; 0
      00008C 71                    1501 	.db #0x71	; 113	'q'
      00008D 00                    1502 	.db #0x00	; 0
      00008E 2E                    1503 	.db #0x2e	; 46
      00008F 00                    1504 	.db #0x00	; 0
      000090 63                    1505 	.db #0x63	; 99	'c'
      000091 00                    1506 	.db #0x00	; 0
      000092 6F                    1507 	.db #0x6f	; 111	'o'
      000093 00                    1508 	.db #0x00	; 0
      000094 6D                    1509 	.db #0x6d	; 109	'm'
      000095 00                    1510 	.db #0x00	; 0
      000096                       1511 _ProductStringDescriptor:
      000096 1A                    1512 	.db #0x1a	; 26
      000097 03                    1513 	.db #0x03	; 3
      000098 48                    1514 	.db #0x48	; 72	'H'
      000099 00                    1515 	.db #0x00	; 0
      00009A 65                    1516 	.db #0x65	; 101	'e'
      00009B 00                    1517 	.db #0x00	; 0
      00009C 6E                    1518 	.db #0x6e	; 110	'n'
      00009D 00                    1519 	.db #0x00	; 0
      00009E 67                    1520 	.db #0x67	; 103	'g'
      00009F 00                    1521 	.db #0x00	; 0
      0000A0 27                    1522 	.db #0x27	; 39
      0000A1 00                    1523 	.db #0x00	; 0
      0000A2 73                    1524 	.db #0x73	; 115	's'
      0000A3 00                    1525 	.db #0x00	; 0
      0000A4 20                    1526 	.db #0x20	; 32
      0000A5 00                    1527 	.db #0x00	; 0
      0000A6 4D                    1528 	.db #0x4d	; 77	'M'
      0000A7 00                    1529 	.db #0x00	; 0
      0000A8 6F                    1530 	.db #0x6f	; 111	'o'
      0000A9 00                    1531 	.db #0x00	; 0
      0000AA 75                    1532 	.db #0x75	; 117	'u'
      0000AB 00                    1533 	.db #0x00	; 0
      0000AC 73                    1534 	.db #0x73	; 115	's'
      0000AD 00                    1535 	.db #0x00	; 0
      0000AE 65                    1536 	.db #0x65	; 101	'e'
      0000AF 00                    1537 	.db #0x00	; 0
      0000B0                       1538 _SerialNumberStringDescriptor:
      0000B0 16                    1539 	.db #0x16	; 22
      0000B1 03                    1540 	.db #0x03	; 3
      0000B2 32                    1541 	.db #0x32	; 50	'2'
      0000B3 00                    1542 	.db #0x00	; 0
      0000B4 30                    1543 	.db #0x30	; 48	'0'
      0000B5 00                    1544 	.db #0x00	; 0
      0000B6 32                    1545 	.db #0x32	; 50	'2'
      0000B7 00                    1546 	.db #0x00	; 0
      0000B8 33                    1547 	.db #0x33	; 51	'3'
      0000B9 00                    1548 	.db #0x00	; 0
      0000BA 2D                    1549 	.db #0x2d	; 45
      0000BB 00                    1550 	.db #0x00	; 0
      0000BC 30                    1551 	.db #0x30	; 48	'0'
      0000BD 00                    1552 	.db #0x00	; 0
      0000BE 37                    1553 	.db #0x37	; 55	'7'
      0000BF 00                    1554 	.db #0x00	; 0
      0000C0 2D                    1555 	.db #0x2d	; 45
      0000C1 00                    1556 	.db #0x00	; 0
      0000C2 31                    1557 	.db #0x31	; 49	'1'
      0000C3 00                    1558 	.db #0x00	; 0
      0000C4 38                    1559 	.db #0x38	; 56	'8'
      0000C5 00                    1560 	.db #0x00	; 0
      0000C6                       1561 _ReportDescriptor:
      0000C6 05                    1562 	.db #0x05	; 5
      0000C7 01                    1563 	.db #0x01	; 1
      0000C8 09                    1564 	.db #0x09	; 9
      0000C9 02                    1565 	.db #0x02	; 2
      0000CA A1                    1566 	.db #0xa1	; 161
      0000CB 01                    1567 	.db #0x01	; 1
      0000CC 09                    1568 	.db #0x09	; 9
      0000CD 01                    1569 	.db #0x01	; 1
      0000CE A1                    1570 	.db #0xa1	; 161
      0000CF 00                    1571 	.db #0x00	; 0
      0000D0 05                    1572 	.db #0x05	; 5
      0000D1 09                    1573 	.db #0x09	; 9
      0000D2 19                    1574 	.db #0x19	; 25
      0000D3 01                    1575 	.db #0x01	; 1
      0000D4 29                    1576 	.db #0x29	; 41
      0000D5 03                    1577 	.db #0x03	; 3
      0000D6 15                    1578 	.db #0x15	; 21
      0000D7 00                    1579 	.db #0x00	; 0
      0000D8 25                    1580 	.db #0x25	; 37
      0000D9 01                    1581 	.db #0x01	; 1
      0000DA 95                    1582 	.db #0x95	; 149
      0000DB 03                    1583 	.db #0x03	; 3
      0000DC 75                    1584 	.db #0x75	; 117	'u'
      0000DD 01                    1585 	.db #0x01	; 1
      0000DE 81                    1586 	.db #0x81	; 129
      0000DF 02                    1587 	.db #0x02	; 2
      0000E0 95                    1588 	.db #0x95	; 149
      0000E1 01                    1589 	.db #0x01	; 1
      0000E2 75                    1590 	.db #0x75	; 117	'u'
      0000E3 05                    1591 	.db #0x05	; 5
      0000E4 81                    1592 	.db #0x81	; 129
      0000E5 03                    1593 	.db #0x03	; 3
      0000E6 05                    1594 	.db #0x05	; 5
      0000E7 01                    1595 	.db #0x01	; 1
      0000E8 09                    1596 	.db #0x09	; 9
      0000E9 30                    1597 	.db #0x30	; 48	'0'
      0000EA 09                    1598 	.db #0x09	; 9
      0000EB 31                    1599 	.db #0x31	; 49	'1'
      0000EC 09                    1600 	.db #0x09	; 9
      0000ED 38                    1601 	.db #0x38	; 56	'8'
      0000EE 15                    1602 	.db #0x15	; 21
      0000EF 81                    1603 	.db #0x81	; 129
      0000F0 25                    1604 	.db #0x25	; 37
      0000F1 7F                    1605 	.db #0x7f	; 127
      0000F2 75                    1606 	.db #0x75	; 117	'u'
      0000F3 08                    1607 	.db #0x08	; 8
      0000F4 95                    1608 	.db #0x95	; 149
      0000F5 03                    1609 	.db #0x03	; 3
      0000F6 81                    1610 	.db #0x81	; 129
      0000F7 06                    1611 	.db #0x06	; 6
      0000F8 C0                    1612 	.db #0xc0	; 192
      0000F9 C0                    1613 	.db #0xc0	; 192
                                   1614 	.area CONST   (CODE)
      0000FA                       1615 ___str_0:
      0000FA 75 73 62 20 64 69 73  1616 	.ascii "usb disconnect"
             63 6F 6E 6E 65 63 74
      000108 0A                    1617 	.db 0x0a
      000109 00                    1618 	.db 0x00
                                   1619 	.area CSEG    (CODE)
                                   1620 	.area CONST   (CODE)
      00010A                       1621 ___str_1:
      00010A 75 73 62 20 63 6F 6E  1622 	.ascii "usb connect"
             6E 65 63 74
      000115 0A                    1623 	.db 0x0a
      000116 00                    1624 	.db 0x00
                                   1625 	.area CSEG    (CODE)
                                   1626 	.area CONST   (CODE)
      000117                       1627 ___str_2:
      000117 75 73 62 20 63 6F 72  1628 	.ascii "usb core isr suspend"
             65 20 69 73 72 20 73
             75 73 70 65 6E 64
      00012B 0A                    1629 	.db 0x0a
      00012C 00                    1630 	.db 0x00
                                   1631 	.area CSEG    (CODE)
                                   1632 	.area CONST   (CODE)
      00012D                       1633 ___str_3:
      00012D 75 73 62 20 63 6F 72  1634 	.ascii "usb core isr reset"
             65 20 69 73 72 20 72
             65 73 65 74
      00013F 0A                    1635 	.db 0x0a
      000140 00                    1636 	.db 0x00
                                   1637 	.area CSEG    (CODE)
                                   1638 	.area CONST   (CODE)
      000141                       1639 ___str_4:
      000141 75 73 62 20 69 73 72  1640 	.ascii "usb isr ep0 out"
             20 65 70 30 20 6F 75
             74
      000150 0A                    1641 	.db 0x0a
      000151 00                    1642 	.db 0x00
                                   1643 	.area CSEG    (CODE)
                                   1644 	.area CONST   (CODE)
      000152                       1645 ___str_5:
      000152 55 53 42 20 73 74 61  1646 	.ascii "USB stand input request: "
             6E 64 20 69 6E 70 75
             74 20 72 65 71 75 65
             73 74 3A 20
      00016B 00                    1647 	.db 0x00
                                   1648 	.area CSEG    (CODE)
                                   1649 	.area CONST   (CODE)
      00016C                       1650 ___str_6:
      00016C 47 65 74 20 63 6F 6E  1651 	.ascii "Get configuration"
             66 69 67 75 72 61 74
             69 6F 6E
      00017D 0A                    1652 	.db 0x0a
      00017E 00                    1653 	.db 0x00
                                   1654 	.area CSEG    (CODE)
                                   1655 	.area CONST   (CODE)
      00017F                       1656 ___str_7:
      00017F 47 65 74 20 64 65 73  1657 	.ascii "Get descriptor -- "
             63 72 69 70 74 6F 72
             20 2D 2D 20
      000191 00                    1658 	.db 0x00
                                   1659 	.area CSEG    (CODE)
                                   1660 	.area CONST   (CODE)
      000192                       1661 ___str_8:
      000192 64 65 76 69 63 65 20  1662 	.ascii "device descriptor"
             64 65 73 63 72 69 70
             74 6F 72
      0001A3 0A                    1663 	.db 0x0a
      0001A4 00                    1664 	.db 0x00
                                   1665 	.area CSEG    (CODE)
                                   1666 	.area CONST   (CODE)
      0001A5                       1667 ___str_9:
      0001A5 63 6F 6E 66 69 67 75  1668 	.ascii "configuration descriptor"
             72 61 74 69 6F 6E 20
             64 65 73 63 72 69 70
             74 6F 72
      0001BD 0A                    1669 	.db 0x0a
      0001BE 00                    1670 	.db 0x00
                                   1671 	.area CSEG    (CODE)
                                   1672 	.area CONST   (CODE)
      0001BF                       1673 ___str_10:
      0001BF 73 74 72 69 6E 67 20  1674 	.ascii "string descriptor -- "
             64 65 73 63 72 69 70
             74 6F 72 20 2D 2D 20
      0001D4 00                    1675 	.db 0x00
                                   1676 	.area CSEG    (CODE)
                                   1677 	.area CONST   (CODE)
      0001D5                       1678 ___str_11:
      0001D5 6C 61 6E 67 75 61 67  1679 	.ascii "language ID"
             65 20 49 44
      0001E0 0A                    1680 	.db 0x0a
      0001E1 00                    1681 	.db 0x00
                                   1682 	.area CSEG    (CODE)
                                   1683 	.area CONST   (CODE)
      0001E2                       1684 ___str_12:
      0001E2 6D 61 6E 75 66 61 63  1685 	.ascii "manufacture string"
             74 75 72 65 20 73 74
             72 69 6E 67
      0001F4 0A                    1686 	.db 0x0a
      0001F5 00                    1687 	.db 0x00
                                   1688 	.area CSEG    (CODE)
                                   1689 	.area CONST   (CODE)
      0001F6                       1690 ___str_13:
      0001F6 70 72 6F 64 75 63 74  1691 	.ascii "product string"
             20 73 74 72 69 6E 67
      000204 0A                    1692 	.db 0x0a
      000205 00                    1693 	.db 0x00
                                   1694 	.area CSEG    (CODE)
                                   1695 	.area CONST   (CODE)
      000206                       1696 ___str_14:
      000206 73 65 72 69 61 6C 20  1697 	.ascii "serial string"
             73 74 72 69 6E 67
      000213 0A                    1698 	.db 0x0a
      000214 00                    1699 	.db 0x00
                                   1700 	.area CSEG    (CODE)
                                   1701 	.area CONST   (CODE)
      000215                       1702 ___str_15:
      000215 75 6E 6B 6E 6F 77 6E  1703 	.ascii "unknown string"
             20 73 74 72 69 6E 67
      000223 0A                    1704 	.db 0x0a
      000224 00                    1705 	.db 0x00
                                   1706 	.area CSEG    (CODE)
                                   1707 	.area CONST   (CODE)
      000225                       1708 ___str_16:
      000225 52 65 70 6F 72 74 20  1709 	.ascii "Report descriptor: "
             64 65 73 63 72 69 70
             74 6F 72 3A 20
      000238 00                    1710 	.db 0x00
                                   1711 	.area CSEG    (CODE)
                                   1712 	.area CONST   (CODE)
      000239                       1713 ___str_17:
      000239 6F 74 68 65 72 20 64  1714 	.ascii "other descriptor: "
             65 73 63 72 69 70 74
             6F 72 3A 20
      00024B 00                    1715 	.db 0x00
                                   1716 	.area CSEG    (CODE)
                                   1717 	.area CONST   (CODE)
      00024C                       1718 ___str_18:
      00024C 0A                    1719 	.db 0x0a
      00024D 00                    1720 	.db 0x00
                                   1721 	.area CSEG    (CODE)
                                   1722 	.area CONST   (CODE)
      00024E                       1723 ___str_19:
      00024E 47 65 74 20 69 6E 74  1724 	.ascii "Get interface"
             65 72 66 61 63 65
      00025B 0A                    1725 	.db 0x0a
      00025C 00                    1726 	.db 0x00
                                   1727 	.area CSEG    (CODE)
                                   1728 	.area CONST   (CODE)
      00025D                       1729 ___str_20:
      00025D 47 65 74 20 73 74 61  1730 	.ascii "Get status"
             74 75 73
      000267 0A                    1731 	.db 0x0a
      000268 00                    1732 	.db 0x00
                                   1733 	.area CSEG    (CODE)
                                   1734 	.area CONST   (CODE)
      000269                       1735 ___str_21:
      000269 53 79 6E 63 68 20 66  1736 	.ascii "Synch frame"
             72 61 6D 65
      000274 0A                    1737 	.db 0x0a
      000275 00                    1738 	.db 0x00
                                   1739 	.area CSEG    (CODE)
                                   1740 	.area CONST   (CODE)
      000276                       1741 ___str_22:
      000276 45 72 72 6F 72 3A 20  1742 	.ascii "Error: undefined stander request"
             75 6E 64 65 66 69 6E
             65 64 20 73 74 61 6E
             64 65 72 20 72 65 71
             75 65 73 74
      000296 0A                    1743 	.db 0x0a
      000297 00                    1744 	.db 0x00
                                   1745 	.area CSEG    (CODE)
                                   1746 	.area CONST   (CODE)
      000298                       1747 ___str_23:
      000298 55 53 42 20 63 6C 61  1748 	.ascii "USB class input request:"
             73 73 20 69 6E 70 75
             74 20 72 65 71 75 65
             73 74 3A
      0002B0 0A                    1749 	.db 0x0a
      0002B1 00                    1750 	.db 0x00
                                   1751 	.area CSEG    (CODE)
                                   1752 	.area CONST   (CODE)
      0002B2                       1753 ___str_24:
      0002B2 55 53 42 20 76 65 6E  1754 	.ascii "USB vendor input request:"
             64 6F 72 20 69 6E 70
             75 74 20 72 65 71 75
             65 73 74 3A
      0002CB 0A                    1755 	.db 0x0a
      0002CC 00                    1756 	.db 0x00
                                   1757 	.area CSEG    (CODE)
                                   1758 	.area CONST   (CODE)
      0002CD                       1759 ___str_25:
      0002CD 45 72 72 6F 72 3A 20  1760 	.ascii "Error: undefined input request:"
             75 6E 64 65 66 69 6E
             65 64 20 69 6E 70 75
             74 20 72 65 71 75 65
             73 74 3A
      0002EC 0A                    1761 	.db 0x0a
      0002ED 00                    1762 	.db 0x00
                                   1763 	.area CSEG    (CODE)
                                   1764 	.area CONST   (CODE)
      0002EE                       1765 ___str_26:
      0002EE 55 53 42 20 73 74 61  1766 	.ascii "USB stander output request: "
             6E 64 65 72 20 6F 75
             74 70 75 74 20 72 65
             71 75 65 73 74 3A 20
      00030A 00                    1767 	.db 0x00
                                   1768 	.area CSEG    (CODE)
                                   1769 	.area CONST   (CODE)
      00030B                       1770 ___str_27:
      00030B 63 6C 65 61 72 20 66  1771 	.ascii "clear feature"
             65 61 74 75 72 65
      000318 0A                    1772 	.db 0x0a
      000319 00                    1773 	.db 0x00
                                   1774 	.area CSEG    (CODE)
                                   1775 	.area CONST   (CODE)
      00031A                       1776 ___str_28:
      00031A 73 65 74 20 61 64 64  1777 	.ascii "set address, the address is: "
             72 65 73 73 2C 20 74
             68 65 20 61 64 64 72
             65 73 73 20 69 73 3A
             20
      000337 00                    1778 	.db 0x00
                                   1779 	.area CSEG    (CODE)
                                   1780 	.area CONST   (CODE)
      000338                       1781 ___str_29:
      000338 73 65 74 20 63 6F 6E  1782 	.ascii "set configuration"
             66 69 67 75 72 61 74
             69 6F 6E
      000349 0A                    1783 	.db 0x0a
      00034A 00                    1784 	.db 0x00
                                   1785 	.area CSEG    (CODE)
                                   1786 	.area CONST   (CODE)
      00034B                       1787 ___str_30:
      00034B 73 65 74 20 64 65 73  1788 	.ascii "set descriptor"
             63 72 69 70 74 6F 72
      000359 0A                    1789 	.db 0x0a
      00035A 00                    1790 	.db 0x00
                                   1791 	.area CSEG    (CODE)
                                   1792 	.area CONST   (CODE)
      00035B                       1793 ___str_31:
      00035B 73 65 74 20 66 65 61  1794 	.ascii "set feature"
             74 75 72 65
      000366 0A                    1795 	.db 0x0a
      000367 00                    1796 	.db 0x00
                                   1797 	.area CSEG    (CODE)
                                   1798 	.area CONST   (CODE)
      000368                       1799 ___str_32:
      000368 73 65 74 20 69 6E 74  1800 	.ascii "set interface"
             65 72 66 61 63 65
      000375 0A                    1801 	.db 0x0a
      000376 00                    1802 	.db 0x00
                                   1803 	.area CSEG    (CODE)
                                   1804 	.area CONST   (CODE)
      000377                       1805 ___str_33:
      000377 55 53 42 20 63 6C 61  1806 	.ascii "USB class output request:"
             73 73 20 6F 75 74 70
             75 74 20 72 65 71 75
             65 73 74 3A
      000390 0A                    1807 	.db 0x0a
      000391 00                    1808 	.db 0x00
                                   1809 	.area CSEG    (CODE)
                                   1810 	.area CONST   (CODE)
      000392                       1811 ___str_34:
      000392 73 65 74 20 69 64 6C  1812 	.ascii "set idle"
             65
      00039A 0A                    1813 	.db 0x0a
      00039B 00                    1814 	.db 0x00
                                   1815 	.area CSEG    (CODE)
                                   1816 	.area CONST   (CODE)
      00039C                       1817 ___str_35:
      00039C 75 6E 6B 6E 6F 77 6E  1818 	.ascii "unknown request"
             20 72 65 71 75 65 73
             74
      0003AB 0A                    1819 	.db 0x0a
      0003AC 00                    1820 	.db 0x00
                                   1821 	.area CSEG    (CODE)
                                   1822 	.area CONST   (CODE)
      0003AD                       1823 ___str_36:
      0003AD 55 53 42 20 76 65 6E  1824 	.ascii "USB vendor output request:"
             64 6F 72 20 6F 75 74
             70 75 74 20 72 65 71
             75 65 73 74 3A
      0003C7 0A                    1825 	.db 0x0a
      0003C8 00                    1826 	.db 0x00
                                   1827 	.area CSEG    (CODE)
                                   1828 	.area CONST   (CODE)
      0003C9                       1829 ___str_37:
      0003C9 45 72 72 6F 72 3A 20  1830 	.ascii "Error: undefined output request."
             75 6E 64 65 66 69 6E
             65 64 20 6F 75 74 70
             75 74 20 72 65 71 75
             65 73 74 2E
      0003E9 0A                    1831 	.db 0x0a
      0003EA 00                    1832 	.db 0x00
                                   1833 	.area CSEG    (CODE)
                                   1834 	.area CONST   (CODE)
      0003EB                       1835 ___str_38:
      0003EB 75 73 62 20 69 73 72  1836 	.ascii "usb isr ep0 in"
             20 65 70 30 20 69 6E
      0003F9 0A                    1837 	.db 0x0a
      0003FA 00                    1838 	.db 0x00
                                   1839 	.area CSEG    (CODE)
                                   1840 	.area CONST   (CODE)
      0003FB                       1841 ___str_39:
      0003FB 75 73 62 20 63 6F 72  1842 	.ascii "usb core ep1 out"
             65 20 65 70 31 20 6F
             75 74
      00040B 0A                    1843 	.db 0x0a
      00040C 00                    1844 	.db 0x00
                                   1845 	.area CSEG    (CODE)
                                   1846 	.area CONST   (CODE)
      00040D                       1847 ___str_40:
      00040D 75 73 62 20 63 6F 72  1848 	.ascii "usb core ep1 in"
             65 20 65 70 31 20 69
             6E
      00041C 0A                    1849 	.db 0x0a
      00041D 00                    1850 	.db 0x00
                                   1851 	.area CSEG    (CODE)
                                   1852 	.area CONST   (CODE)
      00041E                       1853 ___str_41:
      00041E 75 73 62 20 63 6F 72  1854 	.ascii "usb core ep2 out"
             65 20 65 70 32 20 6F
             75 74
      00042E 0A                    1855 	.db 0x0a
      00042F 00                    1856 	.db 0x00
                                   1857 	.area CSEG    (CODE)
                                   1858 	.area CONST   (CODE)
      000430                       1859 ___str_42:
      000430 75 73 62 20 63 6F 72  1860 	.ascii "usb core ep2 in"
             65 20 65 70 32 20 69
             6E
      00043F 0A                    1861 	.db 0x0a
      000440 00                    1862 	.db 0x00
                                   1863 	.area CSEG    (CODE)
                                   1864 	.area XINIT   (CODE)
                                   1865 	.area CABS    (ABS,CODE)
