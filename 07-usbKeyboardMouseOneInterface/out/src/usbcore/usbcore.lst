                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module usbcore
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _ReportDescriptor
                                     12 	.globl _SerialNumberStringDescriptor
                                     13 	.globl _ProductStringDescriptor
                                     14 	.globl _ManufacturerStringDescriptor
                                     15 	.globl _languageId
                                     16 	.globl _ConfigurationDescriptor
                                     17 	.globl _DeviceDescriptor
                                     18 	.globl _delay_ms
                                     19 	.globl _D12_set_endpoint_enable
                                     20 	.globl _D12_set_address
                                     21 	.globl _D12_write_endpoint_buffer
                                     22 	.globl _D12_read_endpoint_last_status
                                     23 	.globl _D12_Acknowlwdge_setup
                                     24 	.globl _D12_clear_buffer
                                     25 	.globl _D12_read_endpoint_buffer
                                     26 	.globl _D12_write_byte
                                     27 	.globl _D12_write_command
                                     28 	.globl _dump_hex
                                     29 	.globl _print_hex
                                     30 	.globl _Prints
                                     31 	.globl _memset
                                     32 	.globl _TF2
                                     33 	.globl _EXF2
                                     34 	.globl _RCLK
                                     35 	.globl _TCLK
                                     36 	.globl _EXEN2
                                     37 	.globl _TR2
                                     38 	.globl _C_T2
                                     39 	.globl _CP_RL2
                                     40 	.globl _T2CON_7
                                     41 	.globl _T2CON_6
                                     42 	.globl _T2CON_5
                                     43 	.globl _T2CON_4
                                     44 	.globl _T2CON_3
                                     45 	.globl _T2CON_2
                                     46 	.globl _T2CON_1
                                     47 	.globl _T2CON_0
                                     48 	.globl _PT2
                                     49 	.globl _ET2
                                     50 	.globl _CY
                                     51 	.globl _AC
                                     52 	.globl _F0
                                     53 	.globl _RS1
                                     54 	.globl _RS0
                                     55 	.globl _OV
                                     56 	.globl _F1
                                     57 	.globl _P
                                     58 	.globl _PS
                                     59 	.globl _PT1
                                     60 	.globl _PX1
                                     61 	.globl _PT0
                                     62 	.globl _PX0
                                     63 	.globl _RD
                                     64 	.globl _WR
                                     65 	.globl _T1
                                     66 	.globl _T0
                                     67 	.globl _INT1
                                     68 	.globl _INT0
                                     69 	.globl _TXD
                                     70 	.globl _RXD
                                     71 	.globl _P3_7
                                     72 	.globl _P3_6
                                     73 	.globl _P3_5
                                     74 	.globl _P3_4
                                     75 	.globl _P3_3
                                     76 	.globl _P3_2
                                     77 	.globl _P3_1
                                     78 	.globl _P3_0
                                     79 	.globl _EA
                                     80 	.globl _ES
                                     81 	.globl _ET1
                                     82 	.globl _EX1
                                     83 	.globl _ET0
                                     84 	.globl _EX0
                                     85 	.globl _P2_7
                                     86 	.globl _P2_6
                                     87 	.globl _P2_5
                                     88 	.globl _P2_4
                                     89 	.globl _P2_3
                                     90 	.globl _P2_2
                                     91 	.globl _P2_1
                                     92 	.globl _P2_0
                                     93 	.globl _SM0
                                     94 	.globl _SM1
                                     95 	.globl _SM2
                                     96 	.globl _REN
                                     97 	.globl _TB8
                                     98 	.globl _RB8
                                     99 	.globl _TI
                                    100 	.globl _RI
                                    101 	.globl _P1_7
                                    102 	.globl _P1_6
                                    103 	.globl _P1_5
                                    104 	.globl _P1_4
                                    105 	.globl _P1_3
                                    106 	.globl _P1_2
                                    107 	.globl _P1_1
                                    108 	.globl _P1_0
                                    109 	.globl _TF1
                                    110 	.globl _TR1
                                    111 	.globl _TF0
                                    112 	.globl _TR0
                                    113 	.globl _IE1
                                    114 	.globl _IT1
                                    115 	.globl _IE0
                                    116 	.globl _IT0
                                    117 	.globl _P0_7
                                    118 	.globl _P0_6
                                    119 	.globl _P0_5
                                    120 	.globl _P0_4
                                    121 	.globl _P0_3
                                    122 	.globl _P0_2
                                    123 	.globl _P0_1
                                    124 	.globl _P0_0
                                    125 	.globl _TH2
                                    126 	.globl _TL2
                                    127 	.globl _RCAP2H
                                    128 	.globl _RCAP2L
                                    129 	.globl _T2CON
                                    130 	.globl _B
                                    131 	.globl _ACC
                                    132 	.globl _PSW
                                    133 	.globl _IP
                                    134 	.globl _P3
                                    135 	.globl _IE
                                    136 	.globl _P2
                                    137 	.globl _SBUF
                                    138 	.globl _SCON
                                    139 	.globl _P1
                                    140 	.globl _TH1
                                    141 	.globl _TH0
                                    142 	.globl _TL1
                                    143 	.globl _TL0
                                    144 	.globl _TMOD
                                    145 	.globl _TCON
                                    146 	.globl _PCON
                                    147 	.globl _DPH
                                    148 	.globl _DPL
                                    149 	.globl _SP
                                    150 	.globl _P0
                                    151 	.globl _ConfigValue
                                    152 	.globl _Ep1InIsBusy
                                    153 	.globl _NeedZeroPacket
                                    154 	.globl _SendLength
                                    155 	.globl _pSendData
                                    156 	.globl _wLength
                                    157 	.globl _wIndex
                                    158 	.globl _wValue
                                    159 	.globl _bRequest
                                    160 	.globl _bmRequestType
                                    161 	.globl _usb_disconnect
                                    162 	.globl _usb_connect
                                    163 	.globl _usb_bus_isr_suspend
                                    164 	.globl _usb_bus_isr_reset
                                    165 	.globl _usb_bus_isr_ep0_out
                                    166 	.globl _usb_bus_isr_ep0_in
                                    167 	.globl _usb_bus_isr_ep1_out
                                    168 	.globl _usb_bus_isr_ep1_in
                                    169 	.globl _usb_bus_isr_ep2_out
                                    170 	.globl _usb_bus_isr_ep2_in
                                    171 	.globl _usb_bus_ep0_send_data
                                    172 ;--------------------------------------------------------
                                    173 ; special function registers
                                    174 ;--------------------------------------------------------
                                    175 	.area RSEG    (ABS,DATA)
      000000                        176 	.org 0x0000
                           000080   177 _P0	=	0x0080
                           000081   178 _SP	=	0x0081
                           000082   179 _DPL	=	0x0082
                           000083   180 _DPH	=	0x0083
                           000087   181 _PCON	=	0x0087
                           000088   182 _TCON	=	0x0088
                           000089   183 _TMOD	=	0x0089
                           00008A   184 _TL0	=	0x008a
                           00008B   185 _TL1	=	0x008b
                           00008C   186 _TH0	=	0x008c
                           00008D   187 _TH1	=	0x008d
                           000090   188 _P1	=	0x0090
                           000098   189 _SCON	=	0x0098
                           000099   190 _SBUF	=	0x0099
                           0000A0   191 _P2	=	0x00a0
                           0000A8   192 _IE	=	0x00a8
                           0000B0   193 _P3	=	0x00b0
                           0000B8   194 _IP	=	0x00b8
                           0000D0   195 _PSW	=	0x00d0
                           0000E0   196 _ACC	=	0x00e0
                           0000F0   197 _B	=	0x00f0
                           0000C8   198 _T2CON	=	0x00c8
                           0000CA   199 _RCAP2L	=	0x00ca
                           0000CB   200 _RCAP2H	=	0x00cb
                           0000CC   201 _TL2	=	0x00cc
                           0000CD   202 _TH2	=	0x00cd
                                    203 ;--------------------------------------------------------
                                    204 ; special function bits
                                    205 ;--------------------------------------------------------
                                    206 	.area RSEG    (ABS,DATA)
      000000                        207 	.org 0x0000
                           000080   208 _P0_0	=	0x0080
                           000081   209 _P0_1	=	0x0081
                           000082   210 _P0_2	=	0x0082
                           000083   211 _P0_3	=	0x0083
                           000084   212 _P0_4	=	0x0084
                           000085   213 _P0_5	=	0x0085
                           000086   214 _P0_6	=	0x0086
                           000087   215 _P0_7	=	0x0087
                           000088   216 _IT0	=	0x0088
                           000089   217 _IE0	=	0x0089
                           00008A   218 _IT1	=	0x008a
                           00008B   219 _IE1	=	0x008b
                           00008C   220 _TR0	=	0x008c
                           00008D   221 _TF0	=	0x008d
                           00008E   222 _TR1	=	0x008e
                           00008F   223 _TF1	=	0x008f
                           000090   224 _P1_0	=	0x0090
                           000091   225 _P1_1	=	0x0091
                           000092   226 _P1_2	=	0x0092
                           000093   227 _P1_3	=	0x0093
                           000094   228 _P1_4	=	0x0094
                           000095   229 _P1_5	=	0x0095
                           000096   230 _P1_6	=	0x0096
                           000097   231 _P1_7	=	0x0097
                           000098   232 _RI	=	0x0098
                           000099   233 _TI	=	0x0099
                           00009A   234 _RB8	=	0x009a
                           00009B   235 _TB8	=	0x009b
                           00009C   236 _REN	=	0x009c
                           00009D   237 _SM2	=	0x009d
                           00009E   238 _SM1	=	0x009e
                           00009F   239 _SM0	=	0x009f
                           0000A0   240 _P2_0	=	0x00a0
                           0000A1   241 _P2_1	=	0x00a1
                           0000A2   242 _P2_2	=	0x00a2
                           0000A3   243 _P2_3	=	0x00a3
                           0000A4   244 _P2_4	=	0x00a4
                           0000A5   245 _P2_5	=	0x00a5
                           0000A6   246 _P2_6	=	0x00a6
                           0000A7   247 _P2_7	=	0x00a7
                           0000A8   248 _EX0	=	0x00a8
                           0000A9   249 _ET0	=	0x00a9
                           0000AA   250 _EX1	=	0x00aa
                           0000AB   251 _ET1	=	0x00ab
                           0000AC   252 _ES	=	0x00ac
                           0000AF   253 _EA	=	0x00af
                           0000B0   254 _P3_0	=	0x00b0
                           0000B1   255 _P3_1	=	0x00b1
                           0000B2   256 _P3_2	=	0x00b2
                           0000B3   257 _P3_3	=	0x00b3
                           0000B4   258 _P3_4	=	0x00b4
                           0000B5   259 _P3_5	=	0x00b5
                           0000B6   260 _P3_6	=	0x00b6
                           0000B7   261 _P3_7	=	0x00b7
                           0000B0   262 _RXD	=	0x00b0
                           0000B1   263 _TXD	=	0x00b1
                           0000B2   264 _INT0	=	0x00b2
                           0000B3   265 _INT1	=	0x00b3
                           0000B4   266 _T0	=	0x00b4
                           0000B5   267 _T1	=	0x00b5
                           0000B6   268 _WR	=	0x00b6
                           0000B7   269 _RD	=	0x00b7
                           0000B8   270 _PX0	=	0x00b8
                           0000B9   271 _PT0	=	0x00b9
                           0000BA   272 _PX1	=	0x00ba
                           0000BB   273 _PT1	=	0x00bb
                           0000BC   274 _PS	=	0x00bc
                           0000D0   275 _P	=	0x00d0
                           0000D1   276 _F1	=	0x00d1
                           0000D2   277 _OV	=	0x00d2
                           0000D3   278 _RS0	=	0x00d3
                           0000D4   279 _RS1	=	0x00d4
                           0000D5   280 _F0	=	0x00d5
                           0000D6   281 _AC	=	0x00d6
                           0000D7   282 _CY	=	0x00d7
                           0000AD   283 _ET2	=	0x00ad
                           0000BD   284 _PT2	=	0x00bd
                           0000C8   285 _T2CON_0	=	0x00c8
                           0000C9   286 _T2CON_1	=	0x00c9
                           0000CA   287 _T2CON_2	=	0x00ca
                           0000CB   288 _T2CON_3	=	0x00cb
                           0000CC   289 _T2CON_4	=	0x00cc
                           0000CD   290 _T2CON_5	=	0x00cd
                           0000CE   291 _T2CON_6	=	0x00ce
                           0000CF   292 _T2CON_7	=	0x00cf
                           0000C8   293 _CP_RL2	=	0x00c8
                           0000C9   294 _C_T2	=	0x00c9
                           0000CA   295 _TR2	=	0x00ca
                           0000CB   296 _EXEN2	=	0x00cb
                           0000CC   297 _TCLK	=	0x00cc
                           0000CD   298 _RCLK	=	0x00cd
                           0000CE   299 _EXF2	=	0x00ce
                           0000CF   300 _TF2	=	0x00cf
                                    301 ;--------------------------------------------------------
                                    302 ; overlayable register banks
                                    303 ;--------------------------------------------------------
                                    304 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        305 	.ds 8
                                    306 ;--------------------------------------------------------
                                    307 ; internal ram data
                                    308 ;--------------------------------------------------------
                                    309 	.area DSEG    (DATA)
      000000                        310 _bmRequestType::
      000000                        311 	.ds 1
      000001                        312 _bRequest::
      000001                        313 	.ds 1
      000002                        314 _wValue::
      000002                        315 	.ds 2
      000004                        316 _wIndex::
      000004                        317 	.ds 2
      000006                        318 _wLength::
      000006                        319 	.ds 2
      000008                        320 _pSendData::
      000008                        321 	.ds 3
      00000B                        322 _SendLength::
      00000B                        323 	.ds 2
      00000D                        324 _NeedZeroPacket::
      00000D                        325 	.ds 1
      00000E                        326 _Ep1InIsBusy::
      00000E                        327 	.ds 1
      00000F                        328 _ConfigValue::
      00000F                        329 	.ds 1
      000010                        330 _usb_bus_isr_ep0_out_buffer_65536_57:
      000010                        331 	.ds 16
      000020                        332 _usb_bus_isr_ep1_out_buf_65536_74:
      000020                        333 	.ds 2
                                    334 ;--------------------------------------------------------
                                    335 ; overlayable items in internal ram 
                                    336 ;--------------------------------------------------------
                                    337 ;--------------------------------------------------------
                                    338 ; indirectly addressable internal ram data
                                    339 ;--------------------------------------------------------
                                    340 	.area ISEG    (DATA)
                                    341 ;--------------------------------------------------------
                                    342 ; absolute internal ram data
                                    343 ;--------------------------------------------------------
                                    344 	.area IABS    (ABS,DATA)
                                    345 	.area IABS    (ABS,DATA)
                                    346 ;--------------------------------------------------------
                                    347 ; bit data
                                    348 ;--------------------------------------------------------
                                    349 	.area BSEG    (BIT)
                                    350 ;--------------------------------------------------------
                                    351 ; paged external ram data
                                    352 ;--------------------------------------------------------
                                    353 	.area PSEG    (PAG,XDATA)
                                    354 ;--------------------------------------------------------
                                    355 ; external ram data
                                    356 ;--------------------------------------------------------
                                    357 	.area XSEG    (XDATA)
                                    358 ;--------------------------------------------------------
                                    359 ; absolute external ram data
                                    360 ;--------------------------------------------------------
                                    361 	.area XABS    (ABS,XDATA)
                                    362 ;--------------------------------------------------------
                                    363 ; external initialized ram data
                                    364 ;--------------------------------------------------------
                                    365 	.area XISEG   (XDATA)
                                    366 	.area HOME    (CODE)
                                    367 	.area GSINIT0 (CODE)
                                    368 	.area GSINIT1 (CODE)
                                    369 	.area GSINIT2 (CODE)
                                    370 	.area GSINIT3 (CODE)
                                    371 	.area GSINIT4 (CODE)
                                    372 	.area GSINIT5 (CODE)
                                    373 	.area GSINIT  (CODE)
                                    374 	.area GSFINAL (CODE)
                                    375 	.area CSEG    (CODE)
                                    376 ;--------------------------------------------------------
                                    377 ; global & static initialisations
                                    378 ;--------------------------------------------------------
                                    379 	.area HOME    (CODE)
                                    380 	.area GSINIT  (CODE)
                                    381 	.area GSFINAL (CODE)
                                    382 	.area GSINIT  (CODE)
                                    383 ;--------------------------------------------------------
                                    384 ; Home
                                    385 ;--------------------------------------------------------
                                    386 	.area HOME    (CODE)
                                    387 	.area HOME    (CODE)
                                    388 ;--------------------------------------------------------
                                    389 ; code
                                    390 ;--------------------------------------------------------
                                    391 	.area CSEG    (CODE)
                                    392 ;------------------------------------------------------------
                                    393 ;Allocation info for local variables in function 'usb_disconnect'
                                    394 ;------------------------------------------------------------
                                    395 ;	src/usbcore.c:362: void usb_disconnect(void)
                                    396 ;	-----------------------------------------
                                    397 ;	 function usb_disconnect
                                    398 ;	-----------------------------------------
      000000                        399 _usb_disconnect:
                           000007   400 	ar7 = 0x07
                           000006   401 	ar6 = 0x06
                           000005   402 	ar5 = 0x05
                           000004   403 	ar4 = 0x04
                           000003   404 	ar3 = 0x03
                           000002   405 	ar2 = 0x02
                           000001   406 	ar1 = 0x01
                           000000   407 	ar0 = 0x00
                                    408 ;	src/usbcore.c:365: Prints("usb disconnect\n");
      000000 90r01r62         [24]  409 	mov	dptr,#___str_0
      000003 75 F0 80         [24]  410 	mov	b,#0x80
      000006 12r00r00         [24]  411 	lcall	_Prints
                                    412 ;	src/usbcore.c:367: D12_write_command(D12_SET_MODE);    /* set mode */
      000009 75 82 F3         [24]  413 	mov	dpl,#0xf3
      00000C 12r00r00         [24]  414 	lcall	_D12_write_command
                                    415 ;	src/usbcore.c:368: D12_write_byte(0x06);               /* byte1, pull-up R disconnect, indicate usb disconnet */
      00000F 75 82 06         [24]  416 	mov	dpl,#0x06
      000012 12r00r00         [24]  417 	lcall	_D12_write_byte
                                    418 ;	src/usbcore.c:369: D12_write_byte(0x47);               /* byte2 */
      000015 75 82 47         [24]  419 	mov	dpl,#0x47
      000018 12r00r00         [24]  420 	lcall	_D12_write_byte
                                    421 ;	src/usbcore.c:370: delay_ms(1000);
      00001B 90 03 E8         [24]  422 	mov	dptr,#0x03e8
                                    423 ;	src/usbcore.c:371: }
      00001E 02r00r00         [24]  424 	ljmp	_delay_ms
                                    425 ;------------------------------------------------------------
                                    426 ;Allocation info for local variables in function 'usb_connect'
                                    427 ;------------------------------------------------------------
                                    428 ;	src/usbcore.c:373: void usb_connect(void)
                                    429 ;	-----------------------------------------
                                    430 ;	 function usb_connect
                                    431 ;	-----------------------------------------
      000021                        432 _usb_connect:
                                    433 ;	src/usbcore.c:376: Prints("usb connect\n");
      000021 90r01r72         [24]  434 	mov	dptr,#___str_1
      000024 75 F0 80         [24]  435 	mov	b,#0x80
      000027 12r00r00         [24]  436 	lcall	_Prints
                                    437 ;	src/usbcore.c:378: D12_write_command(D12_SET_MODE);    /* set mode */
      00002A 75 82 F3         [24]  438 	mov	dpl,#0xf3
      00002D 12r00r00         [24]  439 	lcall	_D12_write_command
                                    440 ;	src/usbcore.c:379: D12_write_byte(0x16);               /* byte1, pull-up R connect, indicate usb connet */
      000030 75 82 16         [24]  441 	mov	dpl,#0x16
      000033 12r00r00         [24]  442 	lcall	_D12_write_byte
                                    443 ;	src/usbcore.c:380: D12_write_byte(0x47);               /* byte2 */
      000036 75 82 47         [24]  444 	mov	dpl,#0x47
                                    445 ;	src/usbcore.c:381: }
      000039 02r00r00         [24]  446 	ljmp	_D12_write_byte
                                    447 ;------------------------------------------------------------
                                    448 ;Allocation info for local variables in function 'usb_bus_isr_suspend'
                                    449 ;------------------------------------------------------------
                                    450 ;	src/usbcore.c:383: void usb_bus_isr_suspend()
                                    451 ;	-----------------------------------------
                                    452 ;	 function usb_bus_isr_suspend
                                    453 ;	-----------------------------------------
      00003C                        454 _usb_bus_isr_suspend:
                                    455 ;	src/usbcore.c:386: Prints("usb core isr suspend\n");
      00003C 90r01r7F         [24]  456 	mov	dptr,#___str_2
      00003F 75 F0 80         [24]  457 	mov	b,#0x80
                                    458 ;	src/usbcore.c:388: }
      000042 02r00r00         [24]  459 	ljmp	_Prints
                                    460 ;------------------------------------------------------------
                                    461 ;Allocation info for local variables in function 'usb_bus_isr_reset'
                                    462 ;------------------------------------------------------------
                                    463 ;	src/usbcore.c:390: void usb_bus_isr_reset()
                                    464 ;	-----------------------------------------
                                    465 ;	 function usb_bus_isr_reset
                                    466 ;	-----------------------------------------
      000045                        467 _usb_bus_isr_reset:
                                    468 ;	src/usbcore.c:393: Prints("usb core isr reset\n");
      000045 90r01r95         [24]  469 	mov	dptr,#___str_3
      000048 75 F0 80         [24]  470 	mov	b,#0x80
      00004B 12r00r00         [24]  471 	lcall	_Prints
                                    472 ;	src/usbcore.c:395: Ep1InIsBusy = 0;
      00004E 75*0E 00         [24]  473 	mov	_Ep1InIsBusy,#0x00
                                    474 ;	src/usbcore.c:396: }
      000051 22               [24]  475 	ret
                                    476 ;------------------------------------------------------------
                                    477 ;Allocation info for local variables in function 'usb_bus_isr_ep0_out'
                                    478 ;------------------------------------------------------------
                                    479 ;buffer                    Allocated with name '_usb_bus_isr_ep0_out_buffer_65536_57'
                                    480 ;------------------------------------------------------------
                                    481 ;	src/usbcore.c:409: void usb_bus_isr_ep0_out()
                                    482 ;	-----------------------------------------
                                    483 ;	 function usb_bus_isr_ep0_out
                                    484 ;	-----------------------------------------
      000052                        485 _usb_bus_isr_ep0_out:
                                    486 ;	src/usbcore.c:413: Prints("usb isr ep0 out\n");
      000052 90r01rA9         [24]  487 	mov	dptr,#___str_4
      000055 75 F0 80         [24]  488 	mov	b,#0x80
      000058 12r00r00         [24]  489 	lcall	_Prints
                                    490 ;	src/usbcore.c:415: memset(buffer, 0, sizeof(buffer));
      00005B 75*00 00         [24]  491 	mov	_memset_PARM_2,#0x00
      00005E 75*00 10         [24]  492 	mov	_memset_PARM_3,#0x10
      000061 75*01 00         [24]  493 	mov	(_memset_PARM_3 + 1),#0x00
      000064 90r00r10         [24]  494 	mov	dptr,#_usb_bus_isr_ep0_out_buffer_65536_57
      000067 75 F0 40         [24]  495 	mov	b,#0x40
      00006A 12r00r00         [24]  496 	lcall	_memset
                                    497 ;	src/usbcore.c:418: if (D12_read_endpoint_last_status(0) & 0x20) {
      00006D 75 82 00         [24]  498 	mov	dpl,#0x00
      000070 12r00r00         [24]  499 	lcall	_D12_read_endpoint_last_status
      000073 E5 82            [12]  500 	mov	a,dpl
      000075 20 E5 03         [24]  501 	jb	acc.5,00299$
      000078 02r04rA9         [24]  502 	ljmp	00163$
      00007B                        503 00299$:
                                    504 ;	src/usbcore.c:419: D12_read_endpoint_buffer(0, 16, buffer);
      00007B 75*00r10         [24]  505 	mov	_D12_read_endpoint_buffer_PARM_3,#_usb_bus_isr_ep0_out_buffer_65536_57
      00007E 75*01 00         [24]  506 	mov	(_D12_read_endpoint_buffer_PARM_3 + 1),#0x00
      000081 75*02 40         [24]  507 	mov	(_D12_read_endpoint_buffer_PARM_3 + 2),#0x40
      000084 75*00 10         [24]  508 	mov	_D12_read_endpoint_buffer_PARM_2,#0x10
      000087 75 82 00         [24]  509 	mov	dpl,#0x00
      00008A 12r00r00         [24]  510 	lcall	_D12_read_endpoint_buffer
                                    511 ;	src/usbcore.c:420: D12_Acknowlwdge_setup();
      00008D 12r00r00         [24]  512 	lcall	_D12_Acknowlwdge_setup
                                    513 ;	src/usbcore.c:421: D12_clear_buffer();
      000090 12r00r00         [24]  514 	lcall	_D12_clear_buffer
                                    515 ;	src/usbcore.c:423: bmRequestType = buffer[0];
      000093 85*10*00         [24]  516 	mov	_bmRequestType,_usb_bus_isr_ep0_out_buffer_65536_57
                                    517 ;	src/usbcore.c:424: bRequest = buffer[1];
      000096 85*11*01         [24]  518 	mov	_bRequest,(_usb_bus_isr_ep0_out_buffer_65536_57 + 0x0001)
                                    519 ;	src/usbcore.c:425: wValue = buffer[2] | (((uint16)buffer[3]) << 8);
      000099 AF*13            [24]  520 	mov	r7,(_usb_bus_isr_ep0_out_buffer_65536_57 + 0x0003)
      00009B 7E 00            [12]  521 	mov	r6,#0x00
      00009D AC*12            [24]  522 	mov	r4,(_usb_bus_isr_ep0_out_buffer_65536_57 + 0x0002)
      00009F 7D 00            [12]  523 	mov	r5,#0x00
      0000A1 EE               [12]  524 	mov	a,r6
      0000A2 4C               [12]  525 	orl	a,r4
      0000A3 F5*02            [12]  526 	mov	_wValue,a
      0000A5 EF               [12]  527 	mov	a,r7
      0000A6 4D               [12]  528 	orl	a,r5
      0000A7 F5*03            [12]  529 	mov	(_wValue + 1),a
                                    530 ;	src/usbcore.c:426: wIndex = buffer[4] | (((uint16)buffer[5]) << 8);
      0000A9 AF*15            [24]  531 	mov	r7,(_usb_bus_isr_ep0_out_buffer_65536_57 + 0x0005)
      0000AB 7E 00            [12]  532 	mov	r6,#0x00
      0000AD AC*14            [24]  533 	mov	r4,(_usb_bus_isr_ep0_out_buffer_65536_57 + 0x0004)
      0000AF 7D 00            [12]  534 	mov	r5,#0x00
      0000B1 EE               [12]  535 	mov	a,r6
      0000B2 4C               [12]  536 	orl	a,r4
      0000B3 F5*04            [12]  537 	mov	_wIndex,a
      0000B5 EF               [12]  538 	mov	a,r7
      0000B6 4D               [12]  539 	orl	a,r5
      0000B7 F5*05            [12]  540 	mov	(_wIndex + 1),a
                                    541 ;	src/usbcore.c:427: wLength = buffer[6] | (((uint16)buffer[7]) << 8);
      0000B9 AF*17            [24]  542 	mov	r7,(_usb_bus_isr_ep0_out_buffer_65536_57 + 0x0007)
      0000BB 7E 00            [12]  543 	mov	r6,#0x00
      0000BD AC*16            [24]  544 	mov	r4,(_usb_bus_isr_ep0_out_buffer_65536_57 + 0x0006)
      0000BF 7D 00            [12]  545 	mov	r5,#0x00
      0000C1 EE               [12]  546 	mov	a,r6
      0000C2 4C               [12]  547 	orl	a,r4
      0000C3 F5*06            [12]  548 	mov	_wLength,a
      0000C5 EF               [12]  549 	mov	a,r7
      0000C6 4D               [12]  550 	orl	a,r5
      0000C7 F5*07            [12]  551 	mov	(_wLength + 1),a
                                    552 ;	src/usbcore.c:429: if ((bmRequestType & 0x80) == 0x80) {   /* input request */
      0000C9 AE*00            [24]  553 	mov	r6,_bmRequestType
      0000CB 53 06 80         [24]  554 	anl	ar6,#0x80
      0000CE 7F 00            [12]  555 	mov	r7,#0x00
      0000D0 BE 80 05         [24]  556 	cjne	r6,#0x80,00300$
      0000D3 BF 00 02         [24]  557 	cjne	r7,#0x00,00300$
      0000D6 80 03            [24]  558 	sjmp	00301$
      0000D8                        559 00300$:
      0000D8 02r03r9C         [24]  560 	ljmp	00160$
      0000DB                        561 00301$:
                                    562 ;	src/usbcore.c:432: switch ((bmRequestType >> 5) & 0x3) {
      0000DB E5*00            [12]  563 	mov	a,_bmRequestType
      0000DD C4               [12]  564 	swap	a
      0000DE 03               [12]  565 	rr	a
      0000DF 54 07            [12]  566 	anl	a,#0x07
      0000E1 FF               [12]  567 	mov	r7,a
      0000E2 53 07 03         [24]  568 	anl	ar7,#0x03
      0000E5 7E 00            [12]  569 	mov	r6,#0x00
      0000E7 BF 00 05         [24]  570 	cjne	r7,#0x00,00302$
      0000EA BE 00 02         [24]  571 	cjne	r6,#0x00,00302$
      0000ED 80 15            [24]  572 	sjmp	00101$
      0000EF                        573 00302$:
      0000EF BF 01 06         [24]  574 	cjne	r7,#0x01,00303$
      0000F2 BE 00 03         [24]  575 	cjne	r6,#0x00,00303$
      0000F5 02r03r81         [24]  576 	ljmp	00139$
      0000F8                        577 00303$:
      0000F8 BF 02 06         [24]  578 	cjne	r7,#0x02,00304$
      0000FB BE 00 03         [24]  579 	cjne	r6,#0x00,00304$
      0000FE 02r03r8A         [24]  580 	ljmp	00140$
      000101                        581 00304$:
      000101 02r03r93         [24]  582 	ljmp	00141$
                                    583 ;	src/usbcore.c:433: case 0:                             /* stander request */
      000104                        584 00101$:
                                    585 ;	src/usbcore.c:435: Prints("USB stand input request: ");
      000104 90r01rBA         [24]  586 	mov	dptr,#___str_5
      000107 75 F0 80         [24]  587 	mov	b,#0x80
      00010A 12r00r00         [24]  588 	lcall	_Prints
                                    589 ;	src/usbcore.c:437: switch (bRequest) {
      00010D E4               [12]  590 	clr	a
      00010E B5*01 03         [24]  591 	cjne	a,_bRequest,00305$
      000111 02r03r66         [24]  592 	ljmp	00135$
      000114                        593 00305$:
      000114 74 06            [12]  594 	mov	a,#0x06
      000116 B5*01 02         [24]  595 	cjne	a,_bRequest,00306$
      000119 80 23            [24]  596 	sjmp	00103$
      00011B                        597 00306$:
      00011B 74 08            [12]  598 	mov	a,#0x08
      00011D B5*01 02         [24]  599 	cjne	a,_bRequest,00307$
      000120 80 13            [24]  600 	sjmp	00102$
      000122                        601 00307$:
      000122 74 0A            [12]  602 	mov	a,#0x0a
      000124 B5*01 03         [24]  603 	cjne	a,_bRequest,00308$
      000127 02r03r5D         [24]  604 	ljmp	00134$
      00012A                        605 00308$:
      00012A 74 0C            [12]  606 	mov	a,#0x0c
      00012C B5*01 03         [24]  607 	cjne	a,_bRequest,00309$
      00012F 02r03r6F         [24]  608 	ljmp	00136$
      000132                        609 00309$:
      000132 02r03r78         [24]  610 	ljmp	00137$
                                    611 ;	src/usbcore.c:438: case GET_CONFIGURATION:         /* get configuration */
      000135                        612 00102$:
                                    613 ;	src/usbcore.c:440: Prints("Get configuration\n");
      000135 90r01rD4         [24]  614 	mov	dptr,#___str_6
      000138 75 F0 80         [24]  615 	mov	b,#0x80
                                    616 ;	src/usbcore.c:442: break;
      00013B 02r00r00         [24]  617 	ljmp	_Prints
                                    618 ;	src/usbcore.c:443: case GET_DESCRIPTOR:
      00013E                        619 00103$:
                                    620 ;	src/usbcore.c:445: Prints("Get descriptor -- ");
      00013E 90r01rE7         [24]  621 	mov	dptr,#___str_7
      000141 75 F0 80         [24]  622 	mov	b,#0x80
      000144 12r00r00         [24]  623 	lcall	_Prints
                                    624 ;	src/usbcore.c:449: switch ((wValue >> 8) & 0xFF) {
      000147 AF*03            [24]  625 	mov	r7,(_wValue + 1)
      000149 BF 01 02         [24]  626 	cjne	r7,#0x01,00310$
      00014C 80 14            [24]  627 	sjmp	00104$
      00014E                        628 00310$:
      00014E BF 02 02         [24]  629 	cjne	r7,#0x02,00311$
      000151 80 61            [24]  630 	sjmp	00110$
      000153                        631 00311$:
      000153 BF 03 03         [24]  632 	cjne	r7,#0x03,00312$
      000156 02r02r15         [24]  633 	ljmp	00116$
      000159                        634 00312$:
      000159 BF 22 03         [24]  635 	cjne	r7,#0x22,00313$
      00015C 02r02rFE         [24]  636 	ljmp	00127$
      00015F                        637 00313$:
      00015F 02r03r45         [24]  638 	ljmp	00132$
                                    639 ;	src/usbcore.c:450: case DEVICE_DESCRIPTOR:
      000162                        640 00104$:
                                    641 ;	src/usbcore.c:452: Prints("device descriptor\n");
      000162 90r01rFA         [24]  642 	mov	dptr,#___str_8
      000165 75 F0 80         [24]  643 	mov	b,#0x80
      000168 12r00r00         [24]  644 	lcall	_Prints
                                    645 ;	src/usbcore.c:454: pSendData = (uint8 *)DeviceDescriptor;
      00016B 75*08r00         [24]  646 	mov	_pSendData,#_DeviceDescriptor
      00016E 75*09s00         [24]  647 	mov	(_pSendData + 1),#(_DeviceDescriptor >> 8)
      000171 75*0A 80         [24]  648 	mov	(_pSendData + 2),#0x80
                                    649 ;	src/usbcore.c:455: if (wLength > DeviceDescriptor[0]) {
      000174 90r00r00         [24]  650 	mov	dptr,#_DeviceDescriptor
      000177 E4               [12]  651 	clr	a
      000178 93               [24]  652 	movc	a,@a+dptr
      000179 FE               [12]  653 	mov	r6,a
      00017A 7F 00            [12]  654 	mov	r7,#0x00
      00017C C3               [12]  655 	clr	c
      00017D EE               [12]  656 	mov	a,r6
      00017E 95*06            [12]  657 	subb	a,_wLength
      000180 EF               [12]  658 	mov	a,r7
      000181 95*07            [12]  659 	subb	a,(_wLength + 1)
      000183 50 26            [24]  660 	jnc	00108$
                                    661 ;	src/usbcore.c:456: SendLength = DeviceDescriptor[0];
      000185 8E*0B            [24]  662 	mov	_SendLength,r6
      000187 8F*0C            [24]  663 	mov	(_SendLength + 1),r7
                                    664 ;	src/usbcore.c:457: if (SendLength % DeviceDescriptor[7] == 0)
      000189 90r00r07         [24]  665 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      00018C E4               [12]  666 	clr	a
      00018D 93               [24]  667 	movc	a,@a+dptr
      00018E FF               [12]  668 	mov	r7,a
      00018F 8F*00            [24]  669 	mov	__moduint_PARM_2,r7
      000191 75*01 00         [24]  670 	mov	(__moduint_PARM_2 + 1),#0x00
      000194 85*0B 82         [24]  671 	mov	dpl,_SendLength
      000197 85*0C 83         [24]  672 	mov	dph,(_SendLength + 1)
      00019A 12r00r00         [24]  673 	lcall	__moduint
      00019D E5 82            [12]  674 	mov	a,dpl
      00019F 85 83 F0         [24]  675 	mov	b,dph
      0001A2 45 F0            [12]  676 	orl	a,b
      0001A4 70 0B            [24]  677 	jnz	00109$
                                    678 ;	src/usbcore.c:458: NeedZeroPacket = 1;
      0001A6 75*0D 01         [24]  679 	mov	_NeedZeroPacket,#0x01
      0001A9 80 06            [24]  680 	sjmp	00109$
      0001AB                        681 00108$:
                                    682 ;	src/usbcore.c:460: SendLength = wLength;
      0001AB 85*06*0B         [24]  683 	mov	_SendLength,_wLength
      0001AE 85*07*0C         [24]  684 	mov	(_SendLength + 1),(_wLength + 1)
      0001B1                        685 00109$:
                                    686 ;	src/usbcore.c:462: usb_bus_ep0_send_data();
                                    687 ;	src/usbcore.c:463: break;
      0001B1 02r05r33         [24]  688 	ljmp	_usb_bus_ep0_send_data
                                    689 ;	src/usbcore.c:464: case CONFIGURATION_DESCRIPTOR:
      0001B4                        690 00110$:
                                    691 ;	src/usbcore.c:466: Prints("configuration descriptor\n");
      0001B4 90r02r0D         [24]  692 	mov	dptr,#___str_9
      0001B7 75 F0 80         [24]  693 	mov	b,#0x80
      0001BA 12r00r00         [24]  694 	lcall	_Prints
                                    695 ;	src/usbcore.c:468: pSendData = (uint8 *)ConfigurationDescriptor;
      0001BD 75*08r12         [24]  696 	mov	_pSendData,#_ConfigurationDescriptor
      0001C0 75*09s00         [24]  697 	mov	(_pSendData + 1),#(_ConfigurationDescriptor >> 8)
      0001C3 75*0A 80         [24]  698 	mov	(_pSendData + 2),#0x80
                                    699 ;	src/usbcore.c:469: SendLength = ConfigurationDescriptor[3] * 256 + ConfigurationDescriptor[2];
      0001C6 90r00r15         [24]  700 	mov	dptr,#(_ConfigurationDescriptor + 0x0003)
      0001C9 E4               [12]  701 	clr	a
      0001CA 93               [24]  702 	movc	a,@a+dptr
      0001CB FE               [12]  703 	mov	r6,a
      0001CC 7F 00            [12]  704 	mov	r7,#0x00
      0001CE 90r00r14         [24]  705 	mov	dptr,#(_ConfigurationDescriptor + 0x0002)
      0001D1 E4               [12]  706 	clr	a
      0001D2 93               [24]  707 	movc	a,@a+dptr
      0001D3 FD               [12]  708 	mov	r5,a
      0001D4 7C 00            [12]  709 	mov	r4,#0x00
      0001D6 2F               [12]  710 	add	a,r7
      0001D7 FF               [12]  711 	mov	r7,a
      0001D8 EC               [12]  712 	mov	a,r4
      0001D9 3E               [12]  713 	addc	a,r6
      0001DA FE               [12]  714 	mov	r6,a
      0001DB 8F*0B            [24]  715 	mov	_SendLength,r7
      0001DD 8E*0C            [24]  716 	mov	(_SendLength + 1),r6
                                    717 ;	src/usbcore.c:470: if (wLength > SendLength) {
      0001DF C3               [12]  718 	clr	c
      0001E0 E5*0B            [12]  719 	mov	a,_SendLength
      0001E2 95*06            [12]  720 	subb	a,_wLength
      0001E4 E5*0C            [12]  721 	mov	a,(_SendLength + 1)
      0001E6 95*07            [12]  722 	subb	a,(_wLength + 1)
      0001E8 50 22            [24]  723 	jnc	00114$
                                    724 ;	src/usbcore.c:471: if (SendLength % DeviceDescriptor[7] == 0)
      0001EA 90r00r07         [24]  725 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      0001ED E4               [12]  726 	clr	a
      0001EE 93               [24]  727 	movc	a,@a+dptr
      0001EF FF               [12]  728 	mov	r7,a
      0001F0 8F*00            [24]  729 	mov	__moduint_PARM_2,r7
      0001F2 75*01 00         [24]  730 	mov	(__moduint_PARM_2 + 1),#0x00
      0001F5 85*0B 82         [24]  731 	mov	dpl,_SendLength
      0001F8 85*0C 83         [24]  732 	mov	dph,(_SendLength + 1)
      0001FB 12r00r00         [24]  733 	lcall	__moduint
      0001FE E5 82            [12]  734 	mov	a,dpl
      000200 85 83 F0         [24]  735 	mov	b,dph
      000203 45 F0            [12]  736 	orl	a,b
      000205 70 0B            [24]  737 	jnz	00115$
                                    738 ;	src/usbcore.c:472: NeedZeroPacket = 1;
      000207 75*0D 01         [24]  739 	mov	_NeedZeroPacket,#0x01
      00020A 80 06            [24]  740 	sjmp	00115$
      00020C                        741 00114$:
                                    742 ;	src/usbcore.c:474: SendLength = wLength;
      00020C 85*06*0B         [24]  743 	mov	_SendLength,_wLength
      00020F 85*07*0C         [24]  744 	mov	(_SendLength + 1),(_wLength + 1)
      000212                        745 00115$:
                                    746 ;	src/usbcore.c:476: usb_bus_ep0_send_data();
                                    747 ;	src/usbcore.c:477: break;
      000212 02r05r33         [24]  748 	ljmp	_usb_bus_ep0_send_data
                                    749 ;	src/usbcore.c:478: case STRING_DESCRIPTOR:
      000215                        750 00116$:
                                    751 ;	src/usbcore.c:480: Prints("string descriptor -- ");
      000215 90r02r27         [24]  752 	mov	dptr,#___str_10
      000218 75 F0 80         [24]  753 	mov	b,#0x80
      00021B 12r00r00         [24]  754 	lcall	_Prints
                                    755 ;	src/usbcore.c:482: switch (wValue & 0xFF) {
      00021E AE*02            [24]  756 	mov	r6,_wValue
      000220 7F 00            [12]  757 	mov	r7,#0x00
      000222 C3               [12]  758 	clr	c
      000223 74 03            [12]  759 	mov	a,#0x03
      000225 9E               [12]  760 	subb	a,r6
      000226 E4               [12]  761 	clr	a
      000227 9F               [12]  762 	subb	a,r7
      000228 50 03            [24]  763 	jnc	00318$
      00022A 02r02rB7         [24]  764 	ljmp	00121$
      00022D                        765 00318$:
      00022D EE               [12]  766 	mov	a,r6
      00022E 2E               [12]  767 	add	a,r6
                                    768 ;	src/usbcore.c:483: case 0:         /* get language ID */
      00022F 90r02r33         [24]  769 	mov	dptr,#00319$
      000232 73               [24]  770 	jmp	@a+dptr
      000233                        771 00319$:
      000233 80 06            [24]  772 	sjmp	00117$
      000235 80 23            [24]  773 	sjmp	00118$
      000237 80 40            [24]  774 	sjmp	00119$
      000239 80 5D            [24]  775 	sjmp	00120$
      00023B                        776 00117$:
                                    777 ;	src/usbcore.c:485: Prints("language ID\n");
      00023B 90r02r3D         [24]  778 	mov	dptr,#___str_11
      00023E 75 F0 80         [24]  779 	mov	b,#0x80
      000241 12r00r00         [24]  780 	lcall	_Prints
                                    781 ;	src/usbcore.c:487: pSendData = (uint8 *)languageId;
      000244 75*08r3B         [24]  782 	mov	_pSendData,#_languageId
      000247 75*09s00         [24]  783 	mov	(_pSendData + 1),#(_languageId >> 8)
      00024A 75*0A 80         [24]  784 	mov	(_pSendData + 2),#0x80
                                    785 ;	src/usbcore.c:488: SendLength = languageId[0];
      00024D 90r00r3B         [24]  786 	mov	dptr,#_languageId
      000250 E4               [12]  787 	clr	a
      000251 93               [24]  788 	movc	a,@a+dptr
      000252 FF               [12]  789 	mov	r7,a
      000253 8F*0B            [24]  790 	mov	_SendLength,r7
      000255 75*0C 00         [24]  791 	mov	(_SendLength + 1),#0x00
                                    792 ;	src/usbcore.c:489: break;
                                    793 ;	src/usbcore.c:490: case 1:         /* Vendor string id is 1  */
      000258 80 6E            [24]  794 	sjmp	00122$
      00025A                        795 00118$:
                                    796 ;	src/usbcore.c:492: Prints("manufacture string\n");
      00025A 90r02r4A         [24]  797 	mov	dptr,#___str_12
      00025D 75 F0 80         [24]  798 	mov	b,#0x80
      000260 12r00r00         [24]  799 	lcall	_Prints
                                    800 ;	src/usbcore.c:494: pSendData = (uint8 *)ManufacturerStringDescriptor;
      000263 75*08r3F         [24]  801 	mov	_pSendData,#_ManufacturerStringDescriptor
      000266 75*09s00         [24]  802 	mov	(_pSendData + 1),#(_ManufacturerStringDescriptor >> 8)
      000269 75*0A 80         [24]  803 	mov	(_pSendData + 2),#0x80
                                    804 ;	src/usbcore.c:495: SendLength = ManufacturerStringDescriptor[0];
      00026C 90r00r3F         [24]  805 	mov	dptr,#_ManufacturerStringDescriptor
      00026F E4               [12]  806 	clr	a
      000270 93               [24]  807 	movc	a,@a+dptr
      000271 FF               [12]  808 	mov	r7,a
      000272 8F*0B            [24]  809 	mov	_SendLength,r7
      000274 75*0C 00         [24]  810 	mov	(_SendLength + 1),#0x00
                                    811 ;	src/usbcore.c:496: break;
                                    812 ;	src/usbcore.c:497: case 2:         /* Vendor string id is 1  */
      000277 80 4F            [24]  813 	sjmp	00122$
      000279                        814 00119$:
                                    815 ;	src/usbcore.c:499: Prints("product string\n");
      000279 90r02r5E         [24]  816 	mov	dptr,#___str_13
      00027C 75 F0 80         [24]  817 	mov	b,#0x80
      00027F 12r00r00         [24]  818 	lcall	_Prints
                                    819 ;	src/usbcore.c:501: pSendData = (uint8 *)ProductStringDescriptor;
      000282 75*08r9D         [24]  820 	mov	_pSendData,#_ProductStringDescriptor
      000285 75*09s00         [24]  821 	mov	(_pSendData + 1),#(_ProductStringDescriptor >> 8)
      000288 75*0A 80         [24]  822 	mov	(_pSendData + 2),#0x80
                                    823 ;	src/usbcore.c:502: SendLength = ProductStringDescriptor[0];
      00028B 90r00r9D         [24]  824 	mov	dptr,#_ProductStringDescriptor
      00028E E4               [12]  825 	clr	a
      00028F 93               [24]  826 	movc	a,@a+dptr
      000290 FF               [12]  827 	mov	r7,a
      000291 8F*0B            [24]  828 	mov	_SendLength,r7
      000293 75*0C 00         [24]  829 	mov	(_SendLength + 1),#0x00
                                    830 ;	src/usbcore.c:503: break;
                                    831 ;	src/usbcore.c:504: case 3:         /* Vendor string id is 1  */
      000296 80 30            [24]  832 	sjmp	00122$
      000298                        833 00120$:
                                    834 ;	src/usbcore.c:506: Prints("serial string\n");
      000298 90r02r6E         [24]  835 	mov	dptr,#___str_14
      00029B 75 F0 80         [24]  836 	mov	b,#0x80
      00029E 12r00r00         [24]  837 	lcall	_Prints
                                    838 ;	src/usbcore.c:508: pSendData = (uint8 *)SerialNumberStringDescriptor;
      0002A1 75*08rD3         [24]  839 	mov	_pSendData,#_SerialNumberStringDescriptor
      0002A4 75*09s00         [24]  840 	mov	(_pSendData + 1),#(_SerialNumberStringDescriptor >> 8)
      0002A7 75*0A 80         [24]  841 	mov	(_pSendData + 2),#0x80
                                    842 ;	src/usbcore.c:509: SendLength = SerialNumberStringDescriptor[0];
      0002AA 90r00rD3         [24]  843 	mov	dptr,#_SerialNumberStringDescriptor
      0002AD E4               [12]  844 	clr	a
      0002AE 93               [24]  845 	movc	a,@a+dptr
      0002AF FF               [12]  846 	mov	r7,a
      0002B0 8F*0B            [24]  847 	mov	_SendLength,r7
      0002B2 75*0C 00         [24]  848 	mov	(_SendLength + 1),#0x00
                                    849 ;	src/usbcore.c:510: break;
                                    850 ;	src/usbcore.c:511: default:         /* Vendor string id is 1  */
      0002B5 80 11            [24]  851 	sjmp	00122$
      0002B7                        852 00121$:
                                    853 ;	src/usbcore.c:513: Prints("unknown string\n");
      0002B7 90r02r7D         [24]  854 	mov	dptr,#___str_15
      0002BA 75 F0 80         [24]  855 	mov	b,#0x80
      0002BD 12r00r00         [24]  856 	lcall	_Prints
                                    857 ;	src/usbcore.c:515: SendLength = 0;
      0002C0 E4               [12]  858 	clr	a
      0002C1 F5*0B            [12]  859 	mov	_SendLength,a
      0002C3 F5*0C            [12]  860 	mov	(_SendLength + 1),a
                                    861 ;	src/usbcore.c:516: NeedZeroPacket = 1;
      0002C5 75*0D 01         [24]  862 	mov	_NeedZeroPacket,#0x01
                                    863 ;	src/usbcore.c:518: }
      0002C8                        864 00122$:
                                    865 ;	src/usbcore.c:519: if ((wLength > SendLength) &&
      0002C8 C3               [12]  866 	clr	c
      0002C9 E5*0B            [12]  867 	mov	a,_SendLength
      0002CB 95*06            [12]  868 	subb	a,_wLength
      0002CD E5*0C            [12]  869 	mov	a,(_SendLength + 1)
      0002CF 95*07            [12]  870 	subb	a,(_wLength + 1)
      0002D1 50 22            [24]  871 	jnc	00124$
                                    872 ;	src/usbcore.c:520: (SendLength % DeviceDescriptor[7] == 0))
      0002D3 90r00r07         [24]  873 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      0002D6 E4               [12]  874 	clr	a
      0002D7 93               [24]  875 	movc	a,@a+dptr
      0002D8 FF               [12]  876 	mov	r7,a
      0002D9 8F*00            [24]  877 	mov	__moduint_PARM_2,r7
      0002DB 75*01 00         [24]  878 	mov	(__moduint_PARM_2 + 1),#0x00
      0002DE 85*0B 82         [24]  879 	mov	dpl,_SendLength
      0002E1 85*0C 83         [24]  880 	mov	dph,(_SendLength + 1)
      0002E4 12r00r00         [24]  881 	lcall	__moduint
      0002E7 E5 82            [12]  882 	mov	a,dpl
      0002E9 85 83 F0         [24]  883 	mov	b,dph
      0002EC 45 F0            [12]  884 	orl	a,b
      0002EE 70 05            [24]  885 	jnz	00124$
                                    886 ;	src/usbcore.c:521: NeedZeroPacket = 1;
      0002F0 75*0D 01         [24]  887 	mov	_NeedZeroPacket,#0x01
      0002F3 80 06            [24]  888 	sjmp	00125$
      0002F5                        889 00124$:
                                    890 ;	src/usbcore.c:523: SendLength = wLength;
      0002F5 85*06*0B         [24]  891 	mov	_SendLength,_wLength
      0002F8 85*07*0C         [24]  892 	mov	(_SendLength + 1),(_wLength + 1)
      0002FB                        893 00125$:
                                    894 ;	src/usbcore.c:524: usb_bus_ep0_send_data(); 
                                    895 ;	src/usbcore.c:525: break;
      0002FB 02r05r33         [24]  896 	ljmp	_usb_bus_ep0_send_data
                                    897 ;	src/usbcore.c:526: case REPORT_DESCRIPTOR:
      0002FE                        898 00127$:
                                    899 ;	src/usbcore.c:528: Prints("Report descriptor: ");
      0002FE 90r02r8D         [24]  900 	mov	dptr,#___str_16
      000301 75 F0 80         [24]  901 	mov	b,#0x80
      000304 12r00r00         [24]  902 	lcall	_Prints
                                    903 ;	src/usbcore.c:530: pSendData = (uint8 *)ReportDescriptor;
      000307 75*08rE9         [24]  904 	mov	_pSendData,#_ReportDescriptor
      00030A 75*09s00         [24]  905 	mov	(_pSendData + 1),#(_ReportDescriptor >> 8)
      00030D 75*0A 80         [24]  906 	mov	(_pSendData + 2),#0x80
                                    907 ;	src/usbcore.c:531: SendLength = sizeof(ReportDescriptor);
      000310 75*0B 79         [24]  908 	mov	_SendLength,#0x79
      000313 75*0C 00         [24]  909 	mov	(_SendLength + 1),#0x00
                                    910 ;	src/usbcore.c:532: if ((wLength > SendLength) && (SendLength % DeviceDescriptor[7] == 0))
      000316 C3               [12]  911 	clr	c
      000317 74 79            [12]  912 	mov	a,#0x79
      000319 95*06            [12]  913 	subb	a,_wLength
      00031B E4               [12]  914 	clr	a
      00031C 95*07            [12]  915 	subb	a,(_wLength + 1)
      00031E 50 1F            [24]  916 	jnc	00129$
      000320 90r00r07         [24]  917 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      000323 E4               [12]  918 	clr	a
      000324 93               [24]  919 	movc	a,@a+dptr
      000325 FF               [12]  920 	mov	r7,a
      000326 8F*00            [24]  921 	mov	__moduint_PARM_2,r7
      000328 75*01 00         [24]  922 	mov	(__moduint_PARM_2 + 1),#0x00
      00032B 90 00 79         [24]  923 	mov	dptr,#0x0079
      00032E 12r00r00         [24]  924 	lcall	__moduint
      000331 E5 82            [12]  925 	mov	a,dpl
      000333 85 83 F0         [24]  926 	mov	b,dph
      000336 45 F0            [12]  927 	orl	a,b
      000338 70 05            [24]  928 	jnz	00129$
                                    929 ;	src/usbcore.c:533: NeedZeroPacket = 1;
      00033A 75*0D 01         [24]  930 	mov	_NeedZeroPacket,#0x01
      00033D 80 03            [24]  931 	sjmp	00130$
      00033F                        932 00129$:
                                    933 ;	src/usbcore.c:535: NeedZeroPacket = 0;
      00033F 75*0D 00         [24]  934 	mov	_NeedZeroPacket,#0x00
      000342                        935 00130$:
                                    936 ;	src/usbcore.c:536: usb_bus_ep0_send_data();
                                    937 ;	src/usbcore.c:537: break;
      000342 02r05r33         [24]  938 	ljmp	_usb_bus_ep0_send_data
                                    939 ;	src/usbcore.c:538: default:
      000345                        940 00132$:
                                    941 ;	src/usbcore.c:540: Prints("other descriptor: ");
      000345 90r02rA1         [24]  942 	mov	dptr,#___str_17
      000348 75 F0 80         [24]  943 	mov	b,#0x80
      00034B 12r00r00         [24]  944 	lcall	_Prints
                                    945 ;	src/usbcore.c:542: print_hex((wValue >> 8) & 0xFF);
      00034E 85*03 82         [24]  946 	mov	dpl,(_wValue + 1)
      000351 12r00r00         [24]  947 	lcall	_print_hex
                                    948 ;	src/usbcore.c:543: Prints("\n");
      000354 90r02rB4         [24]  949 	mov	dptr,#___str_18
      000357 75 F0 80         [24]  950 	mov	b,#0x80
                                    951 ;	src/usbcore.c:546: break;
      00035A 02r00r00         [24]  952 	ljmp	_Prints
                                    953 ;	src/usbcore.c:547: case GET_INTERFACE:
      00035D                        954 00134$:
                                    955 ;	src/usbcore.c:549: Prints("Get interface\n");
      00035D 90r02rB6         [24]  956 	mov	dptr,#___str_19
      000360 75 F0 80         [24]  957 	mov	b,#0x80
                                    958 ;	src/usbcore.c:551: break;
      000363 02r00r00         [24]  959 	ljmp	_Prints
                                    960 ;	src/usbcore.c:552: case GET_STATUS:
      000366                        961 00135$:
                                    962 ;	src/usbcore.c:554: Prints("Get status\n");
      000366 90r02rC5         [24]  963 	mov	dptr,#___str_20
      000369 75 F0 80         [24]  964 	mov	b,#0x80
                                    965 ;	src/usbcore.c:556: break;
      00036C 02r00r00         [24]  966 	ljmp	_Prints
                                    967 ;	src/usbcore.c:557: case SYNCH_FRAME:
      00036F                        968 00136$:
                                    969 ;	src/usbcore.c:559: Prints("Synch frame\n");
      00036F 90r02rD1         [24]  970 	mov	dptr,#___str_21
      000372 75 F0 80         [24]  971 	mov	b,#0x80
                                    972 ;	src/usbcore.c:561: break;
      000375 02r00r00         [24]  973 	ljmp	_Prints
                                    974 ;	src/usbcore.c:562: default:
      000378                        975 00137$:
                                    976 ;	src/usbcore.c:564: Prints("Error: undefined stander request\n");
      000378 90r02rDE         [24]  977 	mov	dptr,#___str_22
      00037B 75 F0 80         [24]  978 	mov	b,#0x80
                                    979 ;	src/usbcore.c:568: break;
      00037E 02r00r00         [24]  980 	ljmp	_Prints
                                    981 ;	src/usbcore.c:569: case 1:                            /* class request */
      000381                        982 00139$:
                                    983 ;	src/usbcore.c:571: Prints("USB class input request:\n");
      000381 90r03r00         [24]  984 	mov	dptr,#___str_23
      000384 75 F0 80         [24]  985 	mov	b,#0x80
                                    986 ;	src/usbcore.c:573: break;
      000387 02r00r00         [24]  987 	ljmp	_Prints
                                    988 ;	src/usbcore.c:574: case 2:
      00038A                        989 00140$:
                                    990 ;	src/usbcore.c:576: Prints("USB vendor input request:\n");
      00038A 90r03r1A         [24]  991 	mov	dptr,#___str_24
      00038D 75 F0 80         [24]  992 	mov	b,#0x80
                                    993 ;	src/usbcore.c:578: break;
      000390 02r00r00         [24]  994 	ljmp	_Prints
                                    995 ;	src/usbcore.c:579: default:
      000393                        996 00141$:
                                    997 ;	src/usbcore.c:581: Prints("Error: undefined input request:\n");
      000393 90r03r35         [24]  998 	mov	dptr,#___str_25
      000396 75 F0 80         [24]  999 	mov	b,#0x80
                                   1000 ;	src/usbcore.c:584: }
      000399 02r00r00         [24] 1001 	ljmp	_Prints
      00039C                       1002 00160$:
                                   1003 ;	src/usbcore.c:588: switch ((bmRequestType >> 5) & 0x3) {
      00039C E5*00            [12] 1004 	mov	a,_bmRequestType
      00039E C4               [12] 1005 	swap	a
      00039F 03               [12] 1006 	rr	a
      0003A0 54 07            [12] 1007 	anl	a,#0x07
      0003A2 FF               [12] 1008 	mov	r7,a
      0003A3 53 07 03         [24] 1009 	anl	ar7,#0x03
      0003A6 7E 00            [12] 1010 	mov	r6,#0x00
      0003A8 BF 00 05         [24] 1011 	cjne	r7,#0x00,00324$
      0003AB BE 00 02         [24] 1012 	cjne	r6,#0x00,00324$
      0003AE 80 15            [24] 1013 	sjmp	00143$
      0003B0                       1014 00324$:
      0003B0 BF 01 06         [24] 1015 	cjne	r7,#0x01,00325$
      0003B3 BE 00 03         [24] 1016 	cjne	r6,#0x00,00325$
      0003B6 02r04r6B         [24] 1017 	ljmp	00152$
      0003B9                       1018 00325$:
      0003B9 BF 02 06         [24] 1019 	cjne	r7,#0x02,00326$
      0003BC BE 00 03         [24] 1020 	cjne	r6,#0x00,00326$
      0003BF 02r04r97         [24] 1021 	ljmp	00156$
      0003C2                       1022 00326$:
      0003C2 02r04rA0         [24] 1023 	ljmp	00157$
                                   1024 ;	src/usbcore.c:589: case 0:
      0003C5                       1025 00143$:
                                   1026 ;	src/usbcore.c:591: Prints("USB stander output request: ");
      0003C5 90r03r56         [24] 1027 	mov	dptr,#___str_26
      0003C8 75 F0 80         [24] 1028 	mov	b,#0x80
      0003CB 12r00r00         [24] 1029 	lcall	_Prints
                                   1030 ;	src/usbcore.c:593: switch (bRequest) {
      0003CE 74 01            [12] 1031 	mov	a,#0x01
      0003D0 B5*01 02         [24] 1032 	cjne	a,_bRequest,00327$
      0003D3 80 23            [24] 1033 	sjmp	00144$
      0003D5                       1034 00327$:
      0003D5 74 03            [12] 1035 	mov	a,#0x03
      0003D7 B5*01 02         [24] 1036 	cjne	a,_bRequest,00328$
      0003DA 80 74            [24] 1037 	sjmp	00148$
      0003DC                       1038 00328$:
      0003DC 74 05            [12] 1039 	mov	a,#0x05
      0003DE B5*01 02         [24] 1040 	cjne	a,_bRequest,00329$
      0003E1 80 1E            [24] 1041 	sjmp	00145$
      0003E3                       1042 00329$:
      0003E3 74 07            [12] 1043 	mov	a,#0x07
      0003E5 B5*01 02         [24] 1044 	cjne	a,_bRequest,00330$
      0003E8 80 5D            [24] 1045 	sjmp	00147$
      0003EA                       1046 00330$:
      0003EA 74 09            [12] 1047 	mov	a,#0x09
      0003EC B5*01 02         [24] 1048 	cjne	a,_bRequest,00331$
      0003EF 80 39            [24] 1049 	sjmp	00146$
      0003F1                       1050 00331$:
      0003F1 74 0B            [12] 1051 	mov	a,#0x0b
                                   1052 ;	src/usbcore.c:594: case CLEAR_FEATURE:
      0003F3 B5*01 6C         [24] 1053 	cjne	a,_bRequest,00150$
      0003F6 80 61            [24] 1054 	sjmp	00149$
      0003F8                       1055 00144$:
                                   1056 ;	src/usbcore.c:596: Prints("clear feature\n");                   
      0003F8 90r03r73         [24] 1057 	mov	dptr,#___str_27
      0003FB 75 F0 80         [24] 1058 	mov	b,#0x80
                                   1059 ;	src/usbcore.c:598: break;
      0003FE 02r00r00         [24] 1060 	ljmp	_Prints
                                   1061 ;	src/usbcore.c:599: case SET_ADDRESS:
      000401                       1062 00145$:
                                   1063 ;	src/usbcore.c:601: Prints("set address, the address is: ");
      000401 90r03r82         [24] 1064 	mov	dptr,#___str_28
      000404 75 F0 80         [24] 1065 	mov	b,#0x80
      000407 12r00r00         [24] 1066 	lcall	_Prints
                                   1067 ;	src/usbcore.c:602: print_hex(wValue & 0xFF);
      00040A 85*02 82         [24] 1068 	mov	dpl,_wValue
      00040D 12r00r00         [24] 1069 	lcall	_print_hex
                                   1070 ;	src/usbcore.c:603: Prints("\n");                
      000410 90r02rB4         [24] 1071 	mov	dptr,#___str_18
      000413 75 F0 80         [24] 1072 	mov	b,#0x80
      000416 12r00r00         [24] 1073 	lcall	_Prints
                                   1074 ;	src/usbcore.c:605: D12_set_address(wValue & 0xFF);
      000419 85*02 82         [24] 1075 	mov	dpl,_wValue
      00041C 12r00r00         [24] 1076 	lcall	_D12_set_address
                                   1077 ;	src/usbcore.c:606: SendLength = 0;
      00041F E4               [12] 1078 	clr	a
      000420 F5*0B            [12] 1079 	mov	_SendLength,a
      000422 F5*0C            [12] 1080 	mov	(_SendLength + 1),a
                                   1081 ;	src/usbcore.c:607: NeedZeroPacket = 1;
      000424 75*0D 01         [24] 1082 	mov	_NeedZeroPacket,#0x01
                                   1083 ;	src/usbcore.c:608: usb_bus_ep0_send_data();
                                   1084 ;	src/usbcore.c:609: break;
      000427 02r05r33         [24] 1085 	ljmp	_usb_bus_ep0_send_data
                                   1086 ;	src/usbcore.c:610: case SET_CONFIGURATION:
      00042A                       1087 00146$:
                                   1088 ;	src/usbcore.c:612: Prints("set configuration\n");                   
      00042A 90r03rA0         [24] 1089 	mov	dptr,#___str_29
      00042D 75 F0 80         [24] 1090 	mov	b,#0x80
      000430 12r00r00         [24] 1091 	lcall	_Prints
                                   1092 ;	src/usbcore.c:614: ConfigValue = wValue & 0xFF;
      000433 AF*02            [24] 1093 	mov	r7,_wValue
      000435 8F*0F            [24] 1094 	mov	_ConfigValue,r7
                                   1095 ;	src/usbcore.c:615: D12_set_endpoint_enable(wValue & 0xFF);
      000437 8F 82            [24] 1096 	mov	dpl,r7
      000439 12r00r00         [24] 1097 	lcall	_D12_set_endpoint_enable
                                   1098 ;	src/usbcore.c:617: SendLength = 0;
      00043C E4               [12] 1099 	clr	a
      00043D F5*0B            [12] 1100 	mov	_SendLength,a
      00043F F5*0C            [12] 1101 	mov	(_SendLength + 1),a
                                   1102 ;	src/usbcore.c:618: NeedZeroPacket = 1;
      000441 75*0D 01         [24] 1103 	mov	_NeedZeroPacket,#0x01
                                   1104 ;	src/usbcore.c:619: usb_bus_ep0_send_data();
                                   1105 ;	src/usbcore.c:620: break;
      000444 02r05r33         [24] 1106 	ljmp	_usb_bus_ep0_send_data
                                   1107 ;	src/usbcore.c:621: case SET_DESCRIPTOR:
      000447                       1108 00147$:
                                   1109 ;	src/usbcore.c:623: Prints("set descriptor\n");                   
      000447 90r03rB3         [24] 1110 	mov	dptr,#___str_30
      00044A 75 F0 80         [24] 1111 	mov	b,#0x80
                                   1112 ;	src/usbcore.c:625: break;
      00044D 02r00r00         [24] 1113 	ljmp	_Prints
                                   1114 ;	src/usbcore.c:626: case SET_FEATURE:
      000450                       1115 00148$:
                                   1116 ;	src/usbcore.c:628: Prints("set feature\n");                   
      000450 90r03rC3         [24] 1117 	mov	dptr,#___str_31
      000453 75 F0 80         [24] 1118 	mov	b,#0x80
                                   1119 ;	src/usbcore.c:630: break;
      000456 02r00r00         [24] 1120 	ljmp	_Prints
                                   1121 ;	src/usbcore.c:631: case SET_INTERFACE:
      000459                       1122 00149$:
                                   1123 ;	src/usbcore.c:633: Prints("set interface\n");                   
      000459 90r03rD0         [24] 1124 	mov	dptr,#___str_32
      00045C 75 F0 80         [24] 1125 	mov	b,#0x80
                                   1126 ;	src/usbcore.c:635: break;
      00045F 02r00r00         [24] 1127 	ljmp	_Prints
                                   1128 ;	src/usbcore.c:636: default:
      000462                       1129 00150$:
                                   1130 ;	src/usbcore.c:638: Prints("Error: undefined stander request\n");                   
      000462 90r02rDE         [24] 1131 	mov	dptr,#___str_22
      000465 75 F0 80         [24] 1132 	mov	b,#0x80
                                   1133 ;	src/usbcore.c:642: break;
      000468 02r00r00         [24] 1134 	ljmp	_Prints
                                   1135 ;	src/usbcore.c:643: case 1:
      00046B                       1136 00152$:
                                   1137 ;	src/usbcore.c:645: Prints("USB class output request:\n");                   
      00046B 90r03rDF         [24] 1138 	mov	dptr,#___str_33
      00046E 75 F0 80         [24] 1139 	mov	b,#0x80
      000471 12r00r00         [24] 1140 	lcall	_Prints
                                   1141 ;	src/usbcore.c:647: switch (bRequest) {
      000474 74 0A            [12] 1142 	mov	a,#0x0a
      000476 B5*01 15         [24] 1143 	cjne	a,_bRequest,00154$
                                   1144 ;	src/usbcore.c:650: Prints("set idle\n");
      000479 90r03rFA         [24] 1145 	mov	dptr,#___str_34
      00047C 75 F0 80         [24] 1146 	mov	b,#0x80
      00047F 12r00r00         [24] 1147 	lcall	_Prints
                                   1148 ;	src/usbcore.c:652: SendLength = 1;
      000482 75*0B 01         [24] 1149 	mov	_SendLength,#0x01
      000485 75*0C 00         [24] 1150 	mov	(_SendLength + 1),#0x00
                                   1151 ;	src/usbcore.c:653: NeedZeroPacket = 1;
      000488 75*0D 01         [24] 1152 	mov	_NeedZeroPacket,#0x01
                                   1153 ;	src/usbcore.c:655: usb_bus_ep0_send_data();
                                   1154 ;	src/usbcore.c:656: break;
                                   1155 ;	src/usbcore.c:657: default:
      00048B 02r05r33         [24] 1156 	ljmp	_usb_bus_ep0_send_data
      00048E                       1157 00154$:
                                   1158 ;	src/usbcore.c:659: Prints("unknown request\n");                   
      00048E 90r04r04         [24] 1159 	mov	dptr,#___str_35
      000491 75 F0 80         [24] 1160 	mov	b,#0x80
                                   1161 ;	src/usbcore.c:663: break;
                                   1162 ;	src/usbcore.c:664: case 2:
      000494 02r00r00         [24] 1163 	ljmp	_Prints
      000497                       1164 00156$:
                                   1165 ;	src/usbcore.c:666: Prints("USB vendor output request:\n");                   
      000497 90r04r15         [24] 1166 	mov	dptr,#___str_36
      00049A 75 F0 80         [24] 1167 	mov	b,#0x80
                                   1168 ;	src/usbcore.c:668: break;
                                   1169 ;	src/usbcore.c:669: default:
      00049D 02r00r00         [24] 1170 	ljmp	_Prints
      0004A0                       1171 00157$:
                                   1172 ;	src/usbcore.c:671: Prints("Error: undefined output request.\n");                   
      0004A0 90r04r31         [24] 1173 	mov	dptr,#___str_37
      0004A3 75 F0 80         [24] 1174 	mov	b,#0x80
                                   1175 ;	src/usbcore.c:674: }
      0004A6 02r00r00         [24] 1176 	ljmp	_Prints
      0004A9                       1177 00163$:
                                   1178 ;	src/usbcore.c:677: D12_read_endpoint_buffer(0, 16, buffer);
      0004A9 75*00r10         [24] 1179 	mov	_D12_read_endpoint_buffer_PARM_3,#_usb_bus_isr_ep0_out_buffer_65536_57
      0004AC 75*01 00         [24] 1180 	mov	(_D12_read_endpoint_buffer_PARM_3 + 1),#0x00
      0004AF 75*02 40         [24] 1181 	mov	(_D12_read_endpoint_buffer_PARM_3 + 2),#0x40
      0004B2 75*00 10         [24] 1182 	mov	_D12_read_endpoint_buffer_PARM_2,#0x10
      0004B5 75 82 00         [24] 1183 	mov	dpl,#0x00
      0004B8 12r00r00         [24] 1184 	lcall	_D12_read_endpoint_buffer
                                   1185 ;	src/usbcore.c:678: D12_clear_buffer();
      0004BB 12r00r00         [24] 1186 	lcall	_D12_clear_buffer
                                   1187 ;	src/usbcore.c:679: dump_hex(buffer, 8);
      0004BE 75*00 08         [24] 1188 	mov	_dump_hex_PARM_2,#0x08
      0004C1 75*01 00         [24] 1189 	mov	(_dump_hex_PARM_2 + 1),#0x00
      0004C4 90r00r10         [24] 1190 	mov	dptr,#_usb_bus_isr_ep0_out_buffer_65536_57
      0004C7 75 F0 40         [24] 1191 	mov	b,#0x40
                                   1192 ;	src/usbcore.c:681: }
      0004CA 02r00r00         [24] 1193 	ljmp	_dump_hex
                                   1194 ;------------------------------------------------------------
                                   1195 ;Allocation info for local variables in function 'usb_bus_isr_ep0_in'
                                   1196 ;------------------------------------------------------------
                                   1197 ;	src/usbcore.c:683: void usb_bus_isr_ep0_in()
                                   1198 ;	-----------------------------------------
                                   1199 ;	 function usb_bus_isr_ep0_in
                                   1200 ;	-----------------------------------------
      0004CD                       1201 _usb_bus_isr_ep0_in:
                                   1202 ;	src/usbcore.c:686: Prints("usb isr ep0 in\n");
      0004CD 90r04r53         [24] 1203 	mov	dptr,#___str_38
      0004D0 75 F0 80         [24] 1204 	mov	b,#0x80
      0004D3 12r00r00         [24] 1205 	lcall	_Prints
                                   1206 ;	src/usbcore.c:688: D12_read_endpoint_last_status(1);
      0004D6 75 82 01         [24] 1207 	mov	dpl,#0x01
      0004D9 12r00r00         [24] 1208 	lcall	_D12_read_endpoint_last_status
                                   1209 ;	src/usbcore.c:689: usb_bus_ep0_send_data();
                                   1210 ;	src/usbcore.c:690: }
      0004DC 02r05r33         [24] 1211 	ljmp	_usb_bus_ep0_send_data
                                   1212 ;------------------------------------------------------------
                                   1213 ;Allocation info for local variables in function 'usb_bus_isr_ep1_out'
                                   1214 ;------------------------------------------------------------
                                   1215 ;buf                       Allocated with name '_usb_bus_isr_ep1_out_buf_65536_74'
                                   1216 ;------------------------------------------------------------
                                   1217 ;	src/usbcore.c:692: void usb_bus_isr_ep1_out()
                                   1218 ;	-----------------------------------------
                                   1219 ;	 function usb_bus_isr_ep1_out
                                   1220 ;	-----------------------------------------
      0004DF                       1221 _usb_bus_isr_ep1_out:
                                   1222 ;	src/usbcore.c:696: Prints("usb core ep1 out\n");
      0004DF 90r04r63         [24] 1223 	mov	dptr,#___str_39
      0004E2 75 F0 80         [24] 1224 	mov	b,#0x80
      0004E5 12r00r00         [24] 1225 	lcall	_Prints
                                   1226 ;	src/usbcore.c:699: D12_read_endpoint_last_status(2);
      0004E8 75 82 02         [24] 1227 	mov	dpl,#0x02
      0004EB 12r00r00         [24] 1228 	lcall	_D12_read_endpoint_last_status
                                   1229 ;	src/usbcore.c:701: D12_read_endpoint_buffer(2, 2, buf);
      0004EE 75*00r20         [24] 1230 	mov	_D12_read_endpoint_buffer_PARM_3,#_usb_bus_isr_ep1_out_buf_65536_74
      0004F1 75*01 00         [24] 1231 	mov	(_D12_read_endpoint_buffer_PARM_3 + 1),#0x00
      0004F4 75*02 40         [24] 1232 	mov	(_D12_read_endpoint_buffer_PARM_3 + 2),#0x40
      0004F7 75*00 02         [24] 1233 	mov	_D12_read_endpoint_buffer_PARM_2,#0x02
      0004FA 75 82 02         [24] 1234 	mov	dpl,#0x02
      0004FD 12r00r00         [24] 1235 	lcall	_D12_read_endpoint_buffer
                                   1236 ;	src/usbcore.c:703: D12_clear_buffer();
      000500 12r00r00         [24] 1237 	lcall	_D12_clear_buffer
                                   1238 ;	src/usbcore.c:705: if (buf[0] == 0x1)
      000503 74 01            [12] 1239 	mov	a,#0x01
      000505 B5*20 05         [24] 1240 	cjne	a,_usb_bus_isr_ep1_out_buf_65536_74,00103$
                                   1241 ;	src/usbcore.c:706: LED = ~buf[1];
      000508 E5*21            [12] 1242 	mov	a,(_usb_bus_isr_ep1_out_buf_65536_74 + 0x0001)
      00050A F4               [12] 1243 	cpl	a
      00050B F5 A0            [12] 1244 	mov	_P2,a
      00050D                       1245 00103$:
                                   1246 ;	src/usbcore.c:707: }
      00050D 22               [24] 1247 	ret
                                   1248 ;------------------------------------------------------------
                                   1249 ;Allocation info for local variables in function 'usb_bus_isr_ep1_in'
                                   1250 ;------------------------------------------------------------
                                   1251 ;	src/usbcore.c:709: void usb_bus_isr_ep1_in()
                                   1252 ;	-----------------------------------------
                                   1253 ;	 function usb_bus_isr_ep1_in
                                   1254 ;	-----------------------------------------
      00050E                       1255 _usb_bus_isr_ep1_in:
                                   1256 ;	src/usbcore.c:712: Prints("usb core ep1 in\n");
      00050E 90r04r75         [24] 1257 	mov	dptr,#___str_40
      000511 75 F0 80         [24] 1258 	mov	b,#0x80
      000514 12r00r00         [24] 1259 	lcall	_Prints
                                   1260 ;	src/usbcore.c:714: D12_read_endpoint_last_status(3);
      000517 75 82 03         [24] 1261 	mov	dpl,#0x03
      00051A 12r00r00         [24] 1262 	lcall	_D12_read_endpoint_last_status
                                   1263 ;	src/usbcore.c:715: Ep1InIsBusy = 0;
      00051D 75*0E 00         [24] 1264 	mov	_Ep1InIsBusy,#0x00
                                   1265 ;	src/usbcore.c:716: }
      000520 22               [24] 1266 	ret
                                   1267 ;------------------------------------------------------------
                                   1268 ;Allocation info for local variables in function 'usb_bus_isr_ep2_out'
                                   1269 ;------------------------------------------------------------
                                   1270 ;	src/usbcore.c:718: void usb_bus_isr_ep2_out()
                                   1271 ;	-----------------------------------------
                                   1272 ;	 function usb_bus_isr_ep2_out
                                   1273 ;	-----------------------------------------
      000521                       1274 _usb_bus_isr_ep2_out:
                                   1275 ;	src/usbcore.c:721: Prints("usb core ep2 out\n");
      000521 90r04r86         [24] 1276 	mov	dptr,#___str_41
      000524 75 F0 80         [24] 1277 	mov	b,#0x80
                                   1278 ;	src/usbcore.c:723: }
      000527 02r00r00         [24] 1279 	ljmp	_Prints
                                   1280 ;------------------------------------------------------------
                                   1281 ;Allocation info for local variables in function 'usb_bus_isr_ep2_in'
                                   1282 ;------------------------------------------------------------
                                   1283 ;	src/usbcore.c:725: void usb_bus_isr_ep2_in()
                                   1284 ;	-----------------------------------------
                                   1285 ;	 function usb_bus_isr_ep2_in
                                   1286 ;	-----------------------------------------
      00052A                       1287 _usb_bus_isr_ep2_in:
                                   1288 ;	src/usbcore.c:728: Prints("usb core ep2 in\n");
      00052A 90r04r98         [24] 1289 	mov	dptr,#___str_42
      00052D 75 F0 80         [24] 1290 	mov	b,#0x80
                                   1291 ;	src/usbcore.c:730: }
      000530 02r00r00         [24] 1292 	ljmp	_Prints
                                   1293 ;------------------------------------------------------------
                                   1294 ;Allocation info for local variables in function 'usb_bus_ep0_send_data'
                                   1295 ;------------------------------------------------------------
                                   1296 ;	src/usbcore.c:732: void usb_bus_ep0_send_data(void)
                                   1297 ;	-----------------------------------------
                                   1298 ;	 function usb_bus_ep0_send_data
                                   1299 ;	-----------------------------------------
      000533                       1300 _usb_bus_ep0_send_data:
                                   1301 ;	src/usbcore.c:734: if (SendLength > DeviceDescriptor[7]) {
      000533 90r00r07         [24] 1302 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      000536 E4               [12] 1303 	clr	a
      000537 93               [24] 1304 	movc	a,@a+dptr
      000538 FF               [12] 1305 	mov	r7,a
      000539 FD               [12] 1306 	mov	r5,a
      00053A 7E 00            [12] 1307 	mov	r6,#0x00
      00053C C3               [12] 1308 	clr	c
      00053D ED               [12] 1309 	mov	a,r5
      00053E 95*0B            [12] 1310 	subb	a,_SendLength
      000540 EE               [12] 1311 	mov	a,r6
      000541 95*0C            [12] 1312 	subb	a,(_SendLength + 1)
      000543 50 34            [24] 1313 	jnc	00107$
                                   1314 ;	src/usbcore.c:735: D12_write_endpoint_buffer(1, DeviceDescriptor[7], pSendData);
      000545 8F*00            [24] 1315 	mov	_D12_write_endpoint_buffer_PARM_2,r7
      000547 85*08*00         [24] 1316 	mov	_D12_write_endpoint_buffer_PARM_3,_pSendData
      00054A 85*09*01         [24] 1317 	mov	(_D12_write_endpoint_buffer_PARM_3 + 1),(_pSendData + 1)
      00054D 85*0A*02         [24] 1318 	mov	(_D12_write_endpoint_buffer_PARM_3 + 2),(_pSendData + 2)
      000550 75 82 01         [24] 1319 	mov	dpl,#0x01
      000553 12r00r00         [24] 1320 	lcall	_D12_write_endpoint_buffer
                                   1321 ;	src/usbcore.c:736: SendLength -= DeviceDescriptor[7];
      000556 90r00r07         [24] 1322 	mov	dptr,#(_DeviceDescriptor + 0x0007)
      000559 E4               [12] 1323 	clr	a
      00055A 93               [24] 1324 	movc	a,@a+dptr
      00055B FF               [12] 1325 	mov	r7,a
      00055C FD               [12] 1326 	mov	r5,a
      00055D 7E 00            [12] 1327 	mov	r6,#0x00
      00055F AB*0B            [24] 1328 	mov	r3,_SendLength
      000561 AC*0C            [24] 1329 	mov	r4,(_SendLength + 1)
      000563 EB               [12] 1330 	mov	a,r3
      000564 C3               [12] 1331 	clr	c
      000565 9D               [12] 1332 	subb	a,r5
      000566 FB               [12] 1333 	mov	r3,a
      000567 EC               [12] 1334 	mov	a,r4
      000568 9E               [12] 1335 	subb	a,r6
      000569 FC               [12] 1336 	mov	r4,a
      00056A 8B*0B            [24] 1337 	mov	_SendLength,r3
      00056C 8C*0C            [24] 1338 	mov	(_SendLength + 1),r4
                                   1339 ;	src/usbcore.c:737: pSendData += DeviceDescriptor[7];
      00056E EF               [12] 1340 	mov	a,r7
      00056F 25*08            [12] 1341 	add	a,_pSendData
      000571 F5*08            [12] 1342 	mov	_pSendData,a
      000573 E4               [12] 1343 	clr	a
      000574 35*09            [12] 1344 	addc	a,(_pSendData + 1)
      000576 F5*09            [12] 1345 	mov	(_pSendData + 1),a
      000578 22               [24] 1346 	ret
      000579                       1347 00107$:
                                   1348 ;	src/usbcore.c:739: if (SendLength != 0) {
      000579 E5*0B            [12] 1349 	mov	a,_SendLength
      00057B 45*0C            [12] 1350 	orl	a,(_SendLength + 1)
      00057D 60 18            [24] 1351 	jz	00104$
                                   1352 ;	src/usbcore.c:740: D12_write_endpoint_buffer(1, SendLength, pSendData);
      00057F 85*0B*00         [24] 1353 	mov	_D12_write_endpoint_buffer_PARM_2,_SendLength
      000582 85*08*00         [24] 1354 	mov	_D12_write_endpoint_buffer_PARM_3,_pSendData
      000585 85*09*01         [24] 1355 	mov	(_D12_write_endpoint_buffer_PARM_3 + 1),(_pSendData + 1)
      000588 85*0A*02         [24] 1356 	mov	(_D12_write_endpoint_buffer_PARM_3 + 2),(_pSendData + 2)
      00058B 75 82 01         [24] 1357 	mov	dpl,#0x01
      00058E 12r00r00         [24] 1358 	lcall	_D12_write_endpoint_buffer
                                   1359 ;	src/usbcore.c:741: SendLength = 0;
      000591 E4               [12] 1360 	clr	a
      000592 F5*0B            [12] 1361 	mov	_SendLength,a
      000594 F5*0C            [12] 1362 	mov	(_SendLength + 1),a
      000596 22               [24] 1363 	ret
      000597                       1364 00104$:
                                   1365 ;	src/usbcore.c:743: if (NeedZeroPacket == 1) {
      000597 74 01            [12] 1366 	mov	a,#0x01
      000599 B5*0D 15         [24] 1367 	cjne	a,_NeedZeroPacket,00109$
                                   1368 ;	src/usbcore.c:744: D12_write_endpoint_buffer(1, 0, pSendData);
      00059C 75*00 00         [24] 1369 	mov	_D12_write_endpoint_buffer_PARM_2,#0x00
      00059F 85*08*00         [24] 1370 	mov	_D12_write_endpoint_buffer_PARM_3,_pSendData
      0005A2 85*09*01         [24] 1371 	mov	(_D12_write_endpoint_buffer_PARM_3 + 1),(_pSendData + 1)
      0005A5 85*0A*02         [24] 1372 	mov	(_D12_write_endpoint_buffer_PARM_3 + 2),(_pSendData + 2)
      0005A8 75 82 01         [24] 1373 	mov	dpl,#0x01
      0005AB 12r00r00         [24] 1374 	lcall	_D12_write_endpoint_buffer
                                   1375 ;	src/usbcore.c:745: NeedZeroPacket = 0;
      0005AE 75*0D 00         [24] 1376 	mov	_NeedZeroPacket,#0x00
      0005B1                       1377 00109$:
                                   1378 ;	src/usbcore.c:749: }
      0005B1 22               [24] 1379 	ret
                                   1380 	.area CSEG    (CODE)
                                   1381 	.area CONST   (CODE)
      000000                       1382 _DeviceDescriptor:
      000000 12                    1383 	.db #0x12	; 18
      000001 01                    1384 	.db #0x01	; 1
      000002 10                    1385 	.db #0x10	; 16
      000003 01                    1386 	.db #0x01	; 1
      000004 00                    1387 	.db #0x00	; 0
      000005 00                    1388 	.db #0x00	; 0
      000006 00                    1389 	.db #0x00	; 0
      000007 10                    1390 	.db #0x10	; 16
      000008 88                    1391 	.db #0x88	; 136
      000009 88                    1392 	.db #0x88	; 136
      00000A 03                    1393 	.db #0x03	; 3
      00000B 00                    1394 	.db #0x00	; 0
      00000C 00                    1395 	.db #0x00	; 0
      00000D 01                    1396 	.db #0x01	; 1
      00000E 01                    1397 	.db #0x01	; 1
      00000F 02                    1398 	.db #0x02	; 2
      000010 03                    1399 	.db #0x03	; 3
      000011 01                    1400 	.db #0x01	; 1
      000012                       1401 _ConfigurationDescriptor:
      000012 09                    1402 	.db #0x09	; 9
      000013 02                    1403 	.db #0x02	; 2
      000014 29                    1404 	.db #0x29	; 41
      000015 00                    1405 	.db #0x00	; 0
      000016 01                    1406 	.db #0x01	; 1
      000017 01                    1407 	.db #0x01	; 1
      000018 00                    1408 	.db #0x00	; 0
      000019 80                    1409 	.db #0x80	; 128
      00001A 32                    1410 	.db #0x32	; 50	'2'
      00001B 09                    1411 	.db #0x09	; 9
      00001C 04                    1412 	.db #0x04	; 4
      00001D 00                    1413 	.db #0x00	; 0
      00001E 00                    1414 	.db #0x00	; 0
      00001F 02                    1415 	.db #0x02	; 2
      000020 03                    1416 	.db #0x03	; 3
      000021 01                    1417 	.db #0x01	; 1
      000022 01                    1418 	.db #0x01	; 1
      000023 00                    1419 	.db #0x00	; 0
      000024 09                    1420 	.db #0x09	; 9
      000025 21                    1421 	.db #0x21	; 33
      000026 10                    1422 	.db #0x10	; 16
      000027 01                    1423 	.db #0x01	; 1
      000028 21                    1424 	.db #0x21	; 33
      000029 01                    1425 	.db #0x01	; 1
      00002A 22                    1426 	.db #0x22	; 34
      00002B 79                    1427 	.db #0x79	; 121	'y'
      00002C 00                    1428 	.db #0x00	; 0
      00002D 07                    1429 	.db #0x07	; 7
      00002E 05                    1430 	.db #0x05	; 5
      00002F 81                    1431 	.db #0x81	; 129
      000030 03                    1432 	.db #0x03	; 3
      000031 10                    1433 	.db #0x10	; 16
      000032 00                    1434 	.db #0x00	; 0
      000033 0A                    1435 	.db #0x0a	; 10
      000034 07                    1436 	.db #0x07	; 7
      000035 05                    1437 	.db #0x05	; 5
      000036 01                    1438 	.db #0x01	; 1
      000037 03                    1439 	.db #0x03	; 3
      000038 10                    1440 	.db #0x10	; 16
      000039 00                    1441 	.db #0x00	; 0
      00003A 0A                    1442 	.db #0x0a	; 10
      00003B                       1443 _languageId:
      00003B 04                    1444 	.db #0x04	; 4
      00003C 03                    1445 	.db #0x03	; 3
      00003D 09                    1446 	.db #0x09	; 9
      00003E 04                    1447 	.db #0x04	; 4
      00003F                       1448 _ManufacturerStringDescriptor:
      00003F 5E                    1449 	.db #0x5e	; 94
      000040 03                    1450 	.db #0x03	; 3
      000041 43                    1451 	.db #0x43	; 67	'C'
      000042 00                    1452 	.db #0x00	; 0
      000043 6F                    1453 	.db #0x6f	; 111	'o'
      000044 00                    1454 	.db #0x00	; 0
      000045 6E                    1455 	.db #0x6e	; 110	'n'
      000046 00                    1456 	.db #0x00	; 0
      000047 74                    1457 	.db #0x74	; 116	't'
      000048 00                    1458 	.db #0x00	; 0
      000049 61                    1459 	.db #0x61	; 97	'a'
      00004A 00                    1460 	.db #0x00	; 0
      00004B 63                    1461 	.db #0x63	; 99	'c'
      00004C 00                    1462 	.db #0x00	; 0
      00004D 74                    1463 	.db #0x74	; 116	't'
      00004E 00                    1464 	.db #0x00	; 0
      00004F 20                    1465 	.db #0x20	; 32
      000050 00                    1466 	.db #0x00	; 0
      000051 61                    1467 	.db #0x61	; 97	'a'
      000052 00                    1468 	.db #0x00	; 0
      000053 75                    1469 	.db #0x75	; 117	'u'
      000054 00                    1470 	.db #0x00	; 0
      000055 74                    1471 	.db #0x74	; 116	't'
      000056 00                    1472 	.db #0x00	; 0
      000057 68                    1473 	.db #0x68	; 104	'h'
      000058 00                    1474 	.db #0x00	; 0
      000059 6F                    1475 	.db #0x6f	; 111	'o'
      00005A 00                    1476 	.db #0x00	; 0
      00005B 72                    1477 	.db #0x72	; 114	'r'
      00005C 00                    1478 	.db #0x00	; 0
      00005D 20                    1479 	.db #0x20	; 32
      00005E 00                    1480 	.db #0x00	; 0
      00005F 48                    1481 	.db #0x48	; 72	'H'
      000060 00                    1482 	.db #0x00	; 0
      000061 65                    1483 	.db #0x65	; 101	'e'
      000062 00                    1484 	.db #0x00	; 0
      000063 6E                    1485 	.db #0x6e	; 110	'n'
      000064 00                    1486 	.db #0x00	; 0
      000065 67                    1487 	.db #0x67	; 103	'g'
      000066 00                    1488 	.db #0x00	; 0
      000067 20                    1489 	.db #0x20	; 32
      000068 00                    1490 	.db #0x00	; 0
      000069 56                    1491 	.db #0x56	; 86	'V'
      00006A 00                    1492 	.db #0x00	; 0
      00006B 69                    1493 	.db #0x69	; 105	'i'
      00006C 00                    1494 	.db #0x00	; 0
      00006D 61                    1495 	.db #0x61	; 97	'a'
      00006E 00                    1496 	.db #0x00	; 0
      00006F 20                    1497 	.db #0x20	; 32
      000070 00                    1498 	.db #0x00	; 0
      000071 65                    1499 	.db #0x65	; 101	'e'
      000072 00                    1500 	.db #0x00	; 0
      000073 6D                    1501 	.db #0x6d	; 109	'm'
      000074 00                    1502 	.db #0x00	; 0
      000075 61                    1503 	.db #0x61	; 97	'a'
      000076 00                    1504 	.db #0x00	; 0
      000077 69                    1505 	.db #0x69	; 105	'i'
      000078 00                    1506 	.db #0x00	; 0
      000079 6C                    1507 	.db #0x6c	; 108	'l'
      00007A 00                    1508 	.db #0x00	; 0
      00007B 20                    1509 	.db #0x20	; 32
      00007C 00                    1510 	.db #0x00	; 0
      00007D 37                    1511 	.db #0x37	; 55	'7'
      00007E 00                    1512 	.db #0x00	; 0
      00007F 37                    1513 	.db #0x37	; 55	'7'
      000080 00                    1514 	.db #0x00	; 0
      000081 30                    1515 	.db #0x30	; 48	'0'
      000082 00                    1516 	.db #0x00	; 0
      000083 31                    1517 	.db #0x31	; 49	'1'
      000084 00                    1518 	.db #0x00	; 0
      000085 37                    1519 	.db #0x37	; 55	'7'
      000086 00                    1520 	.db #0x00	; 0
      000087 35                    1521 	.db #0x35	; 53	'5'
      000088 00                    1522 	.db #0x00	; 0
      000089 31                    1523 	.db #0x31	; 49	'1'
      00008A 00                    1524 	.db #0x00	; 0
      00008B 37                    1525 	.db #0x37	; 55	'7'
      00008C 00                    1526 	.db #0x00	; 0
      00008D 37                    1527 	.db #0x37	; 55	'7'
      00008E 00                    1528 	.db #0x00	; 0
      00008F 40                    1529 	.db #0x40	; 64
      000090 00                    1530 	.db #0x00	; 0
      000091 71                    1531 	.db #0x71	; 113	'q'
      000092 00                    1532 	.db #0x00	; 0
      000093 71                    1533 	.db #0x71	; 113	'q'
      000094 00                    1534 	.db #0x00	; 0
      000095 2E                    1535 	.db #0x2e	; 46
      000096 00                    1536 	.db #0x00	; 0
      000097 63                    1537 	.db #0x63	; 99	'c'
      000098 00                    1538 	.db #0x00	; 0
      000099 6F                    1539 	.db #0x6f	; 111	'o'
      00009A 00                    1540 	.db #0x00	; 0
      00009B 6D                    1541 	.db #0x6d	; 109	'm'
      00009C 00                    1542 	.db #0x00	; 0
      00009D                       1543 _ProductStringDescriptor:
      00009D 36                    1544 	.db #0x36	; 54	'6'
      00009E 03                    1545 	.db #0x03	; 3
      00009F 48                    1546 	.db #0x48	; 72	'H'
      0000A0 00                    1547 	.db #0x00	; 0
      0000A1 65                    1548 	.db #0x65	; 101	'e'
      0000A2 00                    1549 	.db #0x00	; 0
      0000A3 6E                    1550 	.db #0x6e	; 110	'n'
      0000A4 00                    1551 	.db #0x00	; 0
      0000A5 67                    1552 	.db #0x67	; 103	'g'
      0000A6 00                    1553 	.db #0x00	; 0
      0000A7 27                    1554 	.db #0x27	; 39
      0000A8 00                    1555 	.db #0x00	; 0
      0000A9 73                    1556 	.db #0x73	; 115	's'
      0000AA 00                    1557 	.db #0x00	; 0
      0000AB 20                    1558 	.db #0x20	; 32
      0000AC 00                    1559 	.db #0x00	; 0
      0000AD 4B                    1560 	.db #0x4b	; 75	'K'
      0000AE 00                    1561 	.db #0x00	; 0
      0000AF 65                    1562 	.db #0x65	; 101	'e'
      0000B0 00                    1563 	.db #0x00	; 0
      0000B1 79                    1564 	.db #0x79	; 121	'y'
      0000B2 00                    1565 	.db #0x00	; 0
      0000B3 62                    1566 	.db #0x62	; 98	'b'
      0000B4 00                    1567 	.db #0x00	; 0
      0000B5 6F                    1568 	.db #0x6f	; 111	'o'
      0000B6 00                    1569 	.db #0x00	; 0
      0000B7 61                    1570 	.db #0x61	; 97	'a'
      0000B8 00                    1571 	.db #0x00	; 0
      0000B9 72                    1572 	.db #0x72	; 114	'r'
      0000BA 00                    1573 	.db #0x00	; 0
      0000BB 64                    1574 	.db #0x64	; 100	'd'
      0000BC 00                    1575 	.db #0x00	; 0
      0000BD 20                    1576 	.db #0x20	; 32
      0000BE 00                    1577 	.db #0x00	; 0
      0000BF 77                    1578 	.db #0x77	; 119	'w'
      0000C0 00                    1579 	.db #0x00	; 0
      0000C1 69                    1580 	.db #0x69	; 105	'i'
      0000C2 00                    1581 	.db #0x00	; 0
      0000C3 74                    1582 	.db #0x74	; 116	't'
      0000C4 00                    1583 	.db #0x00	; 0
      0000C5 68                    1584 	.db #0x68	; 104	'h'
      0000C6 00                    1585 	.db #0x00	; 0
      0000C7 20                    1586 	.db #0x20	; 32
      0000C8 00                    1587 	.db #0x00	; 0
      0000C9 4D                    1588 	.db #0x4d	; 77	'M'
      0000CA 00                    1589 	.db #0x00	; 0
      0000CB 6F                    1590 	.db #0x6f	; 111	'o'
      0000CC 00                    1591 	.db #0x00	; 0
      0000CD 75                    1592 	.db #0x75	; 117	'u'
      0000CE 00                    1593 	.db #0x00	; 0
      0000CF 73                    1594 	.db #0x73	; 115	's'
      0000D0 00                    1595 	.db #0x00	; 0
      0000D1 65                    1596 	.db #0x65	; 101	'e'
      0000D2 00                    1597 	.db #0x00	; 0
      0000D3                       1598 _SerialNumberStringDescriptor:
      0000D3 16                    1599 	.db #0x16	; 22
      0000D4 03                    1600 	.db #0x03	; 3
      0000D5 32                    1601 	.db #0x32	; 50	'2'
      0000D6 00                    1602 	.db #0x00	; 0
      0000D7 30                    1603 	.db #0x30	; 48	'0'
      0000D8 00                    1604 	.db #0x00	; 0
      0000D9 32                    1605 	.db #0x32	; 50	'2'
      0000DA 00                    1606 	.db #0x00	; 0
      0000DB 33                    1607 	.db #0x33	; 51	'3'
      0000DC 00                    1608 	.db #0x00	; 0
      0000DD 2D                    1609 	.db #0x2d	; 45
      0000DE 00                    1610 	.db #0x00	; 0
      0000DF 30                    1611 	.db #0x30	; 48	'0'
      0000E0 00                    1612 	.db #0x00	; 0
      0000E1 38                    1613 	.db #0x38	; 56	'8'
      0000E2 00                    1614 	.db #0x00	; 0
      0000E3 2D                    1615 	.db #0x2d	; 45
      0000E4 00                    1616 	.db #0x00	; 0
      0000E5 30                    1617 	.db #0x30	; 48	'0'
      0000E6 00                    1618 	.db #0x00	; 0
      0000E7 32                    1619 	.db #0x32	; 50	'2'
      0000E8 00                    1620 	.db #0x00	; 0
      0000E9                       1621 _ReportDescriptor:
      0000E9 05                    1622 	.db #0x05	; 5
      0000EA 01                    1623 	.db #0x01	; 1
      0000EB 09                    1624 	.db #0x09	; 9
      0000EC 06                    1625 	.db #0x06	; 6
      0000ED A1                    1626 	.db #0xa1	; 161
      0000EE 01                    1627 	.db #0x01	; 1
      0000EF 85                    1628 	.db #0x85	; 133
      0000F0 01                    1629 	.db #0x01	; 1
      0000F1 05                    1630 	.db #0x05	; 5
      0000F2 07                    1631 	.db #0x07	; 7
      0000F3 19                    1632 	.db #0x19	; 25
      0000F4 E0                    1633 	.db #0xe0	; 224
      0000F5 29                    1634 	.db #0x29	; 41
      0000F6 E7                    1635 	.db #0xe7	; 231
      0000F7 15                    1636 	.db #0x15	; 21
      0000F8 00                    1637 	.db #0x00	; 0
      0000F9 25                    1638 	.db #0x25	; 37
      0000FA 01                    1639 	.db #0x01	; 1
      0000FB 95                    1640 	.db #0x95	; 149
      0000FC 08                    1641 	.db #0x08	; 8
      0000FD 75                    1642 	.db #0x75	; 117	'u'
      0000FE 01                    1643 	.db #0x01	; 1
      0000FF 81                    1644 	.db #0x81	; 129
      000100 02                    1645 	.db #0x02	; 2
      000101 95                    1646 	.db #0x95	; 149
      000102 01                    1647 	.db #0x01	; 1
      000103 75                    1648 	.db #0x75	; 117	'u'
      000104 08                    1649 	.db #0x08	; 8
      000105 81                    1650 	.db #0x81	; 129
      000106 03                    1651 	.db #0x03	; 3
      000107 95                    1652 	.db #0x95	; 149
      000108 06                    1653 	.db #0x06	; 6
      000109 75                    1654 	.db #0x75	; 117	'u'
      00010A 08                    1655 	.db #0x08	; 8
      00010B 15                    1656 	.db #0x15	; 21
      00010C 00                    1657 	.db #0x00	; 0
      00010D 25                    1658 	.db #0x25	; 37
      00010E FF                    1659 	.db #0xff	; 255
      00010F 05                    1660 	.db #0x05	; 5
      000110 07                    1661 	.db #0x07	; 7
      000111 19                    1662 	.db #0x19	; 25
      000112 00                    1663 	.db #0x00	; 0
      000113 29                    1664 	.db #0x29	; 41
      000114 65                    1665 	.db #0x65	; 101	'e'
      000115 81                    1666 	.db #0x81	; 129
      000116 00                    1667 	.db #0x00	; 0
      000117 25                    1668 	.db #0x25	; 37
      000118 01                    1669 	.db #0x01	; 1
      000119 95                    1670 	.db #0x95	; 149
      00011A 05                    1671 	.db #0x05	; 5
      00011B 75                    1672 	.db #0x75	; 117	'u'
      00011C 01                    1673 	.db #0x01	; 1
      00011D 05                    1674 	.db #0x05	; 5
      00011E 08                    1675 	.db #0x08	; 8
      00011F 19                    1676 	.db #0x19	; 25
      000120 01                    1677 	.db #0x01	; 1
      000121 29                    1678 	.db #0x29	; 41
      000122 05                    1679 	.db #0x05	; 5
      000123 91                    1680 	.db #0x91	; 145
      000124 02                    1681 	.db #0x02	; 2
      000125 95                    1682 	.db #0x95	; 149
      000126 01                    1683 	.db #0x01	; 1
      000127 75                    1684 	.db #0x75	; 117	'u'
      000128 03                    1685 	.db #0x03	; 3
      000129 91                    1686 	.db #0x91	; 145
      00012A 03                    1687 	.db #0x03	; 3
      00012B C0                    1688 	.db #0xc0	; 192
      00012C 05                    1689 	.db #0x05	; 5
      00012D 01                    1690 	.db #0x01	; 1
      00012E 09                    1691 	.db #0x09	; 9
      00012F 02                    1692 	.db #0x02	; 2
      000130 A1                    1693 	.db #0xa1	; 161
      000131 01                    1694 	.db #0x01	; 1
      000132 85                    1695 	.db #0x85	; 133
      000133 02                    1696 	.db #0x02	; 2
      000134 09                    1697 	.db #0x09	; 9
      000135 01                    1698 	.db #0x01	; 1
      000136 A1                    1699 	.db #0xa1	; 161
      000137 00                    1700 	.db #0x00	; 0
      000138 05                    1701 	.db #0x05	; 5
      000139 09                    1702 	.db #0x09	; 9
      00013A 19                    1703 	.db #0x19	; 25
      00013B 01                    1704 	.db #0x01	; 1
      00013C 29                    1705 	.db #0x29	; 41
      00013D 03                    1706 	.db #0x03	; 3
      00013E 15                    1707 	.db #0x15	; 21
      00013F 00                    1708 	.db #0x00	; 0
      000140 25                    1709 	.db #0x25	; 37
      000141 01                    1710 	.db #0x01	; 1
      000142 95                    1711 	.db #0x95	; 149
      000143 03                    1712 	.db #0x03	; 3
      000144 75                    1713 	.db #0x75	; 117	'u'
      000145 01                    1714 	.db #0x01	; 1
      000146 81                    1715 	.db #0x81	; 129
      000147 02                    1716 	.db #0x02	; 2
      000148 95                    1717 	.db #0x95	; 149
      000149 01                    1718 	.db #0x01	; 1
      00014A 75                    1719 	.db #0x75	; 117	'u'
      00014B 05                    1720 	.db #0x05	; 5
      00014C 81                    1721 	.db #0x81	; 129
      00014D 03                    1722 	.db #0x03	; 3
      00014E 05                    1723 	.db #0x05	; 5
      00014F 01                    1724 	.db #0x01	; 1
      000150 09                    1725 	.db #0x09	; 9
      000151 30                    1726 	.db #0x30	; 48	'0'
      000152 09                    1727 	.db #0x09	; 9
      000153 31                    1728 	.db #0x31	; 49	'1'
      000154 09                    1729 	.db #0x09	; 9
      000155 38                    1730 	.db #0x38	; 56	'8'
      000156 15                    1731 	.db #0x15	; 21
      000157 81                    1732 	.db #0x81	; 129
      000158 25                    1733 	.db #0x25	; 37
      000159 7F                    1734 	.db #0x7f	; 127
      00015A 75                    1735 	.db #0x75	; 117	'u'
      00015B 08                    1736 	.db #0x08	; 8
      00015C 95                    1737 	.db #0x95	; 149
      00015D 03                    1738 	.db #0x03	; 3
      00015E 81                    1739 	.db #0x81	; 129
      00015F 06                    1740 	.db #0x06	; 6
      000160 C0                    1741 	.db #0xc0	; 192
      000161 C0                    1742 	.db #0xc0	; 192
                                   1743 	.area CONST   (CODE)
      000162                       1744 ___str_0:
      000162 75 73 62 20 64 69 73  1745 	.ascii "usb disconnect"
             63 6F 6E 6E 65 63 74
      000170 0A                    1746 	.db 0x0a
      000171 00                    1747 	.db 0x00
                                   1748 	.area CSEG    (CODE)
                                   1749 	.area CONST   (CODE)
      000172                       1750 ___str_1:
      000172 75 73 62 20 63 6F 6E  1751 	.ascii "usb connect"
             6E 65 63 74
      00017D 0A                    1752 	.db 0x0a
      00017E 00                    1753 	.db 0x00
                                   1754 	.area CSEG    (CODE)
                                   1755 	.area CONST   (CODE)
      00017F                       1756 ___str_2:
      00017F 75 73 62 20 63 6F 72  1757 	.ascii "usb core isr suspend"
             65 20 69 73 72 20 73
             75 73 70 65 6E 64
      000193 0A                    1758 	.db 0x0a
      000194 00                    1759 	.db 0x00
                                   1760 	.area CSEG    (CODE)
                                   1761 	.area CONST   (CODE)
      000195                       1762 ___str_3:
      000195 75 73 62 20 63 6F 72  1763 	.ascii "usb core isr reset"
             65 20 69 73 72 20 72
             65 73 65 74
      0001A7 0A                    1764 	.db 0x0a
      0001A8 00                    1765 	.db 0x00
                                   1766 	.area CSEG    (CODE)
                                   1767 	.area CONST   (CODE)
      0001A9                       1768 ___str_4:
      0001A9 75 73 62 20 69 73 72  1769 	.ascii "usb isr ep0 out"
             20 65 70 30 20 6F 75
             74
      0001B8 0A                    1770 	.db 0x0a
      0001B9 00                    1771 	.db 0x00
                                   1772 	.area CSEG    (CODE)
                                   1773 	.area CONST   (CODE)
      0001BA                       1774 ___str_5:
      0001BA 55 53 42 20 73 74 61  1775 	.ascii "USB stand input request: "
             6E 64 20 69 6E 70 75
             74 20 72 65 71 75 65
             73 74 3A 20
      0001D3 00                    1776 	.db 0x00
                                   1777 	.area CSEG    (CODE)
                                   1778 	.area CONST   (CODE)
      0001D4                       1779 ___str_6:
      0001D4 47 65 74 20 63 6F 6E  1780 	.ascii "Get configuration"
             66 69 67 75 72 61 74
             69 6F 6E
      0001E5 0A                    1781 	.db 0x0a
      0001E6 00                    1782 	.db 0x00
                                   1783 	.area CSEG    (CODE)
                                   1784 	.area CONST   (CODE)
      0001E7                       1785 ___str_7:
      0001E7 47 65 74 20 64 65 73  1786 	.ascii "Get descriptor -- "
             63 72 69 70 74 6F 72
             20 2D 2D 20
      0001F9 00                    1787 	.db 0x00
                                   1788 	.area CSEG    (CODE)
                                   1789 	.area CONST   (CODE)
      0001FA                       1790 ___str_8:
      0001FA 64 65 76 69 63 65 20  1791 	.ascii "device descriptor"
             64 65 73 63 72 69 70
             74 6F 72
      00020B 0A                    1792 	.db 0x0a
      00020C 00                    1793 	.db 0x00
                                   1794 	.area CSEG    (CODE)
                                   1795 	.area CONST   (CODE)
      00020D                       1796 ___str_9:
      00020D 63 6F 6E 66 69 67 75  1797 	.ascii "configuration descriptor"
             72 61 74 69 6F 6E 20
             64 65 73 63 72 69 70
             74 6F 72
      000225 0A                    1798 	.db 0x0a
      000226 00                    1799 	.db 0x00
                                   1800 	.area CSEG    (CODE)
                                   1801 	.area CONST   (CODE)
      000227                       1802 ___str_10:
      000227 73 74 72 69 6E 67 20  1803 	.ascii "string descriptor -- "
             64 65 73 63 72 69 70
             74 6F 72 20 2D 2D 20
      00023C 00                    1804 	.db 0x00
                                   1805 	.area CSEG    (CODE)
                                   1806 	.area CONST   (CODE)
      00023D                       1807 ___str_11:
      00023D 6C 61 6E 67 75 61 67  1808 	.ascii "language ID"
             65 20 49 44
      000248 0A                    1809 	.db 0x0a
      000249 00                    1810 	.db 0x00
                                   1811 	.area CSEG    (CODE)
                                   1812 	.area CONST   (CODE)
      00024A                       1813 ___str_12:
      00024A 6D 61 6E 75 66 61 63  1814 	.ascii "manufacture string"
             74 75 72 65 20 73 74
             72 69 6E 67
      00025C 0A                    1815 	.db 0x0a
      00025D 00                    1816 	.db 0x00
                                   1817 	.area CSEG    (CODE)
                                   1818 	.area CONST   (CODE)
      00025E                       1819 ___str_13:
      00025E 70 72 6F 64 75 63 74  1820 	.ascii "product string"
             20 73 74 72 69 6E 67
      00026C 0A                    1821 	.db 0x0a
      00026D 00                    1822 	.db 0x00
                                   1823 	.area CSEG    (CODE)
                                   1824 	.area CONST   (CODE)
      00026E                       1825 ___str_14:
      00026E 73 65 72 69 61 6C 20  1826 	.ascii "serial string"
             73 74 72 69 6E 67
      00027B 0A                    1827 	.db 0x0a
      00027C 00                    1828 	.db 0x00
                                   1829 	.area CSEG    (CODE)
                                   1830 	.area CONST   (CODE)
      00027D                       1831 ___str_15:
      00027D 75 6E 6B 6E 6F 77 6E  1832 	.ascii "unknown string"
             20 73 74 72 69 6E 67
      00028B 0A                    1833 	.db 0x0a
      00028C 00                    1834 	.db 0x00
                                   1835 	.area CSEG    (CODE)
                                   1836 	.area CONST   (CODE)
      00028D                       1837 ___str_16:
      00028D 52 65 70 6F 72 74 20  1838 	.ascii "Report descriptor: "
             64 65 73 63 72 69 70
             74 6F 72 3A 20
      0002A0 00                    1839 	.db 0x00
                                   1840 	.area CSEG    (CODE)
                                   1841 	.area CONST   (CODE)
      0002A1                       1842 ___str_17:
      0002A1 6F 74 68 65 72 20 64  1843 	.ascii "other descriptor: "
             65 73 63 72 69 70 74
             6F 72 3A 20
      0002B3 00                    1844 	.db 0x00
                                   1845 	.area CSEG    (CODE)
                                   1846 	.area CONST   (CODE)
      0002B4                       1847 ___str_18:
      0002B4 0A                    1848 	.db 0x0a
      0002B5 00                    1849 	.db 0x00
                                   1850 	.area CSEG    (CODE)
                                   1851 	.area CONST   (CODE)
      0002B6                       1852 ___str_19:
      0002B6 47 65 74 20 69 6E 74  1853 	.ascii "Get interface"
             65 72 66 61 63 65
      0002C3 0A                    1854 	.db 0x0a
      0002C4 00                    1855 	.db 0x00
                                   1856 	.area CSEG    (CODE)
                                   1857 	.area CONST   (CODE)
      0002C5                       1858 ___str_20:
      0002C5 47 65 74 20 73 74 61  1859 	.ascii "Get status"
             74 75 73
      0002CF 0A                    1860 	.db 0x0a
      0002D0 00                    1861 	.db 0x00
                                   1862 	.area CSEG    (CODE)
                                   1863 	.area CONST   (CODE)
      0002D1                       1864 ___str_21:
      0002D1 53 79 6E 63 68 20 66  1865 	.ascii "Synch frame"
             72 61 6D 65
      0002DC 0A                    1866 	.db 0x0a
      0002DD 00                    1867 	.db 0x00
                                   1868 	.area CSEG    (CODE)
                                   1869 	.area CONST   (CODE)
      0002DE                       1870 ___str_22:
      0002DE 45 72 72 6F 72 3A 20  1871 	.ascii "Error: undefined stander request"
             75 6E 64 65 66 69 6E
             65 64 20 73 74 61 6E
             64 65 72 20 72 65 71
             75 65 73 74
      0002FE 0A                    1872 	.db 0x0a
      0002FF 00                    1873 	.db 0x00
                                   1874 	.area CSEG    (CODE)
                                   1875 	.area CONST   (CODE)
      000300                       1876 ___str_23:
      000300 55 53 42 20 63 6C 61  1877 	.ascii "USB class input request:"
             73 73 20 69 6E 70 75
             74 20 72 65 71 75 65
             73 74 3A
      000318 0A                    1878 	.db 0x0a
      000319 00                    1879 	.db 0x00
                                   1880 	.area CSEG    (CODE)
                                   1881 	.area CONST   (CODE)
      00031A                       1882 ___str_24:
      00031A 55 53 42 20 76 65 6E  1883 	.ascii "USB vendor input request:"
             64 6F 72 20 69 6E 70
             75 74 20 72 65 71 75
             65 73 74 3A
      000333 0A                    1884 	.db 0x0a
      000334 00                    1885 	.db 0x00
                                   1886 	.area CSEG    (CODE)
                                   1887 	.area CONST   (CODE)
      000335                       1888 ___str_25:
      000335 45 72 72 6F 72 3A 20  1889 	.ascii "Error: undefined input request:"
             75 6E 64 65 66 69 6E
             65 64 20 69 6E 70 75
             74 20 72 65 71 75 65
             73 74 3A
      000354 0A                    1890 	.db 0x0a
      000355 00                    1891 	.db 0x00
                                   1892 	.area CSEG    (CODE)
                                   1893 	.area CONST   (CODE)
      000356                       1894 ___str_26:
      000356 55 53 42 20 73 74 61  1895 	.ascii "USB stander output request: "
             6E 64 65 72 20 6F 75
             74 70 75 74 20 72 65
             71 75 65 73 74 3A 20
      000372 00                    1896 	.db 0x00
                                   1897 	.area CSEG    (CODE)
                                   1898 	.area CONST   (CODE)
      000373                       1899 ___str_27:
      000373 63 6C 65 61 72 20 66  1900 	.ascii "clear feature"
             65 61 74 75 72 65
      000380 0A                    1901 	.db 0x0a
      000381 00                    1902 	.db 0x00
                                   1903 	.area CSEG    (CODE)
                                   1904 	.area CONST   (CODE)
      000382                       1905 ___str_28:
      000382 73 65 74 20 61 64 64  1906 	.ascii "set address, the address is: "
             72 65 73 73 2C 20 74
             68 65 20 61 64 64 72
             65 73 73 20 69 73 3A
             20
      00039F 00                    1907 	.db 0x00
                                   1908 	.area CSEG    (CODE)
                                   1909 	.area CONST   (CODE)
      0003A0                       1910 ___str_29:
      0003A0 73 65 74 20 63 6F 6E  1911 	.ascii "set configuration"
             66 69 67 75 72 61 74
             69 6F 6E
      0003B1 0A                    1912 	.db 0x0a
      0003B2 00                    1913 	.db 0x00
                                   1914 	.area CSEG    (CODE)
                                   1915 	.area CONST   (CODE)
      0003B3                       1916 ___str_30:
      0003B3 73 65 74 20 64 65 73  1917 	.ascii "set descriptor"
             63 72 69 70 74 6F 72
      0003C1 0A                    1918 	.db 0x0a
      0003C2 00                    1919 	.db 0x00
                                   1920 	.area CSEG    (CODE)
                                   1921 	.area CONST   (CODE)
      0003C3                       1922 ___str_31:
      0003C3 73 65 74 20 66 65 61  1923 	.ascii "set feature"
             74 75 72 65
      0003CE 0A                    1924 	.db 0x0a
      0003CF 00                    1925 	.db 0x00
                                   1926 	.area CSEG    (CODE)
                                   1927 	.area CONST   (CODE)
      0003D0                       1928 ___str_32:
      0003D0 73 65 74 20 69 6E 74  1929 	.ascii "set interface"
             65 72 66 61 63 65
      0003DD 0A                    1930 	.db 0x0a
      0003DE 00                    1931 	.db 0x00
                                   1932 	.area CSEG    (CODE)
                                   1933 	.area CONST   (CODE)
      0003DF                       1934 ___str_33:
      0003DF 55 53 42 20 63 6C 61  1935 	.ascii "USB class output request:"
             73 73 20 6F 75 74 70
             75 74 20 72 65 71 75
             65 73 74 3A
      0003F8 0A                    1936 	.db 0x0a
      0003F9 00                    1937 	.db 0x00
                                   1938 	.area CSEG    (CODE)
                                   1939 	.area CONST   (CODE)
      0003FA                       1940 ___str_34:
      0003FA 73 65 74 20 69 64 6C  1941 	.ascii "set idle"
             65
      000402 0A                    1942 	.db 0x0a
      000403 00                    1943 	.db 0x00
                                   1944 	.area CSEG    (CODE)
                                   1945 	.area CONST   (CODE)
      000404                       1946 ___str_35:
      000404 75 6E 6B 6E 6F 77 6E  1947 	.ascii "unknown request"
             20 72 65 71 75 65 73
             74
      000413 0A                    1948 	.db 0x0a
      000414 00                    1949 	.db 0x00
                                   1950 	.area CSEG    (CODE)
                                   1951 	.area CONST   (CODE)
      000415                       1952 ___str_36:
      000415 55 53 42 20 76 65 6E  1953 	.ascii "USB vendor output request:"
             64 6F 72 20 6F 75 74
             70 75 74 20 72 65 71
             75 65 73 74 3A
      00042F 0A                    1954 	.db 0x0a
      000430 00                    1955 	.db 0x00
                                   1956 	.area CSEG    (CODE)
                                   1957 	.area CONST   (CODE)
      000431                       1958 ___str_37:
      000431 45 72 72 6F 72 3A 20  1959 	.ascii "Error: undefined output request."
             75 6E 64 65 66 69 6E
             65 64 20 6F 75 74 70
             75 74 20 72 65 71 75
             65 73 74 2E
      000451 0A                    1960 	.db 0x0a
      000452 00                    1961 	.db 0x00
                                   1962 	.area CSEG    (CODE)
                                   1963 	.area CONST   (CODE)
      000453                       1964 ___str_38:
      000453 75 73 62 20 69 73 72  1965 	.ascii "usb isr ep0 in"
             20 65 70 30 20 69 6E
      000461 0A                    1966 	.db 0x0a
      000462 00                    1967 	.db 0x00
                                   1968 	.area CSEG    (CODE)
                                   1969 	.area CONST   (CODE)
      000463                       1970 ___str_39:
      000463 75 73 62 20 63 6F 72  1971 	.ascii "usb core ep1 out"
             65 20 65 70 31 20 6F
             75 74
      000473 0A                    1972 	.db 0x0a
      000474 00                    1973 	.db 0x00
                                   1974 	.area CSEG    (CODE)
                                   1975 	.area CONST   (CODE)
      000475                       1976 ___str_40:
      000475 75 73 62 20 63 6F 72  1977 	.ascii "usb core ep1 in"
             65 20 65 70 31 20 69
             6E
      000484 0A                    1978 	.db 0x0a
      000485 00                    1979 	.db 0x00
                                   1980 	.area CSEG    (CODE)
                                   1981 	.area CONST   (CODE)
      000486                       1982 ___str_41:
      000486 75 73 62 20 63 6F 72  1983 	.ascii "usb core ep2 out"
             65 20 65 70 32 20 6F
             75 74
      000496 0A                    1984 	.db 0x0a
      000497 00                    1985 	.db 0x00
                                   1986 	.area CSEG    (CODE)
                                   1987 	.area CONST   (CODE)
      000498                       1988 ___str_42:
      000498 75 73 62 20 63 6F 72  1989 	.ascii "usb core ep2 in"
             65 20 65 70 32 20 69
             6E
      0004A7 0A                    1990 	.db 0x0a
      0004A8 00                    1991 	.db 0x00
                                   1992 	.area CSEG    (CODE)
                                   1993 	.area XINIT   (CODE)
                                   1994 	.area CABS    (ABS,CODE)
